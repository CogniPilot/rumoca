{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Poetry Install (if needed)",
      "type": "shell",
      "options": { "cwd": "${workspaceFolder}/tests/notebooks/python" },
      "command": "if [ ! -d .venv ]; then \
  echo 'üîß Creating Poetry environment...'; \
  poetry install; \
elif [ ! -d .venv/lib/python3.12/site-packages ]; then \
  echo '‚öôÔ∏è  Missing site-packages; reinstalling...'; \
  poetry install; \
elif [ poetry.lock -nt .venv/lib/python3.12/site-packages ]; then \
  echo 'üîÑ Dependencies changed; reinstalling...'; \
  poetry install; \
else \
  echo '‚úÖ Environment up to date'; \
fi",
      "problemMatcher": [],
      "presentation": { "reveal": "never", "close": true },
      "runOptions": { "runOn": "folderOpen" }
    },
    {
      "label": "Register Jupyter Kernel (Poetry)",
      "type": "shell",
      "options": { "cwd": "${workspaceFolder}/tests/notebooks/python" },
      "command": "poetry run python -m ipykernel install --user --name=rumoca --display-name \"Python (rumoca)\"",
      "problemMatcher": [],
      "presentation": { "reveal": "never", "close": true },
      "detail": "Registers the Poetry environment as a Jupyter kernel"
    },
    {
      "label": "Setup Poetry Environment",
      "dependsOn": ["Poetry Install (if needed)", "Register Jupyter Kernel (Poetry)"],
      "dependsOrder": "sequence",
      "runOptions": { "runOn": "folderOpen" }
    }
  ]
}
