// ---------------------------------------------------------
// This file was generated by parol.
// It is not intended for manual editing and changes will be
// lost after next build.
// ---------------------------------------------------------

use parol_runtime::once_cell::sync::Lazy;
#[allow(unused_imports)]
use parol_runtime::parser::{LLKParser, LookaheadDFA, ParseTreeType, ParseType, Production, Trans};
use parol_runtime::{ParolError, ParseTree, TerminalIndex};
use parol_runtime::{ScannerConfig, TokenStream, Tokenizer};
use std::path::Path;

use crate::modelica_grammar::ModelicaGrammar;
use crate::modelica_grammar_trait::ModelicaGrammarAuto;

use parol_runtime::lexer::tokenizer::{
    ERROR_TOKEN, NEW_LINE_TOKEN, UNMATCHABLE_TOKEN, WHITESPACE_TOKEN,
};

pub const TERMINALS: &[(&str, Option<(bool, &str)>); 100] = &[
    /*   0 */ (UNMATCHABLE_TOKEN, None),
    /*   1 */ (UNMATCHABLE_TOKEN, None),
    /*   2 */ (UNMATCHABLE_TOKEN, None),
    /*   3 */ (UNMATCHABLE_TOKEN, None),
    /*   4 */ (UNMATCHABLE_TOKEN, None),
    /*   5 */ (r"algorithm", None),
    /*   6 */ (r"and", None),
    /*   7 */ (r"annotation", None),
    /*   8 */ (r"block", None),
    /*   9 */ (r"break", None),
    /*  10 */ (r"class", None),
    /*  11 */ (r"connect", None),
    /*  12 */ (r"connector", None),
    /*  13 */ (r"constant", None),
    /*  14 */ (r"constrainedby", None),
    /*  15 */ (r"der", None),
    /*  16 */ (r"discrete", None),
    /*  17 */ (r"each", None),
    /*  18 */ (r"else", None),
    /*  19 */ (r"elseif", None),
    /*  20 */ (r"elsewhen", None),
    /*  21 */ (r"encapsulated", None),
    /*  22 */ (r"end", None),
    /*  23 */ (r"enumeration", None),
    /*  24 */ (r"equation", None),
    /*  25 */ (r"expandable", None),
    /*  26 */ (r"extends", None),
    /*  27 */ (r"external", None),
    /*  28 */ (r"false", None),
    /*  29 */ (r"final", None),
    /*  30 */ (r"flow", None),
    /*  31 */ (r"for", None),
    /*  32 */ (r"function", None),
    /*  33 */ (r"if", None),
    /*  34 */ (r"import", None),
    /*  35 */ (r"impure", None),
    /*  36 */ (r"in", None),
    /*  37 */ (r"initial", None),
    /*  38 */ (r"inner", None),
    /*  39 */ (r"input", None),
    /*  40 */ (r"loop", None),
    /*  41 */ (r"model", None),
    /*  42 */ (r"not", None),
    /*  43 */ (r"operator", None),
    /*  44 */ (r"or", None),
    /*  45 */ (r"outer", None),
    /*  46 */ (r"output", None),
    /*  47 */ (r"package", None),
    /*  48 */ (r"parameter", None),
    /*  49 */ (r"partial", None),
    /*  50 */ (r"protected", None),
    /*  51 */ (r"public", None),
    /*  52 */ (r"pure", None),
    /*  53 */ (r"record", None),
    /*  54 */ (r"redeclare", None),
    /*  55 */ (r"replaceable", None),
    /*  56 */ (r"return", None),
    /*  57 */ (r"stream", None),
    /*  58 */ (r"then", None),
    /*  59 */ (r"true", None),
    /*  60 */ (r"type", None),
    /*  61 */ (r"when", None),
    /*  62 */ (r"while", None),
    /*  63 */ (r"within", None),
    /*  64 */ (r"[_a-zA-Z][_a-zA-Z0-9]*", None),
    /*  65 */
    (
        r#"\'[_a-zA-Z0-9!#\$%&\(\)\*\+,-\.\/:;<>=\?@\[\]\^\{\}\|~ \"]*\'"#,
        None,
    ),
    /*  66 */ (r#""[' \w]*""#, None),
    /*  67 */ (r"[0-9]+", None),
    /*  68 */ (r"[0-9]+\.[0-9]+", None),
    /*  69 */ (r"[0-9]+\.([0-9]+)?([eE][+-]?[0-9]+)?", None),
    /*  70 */ (r"\.[0-9]+([eE][+-]?[0-9]+)?", None),
    /*  71 */ (r";", None),
    /*  72 */ (r"=", None),
    /*  73 */ (r"\(", None),
    /*  74 */ (r"\)", None),
    /*  75 */ (r":", None),
    /*  76 */ (r",", None),
    /*  77 */ (r"\.\*", None),
    /*  78 */ (r"\.", None),
    /*  79 */ (r"\*", None),
    /*  80 */ (r"\{", None),
    /*  81 */ (r"\}", None),
    /*  82 */ (r":=", None),
    /*  83 */ (r"<", None),
    /*  84 */ (r"<=", None),
    /*  85 */ (r">", None),
    /*  86 */ (r">=", None),
    /*  87 */ (r"==", None),
    /*  88 */ (r"<>", None),
    /*  89 */ (r"\+", None),
    /*  90 */ (r"\-", None),
    /*  91 */ (r"\.\+", None),
    /*  92 */ (r"\.\-", None),
    /*  93 */ (r"/", None),
    /*  94 */ (r"\./", None),
    /*  95 */ (r"\^", None),
    /*  96 */ (r"\.\^", None),
    /*  97 */ (r"\[", None),
    /*  98 */ (r"\]", None),
    /*  99 */ (ERROR_TOKEN, None),
];

pub const TERMINAL_NAMES : & [& str; 100] = &
[    /*   0 */ "EndOfInput",
    /*   1 */ "Newline",
    /*   2 */ "Whitespace",
    /*   3 */ "LineComment",
    /*   4 */ "BlockComment",
    /*   5 */ "Algorithm",
    /*   6 */ "And",
    /*   7 */ "Annotation",
    /*   8 */ "Block",
    /*   9 */ "Break",
    /*  10 */ "Class",
    /*  11 */ "Connect",
    /*  12 */ "Connector",
    /*  13 */ "Constant",
    /*  14 */ "Constrainedby",
    /*  15 */ "Der",
    /*  16 */ "Discrete",
    /*  17 */ "Each",
    /*  18 */ "Else",
    /*  19 */ "Elseif",
    /*  20 */ "Elsewhen",
    /*  21 */ "Encapsulated",
    /*  22 */ "End",
    /*  23 */ "Enumeration",
    /*  24 */ "Equation",
    /*  25 */ "Expandable",
    /*  26 */ "Extends",
    /*  27 */ "External",
    /*  28 */ "False",
    /*  29 */ "Final",
    /*  30 */ "Flow",
    /*  31 */ "For",
    /*  32 */ "Function",
    /*  33 */ "If",
    /*  34 */ "Import",
    /*  35 */ "Impure",
    /*  36 */ "In",
    /*  37 */ "Initial",
    /*  38 */ "Inner",
    /*  39 */ "Input",
    /*  40 */ "Loop",
    /*  41 */ "Model",
    /*  42 */ "Not",
    /*  43 */ "Operator",
    /*  44 */ "Or",
    /*  45 */ "Outer",
    /*  46 */ "Output",
    /*  47 */ "Package",
    /*  48 */ "Parameter",
    /*  49 */ "Partial",
    /*  50 */ "Protected",
    /*  51 */ "Public",
    /*  52 */ "Pure",
    /*  53 */ "Record",
    /*  54 */ "Redeclare",
    /*  55 */ "Replaceable",
    /*  56 */ "Return",
    /*  57 */ "Stream",
    /*  58 */ "Then",
    /*  59 */ "True",
    /*  60 */ "Type",
    /*  61 */ "When",
    /*  62 */ "While",
    /*  63 */ "Within",
    /*  64 */ "LBracketUnderscoreAMinusZAMinusZRBracketLBracketUnderscoreAMinusZAMinusZ0Minus9RBracketStar",
    /*  65 */ "TickLBracketUnderscoreAMinusZAMinusZ0Minus9BangHashDollarPercentAmpLParenRParenStarPlusCommaMinusDotSlashColonSemicolonLTGTEquQuestAtLBracketRBracketCircumflexLBraceRBraceOrTilde_QuoteRBracketStarTick",
    /*  66 */ "String",
    /*  67 */ "UnsignedInteger",
    /*  68 */ "LBracket0Minus9RBracketPlusDotLBracket0Minus9RBracketPlus",
    /*  69 */ "LBracket0Minus9RBracketPlusDotLParenLBracket0Minus9RBracketPlusRParenQuestLParenLBracketEERBracketLBracketPlusMinusRBracketQuestLBracket0Minus9RBracketPlusRParenQuest",
    /*  70 */ "DotLBracket0Minus9RBracketPlusLParenLBracketEERBracketLBracketPlusMinusRBracketQuestLBracket0Minus9RBracketPlusRParenQuest",
    /*  71 */ "Semicolon",
    /*  72 */ "Equ",
    /*  73 */ "LParen",
    /*  74 */ "RParen",
    /*  75 */ "Colon",
    /*  76 */ "Comma",
    /*  77 */ "DotStar",
    /*  78 */ "Dot",
    /*  79 */ "Star",
    /*  80 */ "LBrace",
    /*  81 */ "RBrace",
    /*  82 */ "ColonEqu",
    /*  83 */ "LT",
    /*  84 */ "LTEqu",
    /*  85 */ "GT",
    /*  86 */ "GTEqu",
    /*  87 */ "EquEqu",
    /*  88 */ "LTGT",
    /*  89 */ "Plus",
    /*  90 */ "Minus",
    /*  91 */ "DotPlus",
    /*  92 */ "DotMinus",
    /*  93 */ "Slash",
    /*  94 */ "DotSlash",
    /*  95 */ "Circumflex",
    /*  96 */ "DotCircumflex",
    /*  97 */ "LBracket",
    /*  98 */ "RBracket",
    /*  99 */ "Error",
];

/* SCANNER_0: "INITIAL" */
const SCANNER_0: (&[&str; 5], &[TerminalIndex; 94]) = (
    &[
        /*   0 */ UNMATCHABLE_TOKEN,
        /*   1 */ NEW_LINE_TOKEN,
        /*   2 */ WHITESPACE_TOKEN,
        /*   3 */ r"//.*(\r\n|\r|\n)?",
        /*   4 */ r"/\*([^*]|\*[^/])*\*/",
    ],
    &[
        5,  /* Algorithm */
        6,  /* And */
        7,  /* Annotation */
        8,  /* Block */
        9,  /* Break */
        10, /* Class */
        11, /* Connect */
        12, /* Connector */
        13, /* Constant */
        14, /* Constrainedby */
        15, /* Der */
        16, /* Discrete */
        17, /* Each */
        18, /* Else */
        19, /* Elseif */
        20, /* Elsewhen */
        21, /* Encapsulated */
        22, /* End */
        23, /* Enumeration */
        24, /* Equation */
        25, /* Expandable */
        26, /* Extends */
        27, /* External */
        28, /* False */
        29, /* Final */
        30, /* Flow */
        31, /* For */
        32, /* Function */
        33, /* If */
        34, /* Import */
        35, /* Impure */
        36, /* In */
        37, /* Initial */
        38, /* Inner */
        39, /* Input */
        40, /* Loop */
        41, /* Model */
        42, /* Not */
        43, /* Operator */
        44, /* Or */
        45, /* Outer */
        46, /* Output */
        47, /* Package */
        48, /* Parameter */
        49, /* Partial */
        50, /* Protected */
        51, /* Public */
        52, /* Pure */
        53, /* Record */
        54, /* Redeclare */
        55, /* Replaceable */
        56, /* Return */
        57, /* Stream */
        58, /* Then */
        59, /* True */
        60, /* Type */
        61, /* When */
        62, /* While */
        63, /* Within */
        64, /* LBracketUnderscoreAMinusZAMinusZRBracketLBracketUnderscoreAMinusZAMinusZ0Minus9RBracketStar */
        65, /* TickLBracketUnderscoreAMinusZAMinusZ0Minus9BangHashDollarPercentAmpLParenRParenStarPlusCommaMinusDotSlashColonSemicolonLTGTEquQuestAtLBracketRBracketCircumflexLBraceRBraceOrTilde_QuoteRBracketStarTick */
        66, /* String */
        67, /* UnsignedInteger */
        68, /* LBracket0Minus9RBracketPlusDotLBracket0Minus9RBracketPlus */
        69, /* LBracket0Minus9RBracketPlusDotLParenLBracket0Minus9RBracketPlusRParenQuestLParenLBracketEERBracketLBracketPlusMinusRBracketQuestLBracket0Minus9RBracketPlusRParenQuest */
        70, /* DotLBracket0Minus9RBracketPlusLParenLBracketEERBracketLBracketPlusMinusRBracketQuestLBracket0Minus9RBracketPlusRParenQuest */
        71, /* Semicolon */
        72, /* Equ */
        73, /* LParen */
        74, /* RParen */
        75, /* Colon */
        76, /* Comma */
        77, /* DotStar */
        78, /* Dot */
        79, /* Star */
        80, /* LBrace */
        81, /* RBrace */
        82, /* ColonEqu */
        83, /* LT */
        84, /* LTEqu */
        85, /* GT */
        86, /* GTEqu */
        87, /* EquEqu */
        88, /* LTGT */
        89, /* Plus */
        90, /* Minus */
        91, /* DotPlus */
        92, /* DotMinus */
        93, /* Slash */
        94, /* DotSlash */
        95, /* Circumflex */
        96, /* DotCircumflex */
        97, /* LBracket */
        98, /* RBracket */
    ],
);

const MAX_K: usize = 3;

pub const NON_TERMINALS: &[&str; 306] = &[
    /*   0 */ "add_operator",
    /*   1 */ "algorithm",
    /*   2 */ "algorithm_section",
    /*   3 */ "algorithm_sectionList",
    /*   4 */ "algorithm_sectionOpt",
    /*   5 */ "and",
    /*   6 */ "annotation",
    /*   7 */ "annotation_clause",
    /*   8 */ "argument",
    /*   9 */ "argument_list",
    /*  10 */ "argument_listList",
    /*  11 */ "argument_or_inheritance_modification_list",
    /*  12 */ "argument_or_inheritance_modification_listGroup",
    /*  13 */ "argument_or_inheritance_modification_listList",
    /*  14 */ "argument_or_inheritance_modification_listListGroup",
    /*  15 */ "arithmetic_expression",
    /*  16 */ "arithmetic_expressionList",
    /*  17 */ "arithmetic_expressionOpt",
    /*  18 */ "array_arguments",
    /*  19 */ "array_argumentsOpt",
    /*  20 */ "array_argumentsOptGroup",
    /*  21 */ "array_arguments_non_first",
    /*  22 */ "array_arguments_non_firstOpt",
    /*  23 */ "array_primary",
    /*  24 */ "array_subscripts",
    /*  25 */ "array_subscriptsList",
    /*  26 */ "base_prefix",
    /*  27 */ "base_prefixOpt",
    /*  28 */ "base_prefixOptGroup",
    /*  29 */ "block",
    /*  30 */ "break",
    /*  31 */ "class",
    /*  32 */ "class_definition",
    /*  33 */ "class_definitionOpt",
    /*  34 */ "class_modification",
    /*  35 */ "class_modificationOpt",
    /*  36 */ "class_or_inheritance_modification",
    /*  37 */ "class_or_inheritance_modificationOpt",
    /*  38 */ "class_prefixes",
    /*  39 */ "class_prefixesOpt",
    /*  40 */ "class_specifier",
    /*  41 */ "class_type",
    /*  42 */ "class_typeOpt",
    /*  43 */ "class_typeOpt0",
    /*  44 */ "class_typeOpt1",
    /*  45 */ "class_typeOpt1Group",
    /*  46 */ "class_typeOpt2",
    /*  47 */ "component_clause",
    /*  48 */ "component_clause1",
    /*  49 */ "component_clauseOpt",
    /*  50 */ "component_declaration",
    /*  51 */ "component_declaration1",
    /*  52 */ "component_declarationOpt",
    /*  53 */ "component_list",
    /*  54 */ "component_listList",
    /*  55 */ "component_primary",
    /*  56 */ "component_primaryOpt",
    /*  57 */ "component_ref_part",
    /*  58 */ "component_ref_partOpt",
    /*  59 */ "component_reference",
    /*  60 */ "component_referenceList",
    /*  61 */ "component_referenceOpt",
    /*  62 */ "component_referenceOpt0",
    /*  63 */ "component_statement",
    /*  64 */ "component_statementGroup",
    /*  65 */ "composition",
    /*  66 */ "compositionList",
    /*  67 */ "compositionListGroup",
    /*  68 */ "compositionOpt",
    /*  69 */ "compositionOpt0",
    /*  70 */ "compositionOpt1",
    /*  71 */ "compositionOpt2",
    /*  72 */ "compositionOpt3",
    /*  73 */ "condition_attribute",
    /*  74 */ "connect",
    /*  75 */ "connect_equation",
    /*  76 */ "connector",
    /*  77 */ "constant",
    /*  78 */ "constrainedby",
    /*  79 */ "constraining_clause",
    /*  80 */ "constraining_clauseOpt",
    /*  81 */ "declaration",
    /*  82 */ "declarationOpt",
    /*  83 */ "declarationOpt0",
    /*  84 */ "der",
    /*  85 */ "der_class_specifier",
    /*  86 */ "der_class_specifierList",
    /*  87 */ "description",
    /*  88 */ "descriptionOpt",
    /*  89 */ "description_string",
    /*  90 */ "description_stringOpt",
    /*  91 */ "description_stringOptList",
    /*  92 */ "discrete",
    /*  93 */ "each",
    /*  94 */ "element",
    /*  95 */ "element_definition",
    /*  96 */ "element_definitionGroup",
    /*  97 */ "element_definitionOpt",
    /*  98 */ "element_definitionOpt0",
    /*  99 */ "element_definitionOpt1",
    /* 100 */ "element_definitionOpt2",
    /* 101 */ "element_list",
    /* 102 */ "element_listList",
    /* 103 */ "element_modification",
    /* 104 */ "element_modificationOpt",
    /* 105 */ "element_modification_or_replaceable",
    /* 106 */ "element_modification_or_replaceableGroup",
    /* 107 */ "element_modification_or_replaceableOpt",
    /* 108 */ "element_modification_or_replaceableOpt0",
    /* 109 */ "element_redeclaration",
    /* 110 */ "element_redeclarationGroup",
    /* 111 */ "element_redeclarationOpt",
    /* 112 */ "element_redeclarationOpt0",
    /* 113 */ "element_replaceable",
    /* 114 */ "element_replaceableGroup",
    /* 115 */ "element_replaceableOpt",
    /* 116 */ "element_replaceable_definition",
    /* 117 */ "element_replaceable_definitionGroup",
    /* 118 */ "element_replaceable_definitionOpt",
    /* 119 */ "else",
    /* 120 */ "elseif",
    /* 121 */ "elsewhen",
    /* 122 */ "encapsulated",
    /* 123 */ "end",
    /* 124 */ "enum_class_specifier",
    /* 125 */ "enum_class_specifierGroup",
    /* 126 */ "enum_class_specifierOpt",
    /* 127 */ "enum_list",
    /* 128 */ "enum_listList",
    /* 129 */ "enumeration",
    /* 130 */ "enumeration_literal",
    /* 131 */ "equation",
    /* 132 */ "equation_block",
    /* 133 */ "equation_blockList",
    /* 134 */ "equation_section",
    /* 135 */ "equation_sectionList",
    /* 136 */ "equation_sectionOpt",
    /* 137 */ "expandable",
    /* 138 */ "expression",
    /* 139 */ "expression_list",
    /* 140 */ "expression_listList",
    /* 141 */ "extends",
    /* 142 */ "extends_class_specifier",
    /* 143 */ "extends_class_specifierOpt",
    /* 144 */ "extends_clause",
    /* 145 */ "extends_clauseOpt",
    /* 146 */ "extends_clauseOpt0",
    /* 147 */ "external",
    /* 148 */ "external_function_call",
    /* 149 */ "external_function_callOpt",
    /* 150 */ "external_function_callOpt0",
    /* 151 */ "factor",
    /* 152 */ "factorList",
    /* 153 */ "factorListGroup",
    /* 154 */ "false",
    /* 155 */ "final",
    /* 156 */ "flow",
    /* 157 */ "for",
    /* 158 */ "for_equation",
    /* 159 */ "for_equationList",
    /* 160 */ "for_index",
    /* 161 */ "for_indexOpt",
    /* 162 */ "for_indices",
    /* 163 */ "for_indicesList",
    /* 164 */ "for_statement",
    /* 165 */ "for_statementList",
    /* 166 */ "function",
    /* 167 */ "function_argument",
    /* 168 */ "function_arguments",
    /* 169 */ "function_argumentsOpt",
    /* 170 */ "function_argumentsOpt0",
    /* 171 */ "function_argumentsOptGroup",
    /* 172 */ "function_arguments_non_first",
    /* 173 */ "function_arguments_non_firstOpt",
    /* 174 */ "function_call_args",
    /* 175 */ "function_call_argsOpt",
    /* 176 */ "function_call_output_statement",
    /* 177 */ "function_partial_application",
    /* 178 */ "function_partial_applicationOpt",
    /* 179 */ "global_function_call",
    /* 180 */ "global_function_callGroup",
    /* 181 */ "ident",
    /* 182 */ "if",
    /* 183 */ "if_equation",
    /* 184 */ "if_equationList",
    /* 185 */ "if_equationOpt",
    /* 186 */ "if_equationOptList",
    /* 187 */ "if_expression",
    /* 188 */ "if_expressionList",
    /* 189 */ "if_statement",
    /* 190 */ "if_statementList",
    /* 191 */ "if_statementOpt",
    /* 192 */ "if_statementOptList",
    /* 193 */ "import",
    /* 194 */ "import_clause",
    /* 195 */ "import_clauseGroup",
    /* 196 */ "import_clauseOpt",
    /* 197 */ "import_clauseOptGroup",
    /* 198 */ "import_clauseOptGroupGroup",
    /* 199 */ "import_list",
    /* 200 */ "import_listList",
    /* 201 */ "impure",
    /* 202 */ "in",
    /* 203 */ "inheritance_modification",
    /* 204 */ "inheritance_modificationGroup",
    /* 205 */ "initial",
    /* 206 */ "inner",
    /* 207 */ "input",
    /* 208 */ "language_specification",
    /* 209 */ "logical_expression",
    /* 210 */ "logical_expressionList",
    /* 211 */ "logical_factor",
    /* 212 */ "logical_factorOpt",
    /* 213 */ "logical_term",
    /* 214 */ "logical_termList",
    /* 215 */ "long_class_specifier",
    /* 216 */ "loop",
    /* 217 */ "model",
    /* 218 */ "modification",
    /* 219 */ "modificationOpt",
    /* 220 */ "modification_expression",
    /* 221 */ "mul_operator",
    /* 222 */ "name",
    /* 223 */ "nameList",
    /* 224 */ "named_argument",
    /* 225 */ "named_arguments",
    /* 226 */ "named_argumentsOpt",
    /* 227 */ "not",
    /* 228 */ "operator",
    /* 229 */ "or",
    /* 230 */ "outer",
    /* 231 */ "output",
    /* 232 */ "output_expression_list",
    /* 233 */ "output_expression_listList",
    /* 234 */ "output_expression_listOpt",
    /* 235 */ "output_expression_listOpt0",
    /* 236 */ "output_primary",
    /* 237 */ "output_primaryOpt",
    /* 238 */ "output_primaryOptGroup",
    /* 239 */ "package",
    /* 240 */ "parameter",
    /* 241 */ "partial",
    /* 242 */ "primary",
    /* 243 */ "protected",
    /* 244 */ "public",
    /* 245 */ "pure",
    /* 246 */ "range_primary",
    /* 247 */ "range_primaryList",
    /* 248 */ "record",
    /* 249 */ "redeclare",
    /* 250 */ "relation",
    /* 251 */ "relationOpt",
    /* 252 */ "relational_operator",
    /* 253 */ "replaceable",
    /* 254 */ "return",
    /* 255 */ "short_class_definition",
    /* 256 */ "short_class_specifier",
    /* 257 */ "simple_equation",
    /* 258 */ "simple_equationOpt",
    /* 259 */ "simple_expression",
    /* 260 */ "simple_expressionOpt",
    /* 261 */ "simple_expressionOpt0",
    /* 262 */ "some_equation",
    /* 263 */ "some_equation_option",
    /* 264 */ "standard_class_specifier",
    /* 265 */ "statement",
    /* 266 */ "statement_block",
    /* 267 */ "statement_blockList",
    /* 268 */ "statement_option",
    /* 269 */ "stored_definition",
    /* 270 */ "stored_definitionList",
    /* 271 */ "stored_definitionOpt",
    /* 272 */ "stored_definitionOpt0",
    /* 273 */ "stored_definitionOpt1",
    /* 274 */ "stream",
    /* 275 */ "string",
    /* 276 */ "subscript",
    /* 277 */ "term",
    /* 278 */ "termList",
    /* 279 */ "then",
    /* 280 */ "true",
    /* 281 */ "type",
    /* 282 */ "type_class_specifier",
    /* 283 */ "type_class_specifierOpt",
    /* 284 */ "type_class_specifierOpt0",
    /* 285 */ "type_prefix",
    /* 286 */ "type_prefixOpt",
    /* 287 */ "type_prefixOpt0",
    /* 288 */ "type_prefixOpt0Group",
    /* 289 */ "type_prefixOpt1",
    /* 290 */ "type_prefixOpt1Group",
    /* 291 */ "type_prefixOptGroup",
    /* 292 */ "type_specifier",
    /* 293 */ "type_specifierOpt",
    /* 294 */ "unsigned_integer",
    /* 295 */ "unsigned_number",
    /* 296 */ "unsigned_real",
    /* 297 */ "when",
    /* 298 */ "when_equation",
    /* 299 */ "when_equationList",
    /* 300 */ "when_statement",
    /* 301 */ "when_statementList",
    /* 302 */ "while",
    /* 303 */ "while_statement",
    /* 304 */ "while_statementList",
    /* 305 */ "within",
];

pub const LOOKAHEAD_AUTOMATA: &[LookaheadDFA; 306] = &[
    /* 0 - "add_operator" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 89, 1, 388),
            Trans(0, 90, 2, 389),
            Trans(0, 91, 3, 390),
            Trans(0, 92, 4, 391),
        ],
        k: 1,
    },
    /* 1 - "algorithm" */
    LookaheadDFA {
        prod0: 0,
        transitions: &[],
        k: 0,
    },
    /* 2 - "algorithm_section" */
    LookaheadDFA {
        prod0: 286,
        transitions: &[],
        k: 0,
    },
    /* 3 - "algorithm_sectionList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 2, 288),
            Trans(0, 7, 2, 288),
            Trans(0, 9, 1, 287),
            Trans(0, 22, 2, 288),
            Trans(0, 24, 2, 288),
            Trans(0, 27, 2, 288),
            Trans(0, 31, 1, 287),
            Trans(0, 33, 1, 287),
            Trans(0, 37, 2, 288),
            Trans(0, 50, 2, 288),
            Trans(0, 51, 2, 288),
            Trans(0, 56, 1, 287),
            Trans(0, 61, 1, 287),
            Trans(0, 62, 1, 287),
            Trans(0, 64, 1, 287),
            Trans(0, 65, 1, 287),
            Trans(0, 73, 1, 287),
            Trans(0, 78, 1, 287),
        ],
        k: 1,
    },
    /* 4 - "algorithm_sectionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 5, 2, 290), Trans(0, 37, 1, 289)],
        k: 1,
    },
    /* 5 - "and" */
    LookaheadDFA {
        prod0: 1,
        transitions: &[],
        k: 0,
    },
    /* 6 - "annotation" */
    LookaheadDFA {
        prod0: 2,
        transitions: &[],
        k: 0,
    },
    /* 7 - "annotation_clause" */
    LookaheadDFA {
        prod0: 504,
        transitions: &[],
        k: 0,
    },
    /* 8 - "argument" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 17, 1, 253),
            Trans(0, 29, 1, 253),
            Trans(0, 54, 2, 254),
            Trans(0, 55, 1, 253),
            Trans(0, 64, 1, 253),
            Trans(0, 65, 1, 253),
        ],
        k: 1,
    },
    /* 9 - "argument_list" */
    LookaheadDFA {
        prod0: 250,
        transitions: &[],
        k: 0,
    },
    /* 10 - "argument_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 252), Trans(0, 76, 1, 251)],
        k: 1,
    },
    /* 11 - "argument_or_inheritance_modification_list" */
    LookaheadDFA {
        prod0: 202,
        transitions: &[],
        k: 0,
    },
    /* 12 - "argument_or_inheritance_modification_listGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 2, 204),
            Trans(0, 17, 1, 203),
            Trans(0, 29, 1, 203),
            Trans(0, 54, 1, 203),
            Trans(0, 55, 1, 203),
            Trans(0, 64, 1, 203),
            Trans(0, 65, 1, 203),
        ],
        k: 1,
    },
    /* 13 - "argument_or_inheritance_modification_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 208), Trans(0, 76, 1, 205)],
        k: 1,
    },
    /* 14 - "argument_or_inheritance_modification_listListGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 2, 207),
            Trans(0, 17, 1, 206),
            Trans(0, 29, 1, 206),
            Trans(0, 54, 1, 206),
            Trans(0, 55, 1, 206),
            Trans(0, 64, 1, 206),
            Trans(0, 65, 1, 206),
        ],
        k: 1,
    },
    /* 15 - "arithmetic_expression" */
    LookaheadDFA {
        prod0: 383,
        transitions: &[],
        k: 0,
    },
    /* 16 - "arithmetic_expressionList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 385),
            Trans(0, 7, 2, 385),
            Trans(0, 14, 2, 385),
            Trans(0, 18, 2, 385),
            Trans(0, 19, 2, 385),
            Trans(0, 31, 2, 385),
            Trans(0, 33, 2, 385),
            Trans(0, 40, 2, 385),
            Trans(0, 44, 2, 385),
            Trans(0, 58, 2, 385),
            Trans(0, 66, 2, 385),
            Trans(0, 71, 2, 385),
            Trans(0, 72, 2, 385),
            Trans(0, 74, 2, 385),
            Trans(0, 75, 2, 385),
            Trans(0, 76, 2, 385),
            Trans(0, 81, 2, 385),
            Trans(0, 83, 2, 385),
            Trans(0, 84, 2, 385),
            Trans(0, 85, 2, 385),
            Trans(0, 86, 2, 385),
            Trans(0, 87, 2, 385),
            Trans(0, 88, 2, 385),
            Trans(0, 89, 1, 384),
            Trans(0, 90, 1, 384),
            Trans(0, 91, 1, 384),
            Trans(0, 92, 1, 384),
            Trans(0, 98, 2, 385),
        ],
        k: 1,
    },
    /* 17 - "arithmetic_expressionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 2, 387),
            Trans(0, 22, 2, 387),
            Trans(0, 28, 2, 387),
            Trans(0, 37, 2, 387),
            Trans(0, 52, 2, 387),
            Trans(0, 59, 2, 387),
            Trans(0, 64, 2, 387),
            Trans(0, 65, 2, 387),
            Trans(0, 66, 2, 387),
            Trans(0, 67, 2, 387),
            Trans(0, 68, 2, 387),
            Trans(0, 69, 2, 387),
            Trans(0, 70, 2, 387),
            Trans(0, 73, 2, 387),
            Trans(0, 78, 2, 387),
            Trans(0, 80, 2, 387),
            Trans(0, 89, 1, 386),
            Trans(0, 90, 1, 386),
            Trans(0, 91, 1, 386),
            Trans(0, 92, 1, 386),
            Trans(0, 97, 2, 387),
        ],
        k: 1,
    },
    /* 18 - "array_arguments" */
    LookaheadDFA {
        prod0: 464,
        transitions: &[],
        k: 0,
    },
    /* 19 - "array_argumentsOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 31, 1, 465),
            Trans(0, 76, 1, 465),
            Trans(0, 81, 2, 468),
        ],
        k: 1,
    },
    /* 20 - "array_argumentsOptGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 31, 2, 467), Trans(0, 76, 1, 466)],
        k: 1,
    },
    /* 21 - "array_arguments_non_first" */
    LookaheadDFA {
        prod0: 469,
        transitions: &[],
        k: 0,
    },
    /* 22 - "array_arguments_non_firstOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 76, 1, 470), Trans(0, 81, 2, 471)],
        k: 1,
    },
    /* 23 - "array_primary" */
    LookaheadDFA {
        prod0: 425,
        transitions: &[],
        k: 0,
    },
    /* 24 - "array_subscripts" */
    LookaheadDFA {
        prod0: 491,
        transitions: &[],
        k: 0,
    },
    /* 25 - "array_subscriptsList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 76, 1, 492), Trans(0, 98, 2, 493)],
        k: 1,
    },
    /* 26 - "base_prefix" */
    LookaheadDFA {
        prod0: 124,
        transitions: &[],
        k: 0,
    },
    /* 27 - "base_prefixOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 39, 1, 125),
            Trans(0, 46, 1, 125),
            Trans(0, 64, 2, 128),
            Trans(0, 65, 2, 128),
            Trans(0, 78, 2, 128),
        ],
        k: 1,
    },
    /* 28 - "base_prefixOptGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 39, 1, 126), Trans(0, 46, 2, 127)],
        k: 1,
    },
    /* 29 - "block" */
    LookaheadDFA {
        prod0: 3,
        transitions: &[],
        k: 0,
    },
    /* 30 - "break" */
    LookaheadDFA {
        prod0: 4,
        transitions: &[],
        k: 0,
    },
    /* 31 - "class" */
    LookaheadDFA {
        prod0: 5,
        transitions: &[],
        k: 0,
    },
    /* 32 - "class_definition" */
    LookaheadDFA {
        prod0: 75,
        transitions: &[],
        k: 0,
    },
    /* 33 - "class_definitionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 77),
            Trans(0, 10, 2, 77),
            Trans(0, 12, 2, 77),
            Trans(0, 21, 1, 76),
            Trans(0, 25, 2, 77),
            Trans(0, 32, 2, 77),
            Trans(0, 35, 2, 77),
            Trans(0, 41, 2, 77),
            Trans(0, 43, 2, 77),
            Trans(0, 47, 2, 77),
            Trans(0, 49, 2, 77),
            Trans(0, 52, 2, 77),
            Trans(0, 53, 2, 77),
            Trans(0, 60, 2, 77),
        ],
        k: 1,
    },
    /* 34 - "class_modification" */
    LookaheadDFA {
        prod0: 247,
        transitions: &[],
        k: 0,
    },
    /* 35 - "class_modificationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 17, 1, 248),
            Trans(0, 29, 1, 248),
            Trans(0, 54, 1, 248),
            Trans(0, 55, 1, 248),
            Trans(0, 64, 1, 248),
            Trans(0, 65, 1, 248),
            Trans(0, 74, 2, 249),
        ],
        k: 1,
    },
    /* 36 - "class_or_inheritance_modification" */
    LookaheadDFA {
        prod0: 199,
        transitions: &[],
        k: 0,
    },
    /* 37 - "class_or_inheritance_modificationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 1, 200),
            Trans(0, 17, 1, 200),
            Trans(0, 29, 1, 200),
            Trans(0, 54, 1, 200),
            Trans(0, 55, 1, 200),
            Trans(0, 64, 1, 200),
            Trans(0, 65, 1, 200),
            Trans(0, 74, 2, 201),
        ],
        k: 1,
    },
    /* 38 - "class_prefixes" */
    LookaheadDFA {
        prod0: 97,
        transitions: &[],
        k: 0,
    },
    /* 39 - "class_prefixesOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 99),
            Trans(0, 10, 2, 99),
            Trans(0, 12, 2, 99),
            Trans(0, 25, 2, 99),
            Trans(0, 32, 2, 99),
            Trans(0, 35, 2, 99),
            Trans(0, 41, 2, 99),
            Trans(0, 43, 2, 99),
            Trans(0, 47, 2, 99),
            Trans(0, 49, 1, 98),
            Trans(0, 52, 2, 99),
            Trans(0, 53, 2, 99),
            Trans(0, 60, 2, 99),
        ],
        k: 1,
    },
    /* 40 - "class_specifier" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 26, 7, -1),
            Trans(0, 64, 1, -1),
            Trans(0, 65, 1, -1),
            Trans(1, 5, 2, -1),
            Trans(1, 7, 26, -1),
            Trans(1, 8, 19, -1),
            Trans(1, 10, 19, -1),
            Trans(1, 12, 19, -1),
            Trans(1, 13, 22, -1),
            Trans(1, 16, 22, -1),
            Trans(1, 21, 11, -1),
            Trans(1, 22, 23, -1),
            Trans(1, 24, 4, -1),
            Trans(1, 25, 17, -1),
            Trans(1, 26, 24, -1),
            Trans(1, 27, 10, -1),
            Trans(1, 29, 12, -1),
            Trans(1, 30, 18, -1),
            Trans(1, 32, 19, -1),
            Trans(1, 34, 23, -1),
            Trans(1, 35, 21, -1),
            Trans(1, 37, 5, -1),
            Trans(1, 38, 13, -1),
            Trans(1, 39, 24, -1),
            Trans(1, 41, 19, -1),
            Trans(1, 43, 20, -1),
            Trans(1, 45, 14, -1),
            Trans(1, 46, 24, -1),
            Trans(1, 47, 19, -1),
            Trans(1, 48, 22, -1),
            Trans(1, 49, 15, -1),
            Trans(1, 50, 6, -1),
            Trans(1, 51, 6, -1),
            Trans(1, 52, 21, -1),
            Trans(1, 53, 19, -1),
            Trans(1, 54, 16, -1),
            Trans(1, 55, 14, -1),
            Trans(1, 57, 18, -1),
            Trans(1, 60, 19, -1),
            Trans(1, 64, 25, -1),
            Trans(1, 65, 25, -1),
            Trans(1, 66, 9, -1),
            Trans(1, 72, 27, -1),
            Trans(1, 78, 23, -1),
            Trans(2, 5, 3, 100),
            Trans(2, 7, 3, 100),
            Trans(2, 9, 3, 100),
            Trans(2, 22, 3, 100),
            Trans(2, 24, 3, 100),
            Trans(2, 27, 3, 100),
            Trans(2, 31, 3, 100),
            Trans(2, 33, 3, 100),
            Trans(2, 37, 3, 100),
            Trans(2, 50, 3, 100),
            Trans(2, 51, 3, 100),
            Trans(2, 56, 3, 100),
            Trans(2, 61, 3, 100),
            Trans(2, 62, 3, 100),
            Trans(2, 64, 3, 100),
            Trans(2, 65, 3, 100),
            Trans(2, 73, 3, 100),
            Trans(2, 78, 3, 100),
            Trans(4, 5, 3, 100),
            Trans(4, 7, 3, 100),
            Trans(4, 11, 3, 100),
            Trans(4, 15, 3, 100),
            Trans(4, 22, 3, 100),
            Trans(4, 24, 3, 100),
            Trans(4, 27, 3, 100),
            Trans(4, 28, 3, 100),
            Trans(4, 31, 3, 100),
            Trans(4, 33, 3, 100),
            Trans(4, 37, 3, 100),
            Trans(4, 42, 3, 100),
            Trans(4, 50, 3, 100),
            Trans(4, 51, 3, 100),
            Trans(4, 52, 3, 100),
            Trans(4, 59, 3, 100),
            Trans(4, 61, 3, 100),
            Trans(4, 64, 3, 100),
            Trans(4, 65, 3, 100),
            Trans(4, 66, 3, 100),
            Trans(4, 67, 3, 100),
            Trans(4, 68, 3, 100),
            Trans(4, 69, 3, 100),
            Trans(4, 70, 3, 100),
            Trans(4, 73, 3, 100),
            Trans(4, 78, 3, 100),
            Trans(4, 80, 3, 100),
            Trans(4, 89, 3, 100),
            Trans(4, 90, 3, 100),
            Trans(4, 91, 3, 100),
            Trans(4, 92, 3, 100),
            Trans(4, 97, 3, 100),
            Trans(5, 5, 3, 100),
            Trans(5, 24, 3, 100),
            Trans(6, 5, 3, 100),
            Trans(6, 7, 3, 100),
            Trans(6, 8, 3, 100),
            Trans(6, 10, 3, 100),
            Trans(6, 12, 3, 100),
            Trans(6, 13, 3, 100),
            Trans(6, 16, 3, 100),
            Trans(6, 21, 3, 100),
            Trans(6, 22, 3, 100),
            Trans(6, 24, 3, 100),
            Trans(6, 25, 3, 100),
            Trans(6, 26, 3, 100),
            Trans(6, 27, 3, 100),
            Trans(6, 29, 3, 100),
            Trans(6, 30, 3, 100),
            Trans(6, 32, 3, 100),
            Trans(6, 34, 3, 100),
            Trans(6, 35, 3, 100),
            Trans(6, 37, 3, 100),
            Trans(6, 38, 3, 100),
            Trans(6, 39, 3, 100),
            Trans(6, 41, 3, 100),
            Trans(6, 43, 3, 100),
            Trans(6, 45, 3, 100),
            Trans(6, 46, 3, 100),
            Trans(6, 47, 3, 100),
            Trans(6, 48, 3, 100),
            Trans(6, 49, 3, 100),
            Trans(6, 50, 3, 100),
            Trans(6, 51, 3, 100),
            Trans(6, 52, 3, 100),
            Trans(6, 53, 3, 100),
            Trans(6, 54, 3, 100),
            Trans(6, 55, 3, 100),
            Trans(6, 57, 3, 100),
            Trans(6, 60, 3, 100),
            Trans(6, 64, 3, 100),
            Trans(6, 65, 3, 100),
            Trans(6, 78, 3, 100),
            Trans(7, 64, 8, -1),
            Trans(7, 65, 8, -1),
            Trans(8, 5, 3, 100),
            Trans(8, 7, 3, 100),
            Trans(8, 8, 3, 100),
            Trans(8, 10, 3, 100),
            Trans(8, 12, 3, 100),
            Trans(8, 13, 3, 100),
            Trans(8, 16, 3, 100),
            Trans(8, 21, 3, 100),
            Trans(8, 22, 3, 100),
            Trans(8, 24, 3, 100),
            Trans(8, 25, 3, 100),
            Trans(8, 26, 3, 100),
            Trans(8, 27, 3, 100),
            Trans(8, 29, 3, 100),
            Trans(8, 30, 3, 100),
            Trans(8, 32, 3, 100),
            Trans(8, 34, 3, 100),
            Trans(8, 35, 3, 100),
            Trans(8, 37, 3, 100),
            Trans(8, 38, 3, 100),
            Trans(8, 39, 3, 100),
            Trans(8, 41, 3, 100),
            Trans(8, 43, 3, 100),
            Trans(8, 45, 3, 100),
            Trans(8, 46, 3, 100),
            Trans(8, 47, 3, 100),
            Trans(8, 48, 3, 100),
            Trans(8, 49, 3, 100),
            Trans(8, 50, 3, 100),
            Trans(8, 51, 3, 100),
            Trans(8, 52, 3, 100),
            Trans(8, 53, 3, 100),
            Trans(8, 54, 3, 100),
            Trans(8, 55, 3, 100),
            Trans(8, 57, 3, 100),
            Trans(8, 60, 3, 100),
            Trans(8, 64, 3, 100),
            Trans(8, 65, 3, 100),
            Trans(8, 66, 3, 100),
            Trans(8, 73, 3, 100),
            Trans(8, 78, 3, 100),
            Trans(9, 5, 3, 100),
            Trans(9, 7, 3, 100),
            Trans(9, 8, 3, 100),
            Trans(9, 10, 3, 100),
            Trans(9, 12, 3, 100),
            Trans(9, 13, 3, 100),
            Trans(9, 16, 3, 100),
            Trans(9, 21, 3, 100),
            Trans(9, 22, 3, 100),
            Trans(9, 24, 3, 100),
            Trans(9, 25, 3, 100),
            Trans(9, 26, 3, 100),
            Trans(9, 27, 3, 100),
            Trans(9, 29, 3, 100),
            Trans(9, 30, 3, 100),
            Trans(9, 32, 3, 100),
            Trans(9, 34, 3, 100),
            Trans(9, 35, 3, 100),
            Trans(9, 37, 3, 100),
            Trans(9, 38, 3, 100),
            Trans(9, 39, 3, 100),
            Trans(9, 41, 3, 100),
            Trans(9, 43, 3, 100),
            Trans(9, 45, 3, 100),
            Trans(9, 46, 3, 100),
            Trans(9, 47, 3, 100),
            Trans(9, 48, 3, 100),
            Trans(9, 49, 3, 100),
            Trans(9, 50, 3, 100),
            Trans(9, 51, 3, 100),
            Trans(9, 52, 3, 100),
            Trans(9, 53, 3, 100),
            Trans(9, 54, 3, 100),
            Trans(9, 55, 3, 100),
            Trans(9, 57, 3, 100),
            Trans(9, 60, 3, 100),
            Trans(9, 64, 3, 100),
            Trans(9, 65, 3, 100),
            Trans(9, 78, 3, 100),
            Trans(9, 89, 3, 100),
            Trans(10, 7, 3, 100),
            Trans(10, 64, 3, 100),
            Trans(10, 65, 3, 100),
            Trans(10, 66, 3, 100),
            Trans(10, 71, 3, 100),
            Trans(10, 78, 3, 100),
            Trans(11, 8, 3, 100),
            Trans(11, 10, 3, 100),
            Trans(11, 12, 3, 100),
            Trans(11, 25, 3, 100),
            Trans(11, 32, 3, 100),
            Trans(11, 35, 3, 100),
            Trans(11, 41, 3, 100),
            Trans(11, 43, 3, 100),
            Trans(11, 47, 3, 100),
            Trans(11, 49, 3, 100),
            Trans(11, 52, 3, 100),
            Trans(11, 53, 3, 100),
            Trans(11, 60, 3, 100),
            Trans(12, 8, 3, 100),
            Trans(12, 10, 3, 100),
            Trans(12, 12, 3, 100),
            Trans(12, 13, 3, 100),
            Trans(12, 16, 3, 100),
            Trans(12, 21, 3, 100),
            Trans(12, 25, 3, 100),
            Trans(12, 30, 3, 100),
            Trans(12, 32, 3, 100),
            Trans(12, 35, 3, 100),
            Trans(12, 38, 3, 100),
            Trans(12, 39, 3, 100),
            Trans(12, 41, 3, 100),
            Trans(12, 43, 3, 100),
            Trans(12, 45, 3, 100),
            Trans(12, 46, 3, 100),
            Trans(12, 47, 3, 100),
            Trans(12, 48, 3, 100),
            Trans(12, 49, 3, 100),
            Trans(12, 52, 3, 100),
            Trans(12, 53, 3, 100),
            Trans(12, 57, 3, 100),
            Trans(12, 60, 3, 100),
            Trans(12, 64, 3, 100),
            Trans(12, 65, 3, 100),
            Trans(12, 78, 3, 100),
            Trans(13, 8, 3, 100),
            Trans(13, 10, 3, 100),
            Trans(13, 12, 3, 100),
            Trans(13, 13, 3, 100),
            Trans(13, 16, 3, 100),
            Trans(13, 21, 3, 100),
            Trans(13, 25, 3, 100),
            Trans(13, 30, 3, 100),
            Trans(13, 32, 3, 100),
            Trans(13, 35, 3, 100),
            Trans(13, 39, 3, 100),
            Trans(13, 41, 3, 100),
            Trans(13, 43, 3, 100),
            Trans(13, 45, 3, 100),
            Trans(13, 46, 3, 100),
            Trans(13, 47, 3, 100),
            Trans(13, 48, 3, 100),
            Trans(13, 49, 3, 100),
            Trans(13, 52, 3, 100),
            Trans(13, 53, 3, 100),
            Trans(13, 57, 3, 100),
            Trans(13, 60, 3, 100),
            Trans(13, 64, 3, 100),
            Trans(13, 65, 3, 100),
            Trans(13, 78, 3, 100),
            Trans(14, 8, 3, 100),
            Trans(14, 10, 3, 100),
            Trans(14, 12, 3, 100),
            Trans(14, 13, 3, 100),
            Trans(14, 16, 3, 100),
            Trans(14, 21, 3, 100),
            Trans(14, 25, 3, 100),
            Trans(14, 30, 3, 100),
            Trans(14, 32, 3, 100),
            Trans(14, 35, 3, 100),
            Trans(14, 39, 3, 100),
            Trans(14, 41, 3, 100),
            Trans(14, 43, 3, 100),
            Trans(14, 46, 3, 100),
            Trans(14, 47, 3, 100),
            Trans(14, 48, 3, 100),
            Trans(14, 49, 3, 100),
            Trans(14, 52, 3, 100),
            Trans(14, 53, 3, 100),
            Trans(14, 57, 3, 100),
            Trans(14, 60, 3, 100),
            Trans(14, 64, 3, 100),
            Trans(14, 65, 3, 100),
            Trans(14, 78, 3, 100),
            Trans(15, 8, 3, 100),
            Trans(15, 10, 3, 100),
            Trans(15, 12, 3, 100),
            Trans(15, 25, 3, 100),
            Trans(15, 32, 3, 100),
            Trans(15, 35, 3, 100),
            Trans(15, 41, 3, 100),
            Trans(15, 43, 3, 100),
            Trans(15, 47, 3, 100),
            Trans(15, 52, 3, 100),
            Trans(15, 53, 3, 100),
            Trans(15, 60, 3, 100),
            Trans(16, 8, 3, 100),
            Trans(16, 10, 3, 100),
            Trans(16, 12, 3, 100),
            Trans(16, 13, 3, 100),
            Trans(16, 16, 3, 100),
            Trans(16, 21, 3, 100),
            Trans(16, 25, 3, 100),
            Trans(16, 29, 3, 100),
            Trans(16, 30, 3, 100),
            Trans(16, 32, 3, 100),
            Trans(16, 35, 3, 100),
            Trans(16, 38, 3, 100),
            Trans(16, 39, 3, 100),
            Trans(16, 41, 3, 100),
            Trans(16, 43, 3, 100),
            Trans(16, 45, 3, 100),
            Trans(16, 46, 3, 100),
            Trans(16, 47, 3, 100),
            Trans(16, 48, 3, 100),
            Trans(16, 49, 3, 100),
            Trans(16, 52, 3, 100),
            Trans(16, 53, 3, 100),
            Trans(16, 57, 3, 100),
            Trans(16, 60, 3, 100),
            Trans(16, 64, 3, 100),
            Trans(16, 65, 3, 100),
            Trans(16, 78, 3, 100),
            Trans(17, 12, 3, 100),
            Trans(18, 13, 3, 100),
            Trans(18, 16, 3, 100),
            Trans(18, 39, 3, 100),
            Trans(18, 46, 3, 100),
            Trans(18, 48, 3, 100),
            Trans(18, 64, 3, 100),
            Trans(18, 65, 3, 100),
            Trans(18, 78, 3, 100),
            Trans(19, 26, 3, 100),
            Trans(19, 64, 3, 100),
            Trans(19, 65, 3, 100),
            Trans(20, 26, 3, 100),
            Trans(20, 32, 3, 100),
            Trans(20, 53, 3, 100),
            Trans(20, 64, 3, 100),
            Trans(20, 65, 3, 100),
            Trans(21, 32, 3, 100),
            Trans(21, 43, 3, 100),
            Trans(22, 39, 3, 100),
            Trans(22, 46, 3, 100),
            Trans(22, 64, 3, 100),
            Trans(22, 65, 3, 100),
            Trans(22, 78, 3, 100),
            Trans(23, 64, 3, 100),
            Trans(23, 65, 3, 100),
            Trans(24, 64, 3, 100),
            Trans(24, 65, 3, 100),
            Trans(24, 78, 3, 100),
            Trans(25, 64, 3, 100),
            Trans(25, 65, 3, 100),
            Trans(25, 78, 3, 100),
            Trans(25, 97, 3, 100),
            Trans(26, 73, 3, 100),
            Trans(27, 15, 29, 102),
            Trans(27, 23, 28, 101),
            Trans(27, 39, 28, 101),
            Trans(27, 46, 28, 101),
            Trans(27, 64, 28, 101),
            Trans(27, 65, 28, 101),
            Trans(27, 78, 28, 101),
        ],
        k: 3,
    },
    /* 41 - "class_type" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 8, -1),
            Trans(0, 10, 1, -1),
            Trans(0, 12, 10, -1),
            Trans(0, 25, 11, -1),
            Trans(0, 32, 17, -1),
            Trans(0, 35, 18, -1),
            Trans(0, 41, 3, -1),
            Trans(0, 43, 5, -1),
            Trans(0, 47, 15, -1),
            Trans(0, 52, 18, -1),
            Trans(0, 53, 6, -1),
            Trans(0, 60, 13, -1),
            Trans(1, 26, 2, 78),
            Trans(1, 64, 2, 78),
            Trans(1, 65, 2, 78),
            Trans(3, 26, 4, 79),
            Trans(3, 64, 4, 79),
            Trans(3, 65, 4, 79),
            Trans(5, 26, 20, 86),
            Trans(5, 32, 19, 85),
            Trans(5, 53, 7, 80),
            Trans(5, 64, 20, 86),
            Trans(5, 65, 20, 86),
            Trans(6, 26, 7, 80),
            Trans(6, 64, 7, 80),
            Trans(6, 65, 7, 80),
            Trans(8, 26, 9, 81),
            Trans(8, 64, 9, 81),
            Trans(8, 65, 9, 81),
            Trans(10, 26, 12, 82),
            Trans(10, 64, 12, 82),
            Trans(10, 65, 12, 82),
            Trans(11, 12, 12, 82),
            Trans(13, 26, 14, 83),
            Trans(13, 64, 14, 83),
            Trans(13, 65, 14, 83),
            Trans(15, 26, 16, 84),
            Trans(15, 64, 16, 84),
            Trans(15, 65, 16, 84),
            Trans(17, 26, 19, 85),
            Trans(17, 64, 19, 85),
            Trans(17, 65, 19, 85),
            Trans(18, 32, 19, 85),
            Trans(18, 43, 19, 85),
        ],
        k: 2,
    },
    /* 42 - "class_typeOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 43, 1, 95), Trans(0, 53, 2, 96)],
        k: 1,
    },
    /* 43 - "class_typeOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 12, 2, 94), Trans(0, 25, 1, 93)],
        k: 1,
    },
    /* 44 - "class_typeOpt1" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 32, 2, 92),
            Trans(0, 35, 1, 89),
            Trans(0, 43, 2, 92),
            Trans(0, 52, 1, 89),
        ],
        k: 1,
    },
    /* 45 - "class_typeOpt1Group" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 35, 2, 91), Trans(0, 52, 1, 90)],
        k: 1,
    },
    /* 46 - "class_typeOpt2" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 32, 2, 88), Trans(0, 43, 1, 87)],
        k: 1,
    },
    /* 47 - "component_clause" */
    LookaheadDFA {
        prod0: 212,
        transitions: &[],
        k: 0,
    },
    /* 48 - "component_clause1" */
    LookaheadDFA {
        prod0: 278,
        transitions: &[],
        k: 0,
    },
    /* 49 - "component_clauseOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 2, 214),
            Trans(0, 65, 2, 214),
            Trans(0, 97, 1, 213),
        ],
        k: 1,
    },
    /* 50 - "component_declaration" */
    LookaheadDFA {
        prod0: 232,
        transitions: &[],
        k: 0,
    },
    /* 51 - "component_declaration1" */
    LookaheadDFA {
        prod0: 279,
        transitions: &[],
        k: 0,
    },
    /* 52 - "component_declarationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 234),
            Trans(0, 14, 2, 234),
            Trans(0, 33, 1, 233),
            Trans(0, 66, 2, 234),
            Trans(0, 71, 2, 234),
            Trans(0, 76, 2, 234),
        ],
        k: 1,
    },
    /* 53 - "component_list" */
    LookaheadDFA {
        prod0: 229,
        transitions: &[],
        k: 0,
    },
    /* 54 - "component_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 14, 2, 231),
            Trans(0, 71, 2, 231),
            Trans(0, 76, 1, 230),
        ],
        k: 1,
    },
    /* 55 - "component_primary" */
    LookaheadDFA {
        prod0: 414,
        transitions: &[],
        k: 0,
    },
    /* 56 - "component_primaryOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 416),
            Trans(0, 7, 2, 416),
            Trans(0, 14, 2, 416),
            Trans(0, 18, 2, 416),
            Trans(0, 19, 2, 416),
            Trans(0, 31, 2, 416),
            Trans(0, 33, 2, 416),
            Trans(0, 40, 2, 416),
            Trans(0, 44, 2, 416),
            Trans(0, 58, 2, 416),
            Trans(0, 66, 2, 416),
            Trans(0, 71, 2, 416),
            Trans(0, 72, 2, 416),
            Trans(0, 73, 1, 415),
            Trans(0, 74, 2, 416),
            Trans(0, 75, 2, 416),
            Trans(0, 76, 2, 416),
            Trans(0, 77, 2, 416),
            Trans(0, 79, 2, 416),
            Trans(0, 81, 2, 416),
            Trans(0, 83, 2, 416),
            Trans(0, 84, 2, 416),
            Trans(0, 85, 2, 416),
            Trans(0, 86, 2, 416),
            Trans(0, 87, 2, 416),
            Trans(0, 88, 2, 416),
            Trans(0, 89, 2, 416),
            Trans(0, 90, 2, 416),
            Trans(0, 91, 2, 416),
            Trans(0, 92, 2, 416),
            Trans(0, 93, 2, 416),
            Trans(0, 94, 2, 416),
            Trans(0, 95, 2, 416),
            Trans(0, 96, 2, 416),
            Trans(0, 98, 2, 416),
        ],
        k: 1,
    },
    /* 57 - "component_ref_part" */
    LookaheadDFA {
        prod0: 445,
        transitions: &[],
        k: 0,
    },
    /* 58 - "component_ref_partOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 447),
            Trans(0, 7, 2, 447),
            Trans(0, 14, 2, 447),
            Trans(0, 18, 2, 447),
            Trans(0, 19, 2, 447),
            Trans(0, 31, 2, 447),
            Trans(0, 33, 2, 447),
            Trans(0, 40, 2, 447),
            Trans(0, 44, 2, 447),
            Trans(0, 58, 2, 447),
            Trans(0, 66, 2, 447),
            Trans(0, 71, 2, 447),
            Trans(0, 72, 2, 447),
            Trans(0, 73, 2, 447),
            Trans(0, 74, 2, 447),
            Trans(0, 75, 2, 447),
            Trans(0, 76, 2, 447),
            Trans(0, 77, 2, 447),
            Trans(0, 78, 2, 447),
            Trans(0, 79, 2, 447),
            Trans(0, 81, 2, 447),
            Trans(0, 82, 2, 447),
            Trans(0, 83, 2, 447),
            Trans(0, 84, 2, 447),
            Trans(0, 85, 2, 447),
            Trans(0, 86, 2, 447),
            Trans(0, 87, 2, 447),
            Trans(0, 88, 2, 447),
            Trans(0, 89, 2, 447),
            Trans(0, 90, 2, 447),
            Trans(0, 91, 2, 447),
            Trans(0, 92, 2, 447),
            Trans(0, 93, 2, 447),
            Trans(0, 94, 2, 447),
            Trans(0, 95, 2, 447),
            Trans(0, 96, 2, 447),
            Trans(0, 97, 1, 446),
            Trans(0, 98, 2, 447),
        ],
        k: 1,
    },
    /* 59 - "component_reference" */
    LookaheadDFA {
        prod0: 438,
        transitions: &[],
        k: 0,
    },
    /* 60 - "component_referenceList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 440),
            Trans(0, 7, 2, 440),
            Trans(0, 14, 2, 440),
            Trans(0, 18, 2, 440),
            Trans(0, 19, 2, 440),
            Trans(0, 31, 2, 440),
            Trans(0, 33, 2, 440),
            Trans(0, 40, 2, 440),
            Trans(0, 44, 2, 440),
            Trans(0, 58, 2, 440),
            Trans(0, 66, 2, 440),
            Trans(0, 71, 2, 440),
            Trans(0, 72, 2, 440),
            Trans(0, 73, 2, 440),
            Trans(0, 74, 2, 440),
            Trans(0, 75, 2, 440),
            Trans(0, 76, 2, 440),
            Trans(0, 77, 2, 440),
            Trans(0, 78, 1, 439),
            Trans(0, 79, 2, 440),
            Trans(0, 81, 2, 440),
            Trans(0, 82, 2, 440),
            Trans(0, 83, 2, 440),
            Trans(0, 84, 2, 440),
            Trans(0, 85, 2, 440),
            Trans(0, 86, 2, 440),
            Trans(0, 87, 2, 440),
            Trans(0, 88, 2, 440),
            Trans(0, 89, 2, 440),
            Trans(0, 90, 2, 440),
            Trans(0, 91, 2, 440),
            Trans(0, 92, 2, 440),
            Trans(0, 93, 2, 440),
            Trans(0, 94, 2, 440),
            Trans(0, 95, 2, 440),
            Trans(0, 96, 2, 440),
            Trans(0, 98, 2, 440),
        ],
        k: 1,
    },
    /* 61 - "component_referenceOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 2, 444),
            Trans(0, 65, 2, 444),
            Trans(0, 78, 1, 443),
        ],
        k: 1,
    },
    /* 62 - "component_referenceOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 442),
            Trans(0, 7, 2, 442),
            Trans(0, 14, 2, 442),
            Trans(0, 18, 2, 442),
            Trans(0, 19, 2, 442),
            Trans(0, 31, 2, 442),
            Trans(0, 33, 2, 442),
            Trans(0, 40, 2, 442),
            Trans(0, 44, 2, 442),
            Trans(0, 58, 2, 442),
            Trans(0, 66, 2, 442),
            Trans(0, 71, 2, 442),
            Trans(0, 72, 2, 442),
            Trans(0, 73, 2, 442),
            Trans(0, 74, 2, 442),
            Trans(0, 75, 2, 442),
            Trans(0, 76, 2, 442),
            Trans(0, 77, 2, 442),
            Trans(0, 78, 2, 442),
            Trans(0, 79, 2, 442),
            Trans(0, 81, 2, 442),
            Trans(0, 82, 2, 442),
            Trans(0, 83, 2, 442),
            Trans(0, 84, 2, 442),
            Trans(0, 85, 2, 442),
            Trans(0, 86, 2, 442),
            Trans(0, 87, 2, 442),
            Trans(0, 88, 2, 442),
            Trans(0, 89, 2, 442),
            Trans(0, 90, 2, 442),
            Trans(0, 91, 2, 442),
            Trans(0, 92, 2, 442),
            Trans(0, 93, 2, 442),
            Trans(0, 94, 2, 442),
            Trans(0, 95, 2, 442),
            Trans(0, 96, 2, 442),
            Trans(0, 97, 1, 441),
            Trans(0, 98, 2, 442),
        ],
        k: 1,
    },
    /* 63 - "component_statement" */
    LookaheadDFA {
        prod0: 308,
        transitions: &[],
        k: 0,
    },
    /* 64 - "component_statementGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 73, 2, 310), Trans(0, 82, 1, 309)],
        k: 1,
    },
    /* 65 - "composition" */
    LookaheadDFA {
        prod0: 133,
        transitions: &[],
        k: 0,
    },
    /* 66 - "compositionList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 1, 134),
            Trans(0, 7, 2, 139),
            Trans(0, 22, 2, 139),
            Trans(0, 24, 1, 134),
            Trans(0, 27, 2, 139),
            Trans(0, 37, 1, 134),
            Trans(0, 50, 1, 134),
            Trans(0, 51, 1, 134),
        ],
        k: 1,
    },
    /* 67 - "compositionListGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 8, -1),
            Trans(0, 24, 5, -1),
            Trans(0, 37, 6, -1),
            Trans(0, 50, 3, -1),
            Trans(0, 51, 1, -1),
            Trans(1, 5, 2, 135),
            Trans(1, 7, 2, 135),
            Trans(1, 8, 2, 135),
            Trans(1, 10, 2, 135),
            Trans(1, 12, 2, 135),
            Trans(1, 13, 2, 135),
            Trans(1, 16, 2, 135),
            Trans(1, 21, 2, 135),
            Trans(1, 22, 2, 135),
            Trans(1, 24, 2, 135),
            Trans(1, 25, 2, 135),
            Trans(1, 26, 2, 135),
            Trans(1, 27, 2, 135),
            Trans(1, 29, 2, 135),
            Trans(1, 30, 2, 135),
            Trans(1, 32, 2, 135),
            Trans(1, 34, 2, 135),
            Trans(1, 35, 2, 135),
            Trans(1, 37, 2, 135),
            Trans(1, 38, 2, 135),
            Trans(1, 39, 2, 135),
            Trans(1, 41, 2, 135),
            Trans(1, 43, 2, 135),
            Trans(1, 45, 2, 135),
            Trans(1, 46, 2, 135),
            Trans(1, 47, 2, 135),
            Trans(1, 48, 2, 135),
            Trans(1, 49, 2, 135),
            Trans(1, 50, 2, 135),
            Trans(1, 51, 2, 135),
            Trans(1, 52, 2, 135),
            Trans(1, 53, 2, 135),
            Trans(1, 54, 2, 135),
            Trans(1, 55, 2, 135),
            Trans(1, 57, 2, 135),
            Trans(1, 60, 2, 135),
            Trans(1, 64, 2, 135),
            Trans(1, 65, 2, 135),
            Trans(1, 78, 2, 135),
            Trans(3, 5, 4, 136),
            Trans(3, 7, 4, 136),
            Trans(3, 8, 4, 136),
            Trans(3, 10, 4, 136),
            Trans(3, 12, 4, 136),
            Trans(3, 13, 4, 136),
            Trans(3, 16, 4, 136),
            Trans(3, 21, 4, 136),
            Trans(3, 22, 4, 136),
            Trans(3, 24, 4, 136),
            Trans(3, 25, 4, 136),
            Trans(3, 26, 4, 136),
            Trans(3, 27, 4, 136),
            Trans(3, 29, 4, 136),
            Trans(3, 30, 4, 136),
            Trans(3, 32, 4, 136),
            Trans(3, 34, 4, 136),
            Trans(3, 35, 4, 136),
            Trans(3, 37, 4, 136),
            Trans(3, 38, 4, 136),
            Trans(3, 39, 4, 136),
            Trans(3, 41, 4, 136),
            Trans(3, 43, 4, 136),
            Trans(3, 45, 4, 136),
            Trans(3, 46, 4, 136),
            Trans(3, 47, 4, 136),
            Trans(3, 48, 4, 136),
            Trans(3, 49, 4, 136),
            Trans(3, 50, 4, 136),
            Trans(3, 51, 4, 136),
            Trans(3, 52, 4, 136),
            Trans(3, 53, 4, 136),
            Trans(3, 54, 4, 136),
            Trans(3, 55, 4, 136),
            Trans(3, 57, 4, 136),
            Trans(3, 60, 4, 136),
            Trans(3, 64, 4, 136),
            Trans(3, 65, 4, 136),
            Trans(3, 78, 4, 136),
            Trans(5, 5, 7, 137),
            Trans(5, 7, 7, 137),
            Trans(5, 11, 7, 137),
            Trans(5, 15, 7, 137),
            Trans(5, 22, 7, 137),
            Trans(5, 24, 7, 137),
            Trans(5, 27, 7, 137),
            Trans(5, 28, 7, 137),
            Trans(5, 31, 7, 137),
            Trans(5, 33, 7, 137),
            Trans(5, 37, 7, 137),
            Trans(5, 42, 7, 137),
            Trans(5, 50, 7, 137),
            Trans(5, 51, 7, 137),
            Trans(5, 52, 7, 137),
            Trans(5, 59, 7, 137),
            Trans(5, 61, 7, 137),
            Trans(5, 64, 7, 137),
            Trans(5, 65, 7, 137),
            Trans(5, 66, 7, 137),
            Trans(5, 67, 7, 137),
            Trans(5, 68, 7, 137),
            Trans(5, 69, 7, 137),
            Trans(5, 70, 7, 137),
            Trans(5, 73, 7, 137),
            Trans(5, 78, 7, 137),
            Trans(5, 80, 7, 137),
            Trans(5, 89, 7, 137),
            Trans(5, 90, 7, 137),
            Trans(5, 91, 7, 137),
            Trans(5, 92, 7, 137),
            Trans(5, 97, 7, 137),
            Trans(6, 5, 9, 138),
            Trans(6, 24, 7, 137),
            Trans(8, 5, 9, 138),
            Trans(8, 7, 9, 138),
            Trans(8, 9, 9, 138),
            Trans(8, 22, 9, 138),
            Trans(8, 24, 9, 138),
            Trans(8, 27, 9, 138),
            Trans(8, 31, 9, 138),
            Trans(8, 33, 9, 138),
            Trans(8, 37, 9, 138),
            Trans(8, 50, 9, 138),
            Trans(8, 51, 9, 138),
            Trans(8, 56, 9, 138),
            Trans(8, 61, 9, 138),
            Trans(8, 62, 9, 138),
            Trans(8, 64, 9, 138),
            Trans(8, 65, 9, 138),
            Trans(8, 73, 9, 138),
            Trans(8, 78, 9, 138),
        ],
        k: 2,
    },
    /* 68 - "compositionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 149),
            Trans(0, 22, 2, 149),
            Trans(0, 27, 1, 142),
        ],
        k: 1,
    },
    /* 69 - "compositionOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 7, 1, 140), Trans(0, 22, 2, 141)],
        k: 1,
    },
    /* 70 - "compositionOpt1" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 148),
            Trans(0, 64, 2, 148),
            Trans(0, 65, 2, 148),
            Trans(0, 66, 1, 147),
            Trans(0, 71, 2, 148),
            Trans(0, 78, 2, 148),
        ],
        k: 1,
    },
    /* 71 - "compositionOpt2" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 146),
            Trans(0, 64, 1, 145),
            Trans(0, 65, 1, 145),
            Trans(0, 71, 2, 146),
            Trans(0, 78, 1, 145),
        ],
        k: 1,
    },
    /* 72 - "compositionOpt3" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 7, 1, 143), Trans(0, 71, 2, 144)],
        k: 1,
    },
    /* 73 - "condition_attribute" */
    LookaheadDFA {
        prod0: 235,
        transitions: &[],
        k: 0,
    },
    /* 74 - "connect" */
    LookaheadDFA {
        prod0: 6,
        transitions: &[],
        k: 0,
    },
    /* 75 - "connect_equation" */
    LookaheadDFA {
        prod0: 354,
        transitions: &[],
        k: 0,
    },
    /* 76 - "connector" */
    LookaheadDFA {
        prod0: 7,
        transitions: &[],
        k: 0,
    },
    /* 77 - "constant" */
    LookaheadDFA {
        prod0: 8,
        transitions: &[],
        k: 0,
    },
    /* 78 - "constrainedby" */
    LookaheadDFA {
        prod0: 9,
        transitions: &[],
        k: 0,
    },
    /* 79 - "constraining_clause" */
    LookaheadDFA {
        prod0: 196,
        transitions: &[],
        k: 0,
    },
    /* 80 - "constraining_clauseOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 198),
            Trans(0, 66, 2, 198),
            Trans(0, 71, 2, 198),
            Trans(0, 73, 1, 197),
            Trans(0, 74, 2, 198),
            Trans(0, 76, 2, 198),
        ],
        k: 1,
    },
    /* 81 - "declaration" */
    LookaheadDFA {
        prod0: 236,
        transitions: &[],
        k: 0,
    },
    /* 82 - "declarationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 240),
            Trans(0, 14, 2, 240),
            Trans(0, 33, 2, 240),
            Trans(0, 66, 2, 240),
            Trans(0, 71, 2, 240),
            Trans(0, 72, 2, 240),
            Trans(0, 73, 2, 240),
            Trans(0, 74, 2, 240),
            Trans(0, 76, 2, 240),
            Trans(0, 97, 1, 239),
        ],
        k: 1,
    },
    /* 83 - "declarationOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 238),
            Trans(0, 14, 2, 238),
            Trans(0, 33, 2, 238),
            Trans(0, 66, 2, 238),
            Trans(0, 71, 2, 238),
            Trans(0, 72, 1, 237),
            Trans(0, 73, 1, 237),
            Trans(0, 74, 2, 238),
            Trans(0, 76, 2, 238),
        ],
        k: 1,
    },
    /* 84 - "der" */
    LookaheadDFA {
        prod0: 10,
        transitions: &[],
        k: 0,
    },
    /* 85 - "der_class_specifier" */
    LookaheadDFA {
        prod0: 121,
        transitions: &[],
        k: 0,
    },
    /* 86 - "der_class_specifierList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 123), Trans(0, 76, 1, 122)],
        k: 1,
    },
    /* 87 - "description" */
    LookaheadDFA {
        prod0: 496,
        transitions: &[],
        k: 0,
    },
    /* 88 - "descriptionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 1, 497),
            Trans(0, 14, 2, 498),
            Trans(0, 71, 2, 498),
            Trans(0, 74, 2, 498),
            Trans(0, 76, 2, 498),
        ],
        k: 1,
    },
    /* 89 - "description_string" */
    LookaheadDFA {
        prod0: 499,
        transitions: &[],
        k: 0,
    },
    /* 90 - "description_stringOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 2, 503),
            Trans(0, 7, 2, 503),
            Trans(0, 8, 2, 503),
            Trans(0, 10, 2, 503),
            Trans(0, 12, 2, 503),
            Trans(0, 13, 2, 503),
            Trans(0, 14, 2, 503),
            Trans(0, 16, 2, 503),
            Trans(0, 21, 2, 503),
            Trans(0, 22, 2, 503),
            Trans(0, 24, 2, 503),
            Trans(0, 25, 2, 503),
            Trans(0, 26, 2, 503),
            Trans(0, 27, 2, 503),
            Trans(0, 29, 2, 503),
            Trans(0, 30, 2, 503),
            Trans(0, 32, 2, 503),
            Trans(0, 34, 2, 503),
            Trans(0, 35, 2, 503),
            Trans(0, 37, 2, 503),
            Trans(0, 38, 2, 503),
            Trans(0, 39, 2, 503),
            Trans(0, 41, 2, 503),
            Trans(0, 43, 2, 503),
            Trans(0, 45, 2, 503),
            Trans(0, 46, 2, 503),
            Trans(0, 47, 2, 503),
            Trans(0, 48, 2, 503),
            Trans(0, 49, 2, 503),
            Trans(0, 50, 2, 503),
            Trans(0, 51, 2, 503),
            Trans(0, 52, 2, 503),
            Trans(0, 53, 2, 503),
            Trans(0, 54, 2, 503),
            Trans(0, 55, 2, 503),
            Trans(0, 57, 2, 503),
            Trans(0, 60, 2, 503),
            Trans(0, 64, 2, 503),
            Trans(0, 65, 2, 503),
            Trans(0, 66, 1, 500),
            Trans(0, 71, 2, 503),
            Trans(0, 74, 2, 503),
            Trans(0, 76, 2, 503),
            Trans(0, 78, 2, 503),
        ],
        k: 1,
    },
    /* 91 - "description_stringOptList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 2, 502),
            Trans(0, 7, 2, 502),
            Trans(0, 8, 2, 502),
            Trans(0, 10, 2, 502),
            Trans(0, 12, 2, 502),
            Trans(0, 13, 2, 502),
            Trans(0, 14, 2, 502),
            Trans(0, 16, 2, 502),
            Trans(0, 21, 2, 502),
            Trans(0, 22, 2, 502),
            Trans(0, 24, 2, 502),
            Trans(0, 25, 2, 502),
            Trans(0, 26, 2, 502),
            Trans(0, 27, 2, 502),
            Trans(0, 29, 2, 502),
            Trans(0, 30, 2, 502),
            Trans(0, 32, 2, 502),
            Trans(0, 34, 2, 502),
            Trans(0, 35, 2, 502),
            Trans(0, 37, 2, 502),
            Trans(0, 38, 2, 502),
            Trans(0, 39, 2, 502),
            Trans(0, 41, 2, 502),
            Trans(0, 43, 2, 502),
            Trans(0, 45, 2, 502),
            Trans(0, 46, 2, 502),
            Trans(0, 47, 2, 502),
            Trans(0, 48, 2, 502),
            Trans(0, 49, 2, 502),
            Trans(0, 50, 2, 502),
            Trans(0, 51, 2, 502),
            Trans(0, 52, 2, 502),
            Trans(0, 53, 2, 502),
            Trans(0, 54, 2, 502),
            Trans(0, 55, 2, 502),
            Trans(0, 57, 2, 502),
            Trans(0, 60, 2, 502),
            Trans(0, 64, 2, 502),
            Trans(0, 65, 2, 502),
            Trans(0, 71, 2, 502),
            Trans(0, 74, 2, 502),
            Trans(0, 76, 2, 502),
            Trans(0, 78, 2, 502),
            Trans(0, 89, 1, 501),
        ],
        k: 1,
    },
    /* 92 - "discrete" */
    LookaheadDFA {
        prod0: 11,
        transitions: &[],
        k: 0,
    },
    /* 93 - "each" */
    LookaheadDFA {
        prod0: 12,
        transitions: &[],
        k: 0,
    },
    /* 94 - "element" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 3, 161),
            Trans(0, 10, 3, 161),
            Trans(0, 12, 3, 161),
            Trans(0, 13, 3, 161),
            Trans(0, 16, 3, 161),
            Trans(0, 21, 3, 161),
            Trans(0, 25, 3, 161),
            Trans(0, 26, 2, 160),
            Trans(0, 29, 3, 161),
            Trans(0, 30, 3, 161),
            Trans(0, 32, 3, 161),
            Trans(0, 34, 1, 159),
            Trans(0, 35, 3, 161),
            Trans(0, 38, 3, 161),
            Trans(0, 39, 3, 161),
            Trans(0, 41, 3, 161),
            Trans(0, 43, 3, 161),
            Trans(0, 45, 3, 161),
            Trans(0, 46, 3, 161),
            Trans(0, 47, 3, 161),
            Trans(0, 48, 3, 161),
            Trans(0, 49, 3, 161),
            Trans(0, 52, 3, 161),
            Trans(0, 53, 3, 161),
            Trans(0, 54, 3, 161),
            Trans(0, 55, 4, 162),
            Trans(0, 57, 3, 161),
            Trans(0, 60, 3, 161),
            Trans(0, 64, 3, 161),
            Trans(0, 65, 3, 161),
            Trans(0, 78, 3, 161),
        ],
        k: 1,
    },
    /* 95 - "element_definition" */
    LookaheadDFA {
        prod0: 163,
        transitions: &[],
        k: 0,
    },
    /* 96 - "element_definitionGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 1, 164),
            Trans(0, 10, 1, 164),
            Trans(0, 12, 1, 164),
            Trans(0, 13, 2, 165),
            Trans(0, 16, 2, 165),
            Trans(0, 21, 1, 164),
            Trans(0, 25, 1, 164),
            Trans(0, 30, 2, 165),
            Trans(0, 32, 1, 164),
            Trans(0, 35, 1, 164),
            Trans(0, 39, 2, 165),
            Trans(0, 41, 1, 164),
            Trans(0, 43, 1, 164),
            Trans(0, 46, 2, 165),
            Trans(0, 47, 1, 164),
            Trans(0, 48, 2, 165),
            Trans(0, 49, 1, 164),
            Trans(0, 52, 1, 164),
            Trans(0, 53, 1, 164),
            Trans(0, 57, 2, 165),
            Trans(0, 60, 1, 164),
            Trans(0, 64, 2, 165),
            Trans(0, 65, 2, 165),
            Trans(0, 78, 2, 165),
        ],
        k: 1,
    },
    /* 97 - "element_definitionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 173),
            Trans(0, 10, 2, 173),
            Trans(0, 12, 2, 173),
            Trans(0, 13, 2, 173),
            Trans(0, 16, 2, 173),
            Trans(0, 21, 2, 173),
            Trans(0, 25, 2, 173),
            Trans(0, 29, 2, 173),
            Trans(0, 30, 2, 173),
            Trans(0, 32, 2, 173),
            Trans(0, 35, 2, 173),
            Trans(0, 38, 2, 173),
            Trans(0, 39, 2, 173),
            Trans(0, 41, 2, 173),
            Trans(0, 43, 2, 173),
            Trans(0, 45, 2, 173),
            Trans(0, 46, 2, 173),
            Trans(0, 47, 2, 173),
            Trans(0, 48, 2, 173),
            Trans(0, 49, 2, 173),
            Trans(0, 52, 2, 173),
            Trans(0, 53, 2, 173),
            Trans(0, 54, 1, 172),
            Trans(0, 57, 2, 173),
            Trans(0, 60, 2, 173),
            Trans(0, 64, 2, 173),
            Trans(0, 65, 2, 173),
            Trans(0, 78, 2, 173),
        ],
        k: 1,
    },
    /* 98 - "element_definitionOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 171),
            Trans(0, 10, 2, 171),
            Trans(0, 12, 2, 171),
            Trans(0, 13, 2, 171),
            Trans(0, 16, 2, 171),
            Trans(0, 21, 2, 171),
            Trans(0, 25, 2, 171),
            Trans(0, 29, 1, 170),
            Trans(0, 30, 2, 171),
            Trans(0, 32, 2, 171),
            Trans(0, 35, 2, 171),
            Trans(0, 38, 2, 171),
            Trans(0, 39, 2, 171),
            Trans(0, 41, 2, 171),
            Trans(0, 43, 2, 171),
            Trans(0, 45, 2, 171),
            Trans(0, 46, 2, 171),
            Trans(0, 47, 2, 171),
            Trans(0, 48, 2, 171),
            Trans(0, 49, 2, 171),
            Trans(0, 52, 2, 171),
            Trans(0, 53, 2, 171),
            Trans(0, 57, 2, 171),
            Trans(0, 60, 2, 171),
            Trans(0, 64, 2, 171),
            Trans(0, 65, 2, 171),
            Trans(0, 78, 2, 171),
        ],
        k: 1,
    },
    /* 99 - "element_definitionOpt1" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 169),
            Trans(0, 10, 2, 169),
            Trans(0, 12, 2, 169),
            Trans(0, 13, 2, 169),
            Trans(0, 16, 2, 169),
            Trans(0, 21, 2, 169),
            Trans(0, 25, 2, 169),
            Trans(0, 30, 2, 169),
            Trans(0, 32, 2, 169),
            Trans(0, 35, 2, 169),
            Trans(0, 38, 1, 168),
            Trans(0, 39, 2, 169),
            Trans(0, 41, 2, 169),
            Trans(0, 43, 2, 169),
            Trans(0, 45, 2, 169),
            Trans(0, 46, 2, 169),
            Trans(0, 47, 2, 169),
            Trans(0, 48, 2, 169),
            Trans(0, 49, 2, 169),
            Trans(0, 52, 2, 169),
            Trans(0, 53, 2, 169),
            Trans(0, 57, 2, 169),
            Trans(0, 60, 2, 169),
            Trans(0, 64, 2, 169),
            Trans(0, 65, 2, 169),
            Trans(0, 78, 2, 169),
        ],
        k: 1,
    },
    /* 100 - "element_definitionOpt2" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 167),
            Trans(0, 10, 2, 167),
            Trans(0, 12, 2, 167),
            Trans(0, 13, 2, 167),
            Trans(0, 16, 2, 167),
            Trans(0, 21, 2, 167),
            Trans(0, 25, 2, 167),
            Trans(0, 30, 2, 167),
            Trans(0, 32, 2, 167),
            Trans(0, 35, 2, 167),
            Trans(0, 39, 2, 167),
            Trans(0, 41, 2, 167),
            Trans(0, 43, 2, 167),
            Trans(0, 45, 1, 166),
            Trans(0, 46, 2, 167),
            Trans(0, 47, 2, 167),
            Trans(0, 48, 2, 167),
            Trans(0, 49, 2, 167),
            Trans(0, 52, 2, 167),
            Trans(0, 53, 2, 167),
            Trans(0, 57, 2, 167),
            Trans(0, 60, 2, 167),
            Trans(0, 64, 2, 167),
            Trans(0, 65, 2, 167),
            Trans(0, 78, 2, 167),
        ],
        k: 1,
    },
    /* 101 - "element_list" */
    LookaheadDFA {
        prod0: 156,
        transitions: &[],
        k: 0,
    },
    /* 102 - "element_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 2, 158),
            Trans(0, 7, 2, 158),
            Trans(0, 8, 1, 157),
            Trans(0, 10, 1, 157),
            Trans(0, 12, 1, 157),
            Trans(0, 13, 1, 157),
            Trans(0, 16, 1, 157),
            Trans(0, 21, 1, 157),
            Trans(0, 22, 2, 158),
            Trans(0, 24, 2, 158),
            Trans(0, 25, 1, 157),
            Trans(0, 26, 1, 157),
            Trans(0, 27, 2, 158),
            Trans(0, 29, 1, 157),
            Trans(0, 30, 1, 157),
            Trans(0, 32, 1, 157),
            Trans(0, 34, 1, 157),
            Trans(0, 35, 1, 157),
            Trans(0, 37, 2, 158),
            Trans(0, 38, 1, 157),
            Trans(0, 39, 1, 157),
            Trans(0, 41, 1, 157),
            Trans(0, 43, 1, 157),
            Trans(0, 45, 1, 157),
            Trans(0, 46, 1, 157),
            Trans(0, 47, 1, 157),
            Trans(0, 48, 1, 157),
            Trans(0, 49, 1, 157),
            Trans(0, 50, 2, 158),
            Trans(0, 51, 2, 158),
            Trans(0, 52, 1, 157),
            Trans(0, 53, 1, 157),
            Trans(0, 54, 1, 157),
            Trans(0, 55, 1, 157),
            Trans(0, 57, 1, 157),
            Trans(0, 60, 1, 157),
            Trans(0, 64, 1, 157),
            Trans(0, 65, 1, 157),
            Trans(0, 78, 1, 157),
        ],
        k: 1,
    },
    /* 103 - "element_modification" */
    LookaheadDFA {
        prod0: 262,
        transitions: &[],
        k: 0,
    },
    /* 104 - "element_modificationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 66, 2, 264),
            Trans(0, 72, 1, 263),
            Trans(0, 73, 1, 263),
            Trans(0, 74, 2, 264),
            Trans(0, 76, 2, 264),
        ],
        k: 1,
    },
    /* 105 - "element_modification_or_replaceable" */
    LookaheadDFA {
        prod0: 255,
        transitions: &[],
        k: 0,
    },
    /* 106 - "element_modification_or_replaceableGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 55, 2, 257),
            Trans(0, 64, 1, 256),
            Trans(0, 65, 1, 256),
        ],
        k: 1,
    },
    /* 107 - "element_modification_or_replaceableOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 17, 1, 260),
            Trans(0, 29, 2, 261),
            Trans(0, 55, 2, 261),
            Trans(0, 64, 2, 261),
            Trans(0, 65, 2, 261),
        ],
        k: 1,
    },
    /* 108 - "element_modification_or_replaceableOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 29, 1, 258),
            Trans(0, 55, 2, 259),
            Trans(0, 64, 2, 259),
            Trans(0, 65, 2, 259),
        ],
        k: 1,
    },
    /* 109 - "element_redeclaration" */
    LookaheadDFA {
        prod0: 265,
        transitions: &[],
        k: 0,
    },
    /* 110 - "element_redeclarationGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 1, 266),
            Trans(0, 10, 1, 266),
            Trans(0, 12, 1, 266),
            Trans(0, 13, 2, 267),
            Trans(0, 16, 2, 267),
            Trans(0, 25, 1, 266),
            Trans(0, 30, 2, 267),
            Trans(0, 32, 1, 266),
            Trans(0, 35, 1, 266),
            Trans(0, 39, 2, 267),
            Trans(0, 41, 1, 266),
            Trans(0, 43, 1, 266),
            Trans(0, 46, 2, 267),
            Trans(0, 47, 1, 266),
            Trans(0, 48, 2, 267),
            Trans(0, 49, 1, 266),
            Trans(0, 52, 1, 266),
            Trans(0, 53, 1, 266),
            Trans(0, 55, 3, 268),
            Trans(0, 57, 2, 267),
            Trans(0, 60, 1, 266),
            Trans(0, 64, 2, 267),
            Trans(0, 65, 2, 267),
            Trans(0, 78, 2, 267),
        ],
        k: 1,
    },
    /* 111 - "element_redeclarationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 272),
            Trans(0, 10, 2, 272),
            Trans(0, 12, 2, 272),
            Trans(0, 13, 2, 272),
            Trans(0, 16, 2, 272),
            Trans(0, 17, 1, 271),
            Trans(0, 25, 2, 272),
            Trans(0, 29, 2, 272),
            Trans(0, 30, 2, 272),
            Trans(0, 32, 2, 272),
            Trans(0, 35, 2, 272),
            Trans(0, 39, 2, 272),
            Trans(0, 41, 2, 272),
            Trans(0, 43, 2, 272),
            Trans(0, 46, 2, 272),
            Trans(0, 47, 2, 272),
            Trans(0, 48, 2, 272),
            Trans(0, 49, 2, 272),
            Trans(0, 52, 2, 272),
            Trans(0, 53, 2, 272),
            Trans(0, 55, 2, 272),
            Trans(0, 57, 2, 272),
            Trans(0, 60, 2, 272),
            Trans(0, 64, 2, 272),
            Trans(0, 65, 2, 272),
            Trans(0, 78, 2, 272),
        ],
        k: 1,
    },
    /* 112 - "element_redeclarationOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 270),
            Trans(0, 10, 2, 270),
            Trans(0, 12, 2, 270),
            Trans(0, 13, 2, 270),
            Trans(0, 16, 2, 270),
            Trans(0, 25, 2, 270),
            Trans(0, 29, 1, 269),
            Trans(0, 30, 2, 270),
            Trans(0, 32, 2, 270),
            Trans(0, 35, 2, 270),
            Trans(0, 39, 2, 270),
            Trans(0, 41, 2, 270),
            Trans(0, 43, 2, 270),
            Trans(0, 46, 2, 270),
            Trans(0, 47, 2, 270),
            Trans(0, 48, 2, 270),
            Trans(0, 49, 2, 270),
            Trans(0, 52, 2, 270),
            Trans(0, 53, 2, 270),
            Trans(0, 55, 2, 270),
            Trans(0, 57, 2, 270),
            Trans(0, 60, 2, 270),
            Trans(0, 64, 2, 270),
            Trans(0, 65, 2, 270),
            Trans(0, 78, 2, 270),
        ],
        k: 1,
    },
    /* 113 - "element_replaceable" */
    LookaheadDFA {
        prod0: 273,
        transitions: &[],
        k: 0,
    },
    /* 114 - "element_replaceableGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 1, 274),
            Trans(0, 10, 1, 274),
            Trans(0, 12, 1, 274),
            Trans(0, 13, 2, 275),
            Trans(0, 16, 2, 275),
            Trans(0, 25, 1, 274),
            Trans(0, 30, 2, 275),
            Trans(0, 32, 1, 274),
            Trans(0, 35, 1, 274),
            Trans(0, 39, 2, 275),
            Trans(0, 41, 1, 274),
            Trans(0, 43, 1, 274),
            Trans(0, 46, 2, 275),
            Trans(0, 47, 1, 274),
            Trans(0, 48, 2, 275),
            Trans(0, 49, 1, 274),
            Trans(0, 52, 1, 274),
            Trans(0, 53, 1, 274),
            Trans(0, 57, 2, 275),
            Trans(0, 60, 1, 274),
            Trans(0, 64, 2, 275),
            Trans(0, 65, 2, 275),
            Trans(0, 78, 2, 275),
        ],
        k: 1,
    },
    /* 115 - "element_replaceableOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 14, 1, 276),
            Trans(0, 74, 2, 277),
            Trans(0, 76, 2, 277),
        ],
        k: 1,
    },
    /* 116 - "element_replaceable_definition" */
    LookaheadDFA {
        prod0: 174,
        transitions: &[],
        k: 0,
    },
    /* 117 - "element_replaceable_definitionGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 1, 175),
            Trans(0, 10, 1, 175),
            Trans(0, 12, 1, 175),
            Trans(0, 13, 2, 176),
            Trans(0, 16, 2, 176),
            Trans(0, 21, 1, 175),
            Trans(0, 25, 1, 175),
            Trans(0, 30, 2, 176),
            Trans(0, 32, 1, 175),
            Trans(0, 35, 1, 175),
            Trans(0, 39, 2, 176),
            Trans(0, 41, 1, 175),
            Trans(0, 43, 1, 175),
            Trans(0, 46, 2, 176),
            Trans(0, 47, 1, 175),
            Trans(0, 48, 2, 176),
            Trans(0, 49, 1, 175),
            Trans(0, 52, 1, 175),
            Trans(0, 53, 1, 175),
            Trans(0, 57, 2, 176),
            Trans(0, 60, 1, 175),
            Trans(0, 64, 2, 176),
            Trans(0, 65, 2, 176),
            Trans(0, 78, 2, 176),
        ],
        k: 1,
    },
    /* 118 - "element_replaceable_definitionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 14, 1, 177), Trans(0, 71, 2, 178)],
        k: 1,
    },
    /* 119 - "else" */
    LookaheadDFA {
        prod0: 13,
        transitions: &[],
        k: 0,
    },
    /* 120 - "elseif" */
    LookaheadDFA {
        prod0: 14,
        transitions: &[],
        k: 0,
    },
    /* 121 - "elsewhen" */
    LookaheadDFA {
        prod0: 15,
        transitions: &[],
        k: 0,
    },
    /* 122 - "encapsulated" */
    LookaheadDFA {
        prod0: 16,
        transitions: &[],
        k: 0,
    },
    /* 123 - "end" */
    LookaheadDFA {
        prod0: 17,
        transitions: &[],
        k: 0,
    },
    /* 124 - "enum_class_specifier" */
    LookaheadDFA {
        prod0: 116,
        transitions: &[],
        k: 0,
    },
    /* 125 - "enum_class_specifierGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 1, 117),
            Trans(0, 65, 1, 117),
            Trans(0, 74, 1, 117),
            Trans(0, 75, 2, 118),
        ],
        k: 1,
    },
    /* 126 - "enum_class_specifierOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 1, 119),
            Trans(0, 65, 1, 119),
            Trans(0, 74, 2, 120),
        ],
        k: 1,
    },
    /* 127 - "enum_list" */
    LookaheadDFA {
        prod0: 129,
        transitions: &[],
        k: 0,
    },
    /* 128 - "enum_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 131), Trans(0, 76, 1, 130)],
        k: 1,
    },
    /* 129 - "enumeration" */
    LookaheadDFA {
        prod0: 18,
        transitions: &[],
        k: 0,
    },
    /* 130 - "enumeration_literal" */
    LookaheadDFA {
        prod0: 132,
        transitions: &[],
        k: 0,
    },
    /* 131 - "equation" */
    LookaheadDFA {
        prod0: 19,
        transitions: &[],
        k: 0,
    },
    /* 132 - "equation_block" */
    LookaheadDFA {
        prod0: 313,
        transitions: &[],
        k: 0,
    },
    /* 133 - "equation_blockList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 11, 10, -1),
            Trans(0, 15, 10, -1),
            Trans(0, 18, 11, -1),
            Trans(0, 19, 12, -1),
            Trans(0, 20, 12, -1),
            Trans(0, 22, 1, -1),
            Trans(0, 28, 3, -1),
            Trans(0, 31, 9, -1),
            Trans(0, 33, 5, -1),
            Trans(0, 37, 10, -1),
            Trans(0, 42, 6, -1),
            Trans(0, 52, 10, -1),
            Trans(0, 59, 3, -1),
            Trans(0, 61, 5, -1),
            Trans(0, 64, 4, -1),
            Trans(0, 65, 4, -1),
            Trans(0, 66, 3, -1),
            Trans(0, 67, 3, -1),
            Trans(0, 68, 3, -1),
            Trans(0, 69, 3, -1),
            Trans(0, 70, 3, -1),
            Trans(0, 73, 7, -1),
            Trans(0, 78, 9, -1),
            Trans(0, 80, 5, -1),
            Trans(0, 89, 8, -1),
            Trans(0, 90, 8, -1),
            Trans(0, 91, 8, -1),
            Trans(0, 92, 8, -1),
            Trans(0, 97, 5, -1),
            Trans(1, 6, 2, 314),
            Trans(1, 7, 2, 314),
            Trans(1, 33, 13, 315),
            Trans(1, 44, 2, 314),
            Trans(1, 61, 13, 315),
            Trans(1, 66, 2, 314),
            Trans(1, 71, 2, 314),
            Trans(1, 72, 2, 314),
            Trans(1, 75, 2, 314),
            Trans(1, 77, 2, 314),
            Trans(1, 79, 2, 314),
            Trans(1, 83, 2, 314),
            Trans(1, 84, 2, 314),
            Trans(1, 85, 2, 314),
            Trans(1, 86, 2, 314),
            Trans(1, 87, 2, 314),
            Trans(1, 88, 2, 314),
            Trans(1, 89, 2, 314),
            Trans(1, 90, 2, 314),
            Trans(1, 91, 2, 314),
            Trans(1, 92, 2, 314),
            Trans(1, 93, 2, 314),
            Trans(1, 94, 2, 314),
            Trans(1, 95, 2, 314),
            Trans(1, 96, 2, 314),
            Trans(3, 6, 2, 314),
            Trans(3, 7, 2, 314),
            Trans(3, 44, 2, 314),
            Trans(3, 66, 2, 314),
            Trans(3, 71, 2, 314),
            Trans(3, 72, 2, 314),
            Trans(3, 75, 2, 314),
            Trans(3, 77, 2, 314),
            Trans(3, 79, 2, 314),
            Trans(3, 83, 2, 314),
            Trans(3, 84, 2, 314),
            Trans(3, 85, 2, 314),
            Trans(3, 86, 2, 314),
            Trans(3, 87, 2, 314),
            Trans(3, 88, 2, 314),
            Trans(3, 89, 2, 314),
            Trans(3, 90, 2, 314),
            Trans(3, 91, 2, 314),
            Trans(3, 92, 2, 314),
            Trans(3, 93, 2, 314),
            Trans(3, 94, 2, 314),
            Trans(3, 95, 2, 314),
            Trans(3, 96, 2, 314),
            Trans(4, 6, 2, 314),
            Trans(4, 7, 2, 314),
            Trans(4, 44, 2, 314),
            Trans(4, 66, 2, 314),
            Trans(4, 71, 2, 314),
            Trans(4, 72, 2, 314),
            Trans(4, 73, 2, 314),
            Trans(4, 75, 2, 314),
            Trans(4, 77, 2, 314),
            Trans(4, 78, 2, 314),
            Trans(4, 79, 2, 314),
            Trans(4, 83, 2, 314),
            Trans(4, 84, 2, 314),
            Trans(4, 85, 2, 314),
            Trans(4, 86, 2, 314),
            Trans(4, 87, 2, 314),
            Trans(4, 88, 2, 314),
            Trans(4, 89, 2, 314),
            Trans(4, 90, 2, 314),
            Trans(4, 91, 2, 314),
            Trans(4, 92, 2, 314),
            Trans(4, 93, 2, 314),
            Trans(4, 94, 2, 314),
            Trans(4, 95, 2, 314),
            Trans(4, 96, 2, 314),
            Trans(4, 97, 2, 314),
            Trans(5, 15, 2, 314),
            Trans(5, 22, 2, 314),
            Trans(5, 28, 2, 314),
            Trans(5, 33, 2, 314),
            Trans(5, 37, 2, 314),
            Trans(5, 42, 2, 314),
            Trans(5, 52, 2, 314),
            Trans(5, 59, 2, 314),
            Trans(5, 64, 2, 314),
            Trans(5, 65, 2, 314),
            Trans(5, 66, 2, 314),
            Trans(5, 67, 2, 314),
            Trans(5, 68, 2, 314),
            Trans(5, 69, 2, 314),
            Trans(5, 70, 2, 314),
            Trans(5, 73, 2, 314),
            Trans(5, 78, 2, 314),
            Trans(5, 80, 2, 314),
            Trans(5, 89, 2, 314),
            Trans(5, 90, 2, 314),
            Trans(5, 91, 2, 314),
            Trans(5, 92, 2, 314),
            Trans(5, 97, 2, 314),
            Trans(6, 15, 2, 314),
            Trans(6, 22, 2, 314),
            Trans(6, 28, 2, 314),
            Trans(6, 37, 2, 314),
            Trans(6, 52, 2, 314),
            Trans(6, 59, 2, 314),
            Trans(6, 64, 2, 314),
            Trans(6, 65, 2, 314),
            Trans(6, 66, 2, 314),
            Trans(6, 67, 2, 314),
            Trans(6, 68, 2, 314),
            Trans(6, 69, 2, 314),
            Trans(6, 70, 2, 314),
            Trans(6, 73, 2, 314),
            Trans(6, 78, 2, 314),
            Trans(6, 80, 2, 314),
            Trans(6, 89, 2, 314),
            Trans(6, 90, 2, 314),
            Trans(6, 91, 2, 314),
            Trans(6, 92, 2, 314),
            Trans(6, 97, 2, 314),
            Trans(7, 15, 2, 314),
            Trans(7, 22, 2, 314),
            Trans(7, 28, 2, 314),
            Trans(7, 33, 2, 314),
            Trans(7, 37, 2, 314),
            Trans(7, 42, 2, 314),
            Trans(7, 52, 2, 314),
            Trans(7, 59, 2, 314),
            Trans(7, 64, 2, 314),
            Trans(7, 65, 2, 314),
            Trans(7, 66, 2, 314),
            Trans(7, 67, 2, 314),
            Trans(7, 68, 2, 314),
            Trans(7, 69, 2, 314),
            Trans(7, 70, 2, 314),
            Trans(7, 73, 2, 314),
            Trans(7, 74, 2, 314),
            Trans(7, 76, 2, 314),
            Trans(7, 78, 2, 314),
            Trans(7, 80, 2, 314),
            Trans(7, 89, 2, 314),
            Trans(7, 90, 2, 314),
            Trans(7, 91, 2, 314),
            Trans(7, 92, 2, 314),
            Trans(7, 97, 2, 314),
            Trans(8, 15, 2, 314),
            Trans(8, 22, 2, 314),
            Trans(8, 28, 2, 314),
            Trans(8, 37, 2, 314),
            Trans(8, 52, 2, 314),
            Trans(8, 59, 2, 314),
            Trans(8, 64, 2, 314),
            Trans(8, 65, 2, 314),
            Trans(8, 66, 2, 314),
            Trans(8, 67, 2, 314),
            Trans(8, 68, 2, 314),
            Trans(8, 69, 2, 314),
            Trans(8, 70, 2, 314),
            Trans(8, 73, 2, 314),
            Trans(8, 78, 2, 314),
            Trans(8, 80, 2, 314),
            Trans(8, 97, 2, 314),
            Trans(9, 64, 2, 314),
            Trans(9, 65, 2, 314),
            Trans(10, 73, 2, 314),
            Trans(11, 11, 13, 315),
            Trans(11, 15, 13, 315),
            Trans(11, 22, 13, 315),
            Trans(11, 28, 13, 315),
            Trans(11, 31, 13, 315),
            Trans(11, 33, 13, 315),
            Trans(11, 37, 13, 315),
            Trans(11, 42, 13, 315),
            Trans(11, 52, 13, 315),
            Trans(11, 59, 13, 315),
            Trans(11, 61, 13, 315),
            Trans(11, 64, 13, 315),
            Trans(11, 65, 13, 315),
            Trans(11, 66, 13, 315),
            Trans(11, 67, 13, 315),
            Trans(11, 68, 13, 315),
            Trans(11, 69, 13, 315),
            Trans(11, 70, 13, 315),
            Trans(11, 73, 13, 315),
            Trans(11, 78, 13, 315),
            Trans(11, 80, 13, 315),
            Trans(11, 89, 13, 315),
            Trans(11, 90, 13, 315),
            Trans(11, 91, 13, 315),
            Trans(11, 92, 13, 315),
            Trans(11, 97, 13, 315),
            Trans(12, 15, 13, 315),
            Trans(12, 22, 13, 315),
            Trans(12, 28, 13, 315),
            Trans(12, 33, 13, 315),
            Trans(12, 37, 13, 315),
            Trans(12, 42, 13, 315),
            Trans(12, 52, 13, 315),
            Trans(12, 59, 13, 315),
            Trans(12, 64, 13, 315),
            Trans(12, 65, 13, 315),
            Trans(12, 66, 13, 315),
            Trans(12, 67, 13, 315),
            Trans(12, 68, 13, 315),
            Trans(12, 69, 13, 315),
            Trans(12, 70, 13, 315),
            Trans(12, 73, 13, 315),
            Trans(12, 78, 13, 315),
            Trans(12, 80, 13, 315),
            Trans(12, 89, 13, 315),
            Trans(12, 90, 13, 315),
            Trans(12, 91, 13, 315),
            Trans(12, 92, 13, 315),
            Trans(12, 97, 13, 315),
        ],
        k: 2,
    },
    /* 134 - "equation_section" */
    LookaheadDFA {
        prod0: 281,
        transitions: &[],
        k: 0,
    },
    /* 135 - "equation_sectionList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 12, -1),
            Trans(0, 7, 13, -1),
            Trans(0, 11, 10, -1),
            Trans(0, 15, 10, -1),
            Trans(0, 22, 1, -1),
            Trans(0, 24, 14, -1),
            Trans(0, 27, 15, -1),
            Trans(0, 28, 3, -1),
            Trans(0, 31, 9, -1),
            Trans(0, 33, 5, -1),
            Trans(0, 37, 11, -1),
            Trans(0, 42, 6, -1),
            Trans(0, 50, 16, -1),
            Trans(0, 51, 16, -1),
            Trans(0, 52, 10, -1),
            Trans(0, 59, 3, -1),
            Trans(0, 61, 5, -1),
            Trans(0, 64, 4, -1),
            Trans(0, 65, 4, -1),
            Trans(0, 66, 3, -1),
            Trans(0, 67, 3, -1),
            Trans(0, 68, 3, -1),
            Trans(0, 69, 3, -1),
            Trans(0, 70, 3, -1),
            Trans(0, 73, 7, -1),
            Trans(0, 78, 9, -1),
            Trans(0, 80, 5, -1),
            Trans(0, 89, 8, -1),
            Trans(0, 90, 8, -1),
            Trans(0, 91, 8, -1),
            Trans(0, 92, 8, -1),
            Trans(0, 97, 5, -1),
            Trans(1, 6, 2, 282),
            Trans(1, 7, 2, 282),
            Trans(1, 44, 2, 282),
            Trans(1, 64, 17, 283),
            Trans(1, 65, 17, 283),
            Trans(1, 66, 2, 282),
            Trans(1, 71, 2, 282),
            Trans(1, 72, 2, 282),
            Trans(1, 75, 2, 282),
            Trans(1, 77, 2, 282),
            Trans(1, 79, 2, 282),
            Trans(1, 83, 2, 282),
            Trans(1, 84, 2, 282),
            Trans(1, 85, 2, 282),
            Trans(1, 86, 2, 282),
            Trans(1, 87, 2, 282),
            Trans(1, 88, 2, 282),
            Trans(1, 89, 2, 282),
            Trans(1, 90, 2, 282),
            Trans(1, 91, 2, 282),
            Trans(1, 92, 2, 282),
            Trans(1, 93, 2, 282),
            Trans(1, 94, 2, 282),
            Trans(1, 95, 2, 282),
            Trans(1, 96, 2, 282),
            Trans(3, 6, 2, 282),
            Trans(3, 7, 2, 282),
            Trans(3, 44, 2, 282),
            Trans(3, 66, 2, 282),
            Trans(3, 71, 2, 282),
            Trans(3, 72, 2, 282),
            Trans(3, 75, 2, 282),
            Trans(3, 77, 2, 282),
            Trans(3, 79, 2, 282),
            Trans(3, 83, 2, 282),
            Trans(3, 84, 2, 282),
            Trans(3, 85, 2, 282),
            Trans(3, 86, 2, 282),
            Trans(3, 87, 2, 282),
            Trans(3, 88, 2, 282),
            Trans(3, 89, 2, 282),
            Trans(3, 90, 2, 282),
            Trans(3, 91, 2, 282),
            Trans(3, 92, 2, 282),
            Trans(3, 93, 2, 282),
            Trans(3, 94, 2, 282),
            Trans(3, 95, 2, 282),
            Trans(3, 96, 2, 282),
            Trans(4, 6, 2, 282),
            Trans(4, 7, 2, 282),
            Trans(4, 44, 2, 282),
            Trans(4, 66, 2, 282),
            Trans(4, 71, 2, 282),
            Trans(4, 72, 2, 282),
            Trans(4, 73, 2, 282),
            Trans(4, 75, 2, 282),
            Trans(4, 77, 2, 282),
            Trans(4, 78, 2, 282),
            Trans(4, 79, 2, 282),
            Trans(4, 83, 2, 282),
            Trans(4, 84, 2, 282),
            Trans(4, 85, 2, 282),
            Trans(4, 86, 2, 282),
            Trans(4, 87, 2, 282),
            Trans(4, 88, 2, 282),
            Trans(4, 89, 2, 282),
            Trans(4, 90, 2, 282),
            Trans(4, 91, 2, 282),
            Trans(4, 92, 2, 282),
            Trans(4, 93, 2, 282),
            Trans(4, 94, 2, 282),
            Trans(4, 95, 2, 282),
            Trans(4, 96, 2, 282),
            Trans(4, 97, 2, 282),
            Trans(5, 15, 2, 282),
            Trans(5, 22, 2, 282),
            Trans(5, 28, 2, 282),
            Trans(5, 33, 2, 282),
            Trans(5, 37, 2, 282),
            Trans(5, 42, 2, 282),
            Trans(5, 52, 2, 282),
            Trans(5, 59, 2, 282),
            Trans(5, 64, 2, 282),
            Trans(5, 65, 2, 282),
            Trans(5, 66, 2, 282),
            Trans(5, 67, 2, 282),
            Trans(5, 68, 2, 282),
            Trans(5, 69, 2, 282),
            Trans(5, 70, 2, 282),
            Trans(5, 73, 2, 282),
            Trans(5, 78, 2, 282),
            Trans(5, 80, 2, 282),
            Trans(5, 89, 2, 282),
            Trans(5, 90, 2, 282),
            Trans(5, 91, 2, 282),
            Trans(5, 92, 2, 282),
            Trans(5, 97, 2, 282),
            Trans(6, 15, 2, 282),
            Trans(6, 22, 2, 282),
            Trans(6, 28, 2, 282),
            Trans(6, 37, 2, 282),
            Trans(6, 52, 2, 282),
            Trans(6, 59, 2, 282),
            Trans(6, 64, 2, 282),
            Trans(6, 65, 2, 282),
            Trans(6, 66, 2, 282),
            Trans(6, 67, 2, 282),
            Trans(6, 68, 2, 282),
            Trans(6, 69, 2, 282),
            Trans(6, 70, 2, 282),
            Trans(6, 73, 2, 282),
            Trans(6, 78, 2, 282),
            Trans(6, 80, 2, 282),
            Trans(6, 89, 2, 282),
            Trans(6, 90, 2, 282),
            Trans(6, 91, 2, 282),
            Trans(6, 92, 2, 282),
            Trans(6, 97, 2, 282),
            Trans(7, 15, 2, 282),
            Trans(7, 22, 2, 282),
            Trans(7, 28, 2, 282),
            Trans(7, 33, 2, 282),
            Trans(7, 37, 2, 282),
            Trans(7, 42, 2, 282),
            Trans(7, 52, 2, 282),
            Trans(7, 59, 2, 282),
            Trans(7, 64, 2, 282),
            Trans(7, 65, 2, 282),
            Trans(7, 66, 2, 282),
            Trans(7, 67, 2, 282),
            Trans(7, 68, 2, 282),
            Trans(7, 69, 2, 282),
            Trans(7, 70, 2, 282),
            Trans(7, 73, 2, 282),
            Trans(7, 74, 2, 282),
            Trans(7, 76, 2, 282),
            Trans(7, 78, 2, 282),
            Trans(7, 80, 2, 282),
            Trans(7, 89, 2, 282),
            Trans(7, 90, 2, 282),
            Trans(7, 91, 2, 282),
            Trans(7, 92, 2, 282),
            Trans(7, 97, 2, 282),
            Trans(8, 15, 2, 282),
            Trans(8, 22, 2, 282),
            Trans(8, 28, 2, 282),
            Trans(8, 37, 2, 282),
            Trans(8, 52, 2, 282),
            Trans(8, 59, 2, 282),
            Trans(8, 64, 2, 282),
            Trans(8, 65, 2, 282),
            Trans(8, 66, 2, 282),
            Trans(8, 67, 2, 282),
            Trans(8, 68, 2, 282),
            Trans(8, 69, 2, 282),
            Trans(8, 70, 2, 282),
            Trans(8, 73, 2, 282),
            Trans(8, 78, 2, 282),
            Trans(8, 80, 2, 282),
            Trans(8, 97, 2, 282),
            Trans(9, 64, 2, 282),
            Trans(9, 65, 2, 282),
            Trans(10, 73, 2, 282),
            Trans(11, 5, 17, 283),
            Trans(11, 24, 17, 283),
            Trans(11, 73, 2, 282),
            Trans(12, 5, 17, 283),
            Trans(12, 7, 17, 283),
            Trans(12, 9, 17, 283),
            Trans(12, 22, 17, 283),
            Trans(12, 24, 17, 283),
            Trans(12, 27, 17, 283),
            Trans(12, 31, 17, 283),
            Trans(12, 33, 17, 283),
            Trans(12, 37, 17, 283),
            Trans(12, 50, 17, 283),
            Trans(12, 51, 17, 283),
            Trans(12, 56, 17, 283),
            Trans(12, 61, 17, 283),
            Trans(12, 62, 17, 283),
            Trans(12, 64, 17, 283),
            Trans(12, 65, 17, 283),
            Trans(12, 73, 17, 283),
            Trans(12, 78, 17, 283),
            Trans(13, 73, 17, 283),
            Trans(14, 5, 17, 283),
            Trans(14, 7, 17, 283),
            Trans(14, 11, 17, 283),
            Trans(14, 15, 17, 283),
            Trans(14, 22, 17, 283),
            Trans(14, 24, 17, 283),
            Trans(14, 27, 17, 283),
            Trans(14, 28, 17, 283),
            Trans(14, 31, 17, 283),
            Trans(14, 33, 17, 283),
            Trans(14, 37, 17, 283),
            Trans(14, 42, 17, 283),
            Trans(14, 50, 17, 283),
            Trans(14, 51, 17, 283),
            Trans(14, 52, 17, 283),
            Trans(14, 59, 17, 283),
            Trans(14, 61, 17, 283),
            Trans(14, 64, 17, 283),
            Trans(14, 65, 17, 283),
            Trans(14, 66, 17, 283),
            Trans(14, 67, 17, 283),
            Trans(14, 68, 17, 283),
            Trans(14, 69, 17, 283),
            Trans(14, 70, 17, 283),
            Trans(14, 73, 17, 283),
            Trans(14, 78, 17, 283),
            Trans(14, 80, 17, 283),
            Trans(14, 89, 17, 283),
            Trans(14, 90, 17, 283),
            Trans(14, 91, 17, 283),
            Trans(14, 92, 17, 283),
            Trans(14, 97, 17, 283),
            Trans(15, 7, 17, 283),
            Trans(15, 64, 17, 283),
            Trans(15, 65, 17, 283),
            Trans(15, 66, 17, 283),
            Trans(15, 71, 17, 283),
            Trans(15, 78, 17, 283),
            Trans(16, 5, 17, 283),
            Trans(16, 7, 17, 283),
            Trans(16, 8, 17, 283),
            Trans(16, 10, 17, 283),
            Trans(16, 12, 17, 283),
            Trans(16, 13, 17, 283),
            Trans(16, 16, 17, 283),
            Trans(16, 21, 17, 283),
            Trans(16, 22, 17, 283),
            Trans(16, 24, 17, 283),
            Trans(16, 25, 17, 283),
            Trans(16, 26, 17, 283),
            Trans(16, 27, 17, 283),
            Trans(16, 29, 17, 283),
            Trans(16, 30, 17, 283),
            Trans(16, 32, 17, 283),
            Trans(16, 34, 17, 283),
            Trans(16, 35, 17, 283),
            Trans(16, 37, 17, 283),
            Trans(16, 38, 17, 283),
            Trans(16, 39, 17, 283),
            Trans(16, 41, 17, 283),
            Trans(16, 43, 17, 283),
            Trans(16, 45, 17, 283),
            Trans(16, 46, 17, 283),
            Trans(16, 47, 17, 283),
            Trans(16, 48, 17, 283),
            Trans(16, 49, 17, 283),
            Trans(16, 50, 17, 283),
            Trans(16, 51, 17, 283),
            Trans(16, 52, 17, 283),
            Trans(16, 53, 17, 283),
            Trans(16, 54, 17, 283),
            Trans(16, 55, 17, 283),
            Trans(16, 57, 17, 283),
            Trans(16, 60, 17, 283),
            Trans(16, 64, 17, 283),
            Trans(16, 65, 17, 283),
            Trans(16, 78, 17, 283),
        ],
        k: 2,
    },
    /* 136 - "equation_sectionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 24, 2, 285), Trans(0, 37, 1, 284)],
        k: 1,
    },
    /* 137 - "expandable" */
    LookaheadDFA {
        prod0: 20,
        transitions: &[],
        k: 0,
    },
    /* 138 - "expression" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 1, 355),
            Trans(0, 22, 1, 355),
            Trans(0, 28, 1, 355),
            Trans(0, 33, 2, 356),
            Trans(0, 37, 1, 355),
            Trans(0, 42, 1, 355),
            Trans(0, 52, 1, 355),
            Trans(0, 59, 1, 355),
            Trans(0, 64, 1, 355),
            Trans(0, 65, 1, 355),
            Trans(0, 66, 1, 355),
            Trans(0, 67, 1, 355),
            Trans(0, 68, 1, 355),
            Trans(0, 69, 1, 355),
            Trans(0, 70, 1, 355),
            Trans(0, 73, 1, 355),
            Trans(0, 78, 1, 355),
            Trans(0, 80, 1, 355),
            Trans(0, 89, 1, 355),
            Trans(0, 90, 1, 355),
            Trans(0, 91, 1, 355),
            Trans(0, 92, 1, 355),
            Trans(0, 97, 1, 355),
        ],
        k: 1,
    },
    /* 139 - "expression_list" */
    LookaheadDFA {
        prod0: 488,
        transitions: &[],
        k: 0,
    },
    /* 140 - "expression_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 71, 2, 490),
            Trans(0, 74, 2, 490),
            Trans(0, 76, 1, 489),
            Trans(0, 98, 2, 490),
        ],
        k: 1,
    },
    /* 141 - "extends" */
    LookaheadDFA {
        prod0: 21,
        transitions: &[],
        k: 0,
    },
    /* 142 - "extends_class_specifier" */
    LookaheadDFA {
        prod0: 106,
        transitions: &[],
        k: 0,
    },
    /* 143 - "extends_class_specifierOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 5, 2, 108),
            Trans(0, 7, 2, 108),
            Trans(0, 8, 2, 108),
            Trans(0, 10, 2, 108),
            Trans(0, 12, 2, 108),
            Trans(0, 13, 2, 108),
            Trans(0, 16, 2, 108),
            Trans(0, 21, 2, 108),
            Trans(0, 22, 2, 108),
            Trans(0, 24, 2, 108),
            Trans(0, 25, 2, 108),
            Trans(0, 26, 2, 108),
            Trans(0, 27, 2, 108),
            Trans(0, 29, 2, 108),
            Trans(0, 30, 2, 108),
            Trans(0, 32, 2, 108),
            Trans(0, 34, 2, 108),
            Trans(0, 35, 2, 108),
            Trans(0, 37, 2, 108),
            Trans(0, 38, 2, 108),
            Trans(0, 39, 2, 108),
            Trans(0, 41, 2, 108),
            Trans(0, 43, 2, 108),
            Trans(0, 45, 2, 108),
            Trans(0, 46, 2, 108),
            Trans(0, 47, 2, 108),
            Trans(0, 48, 2, 108),
            Trans(0, 49, 2, 108),
            Trans(0, 50, 2, 108),
            Trans(0, 51, 2, 108),
            Trans(0, 52, 2, 108),
            Trans(0, 53, 2, 108),
            Trans(0, 54, 2, 108),
            Trans(0, 55, 2, 108),
            Trans(0, 57, 2, 108),
            Trans(0, 60, 2, 108),
            Trans(0, 64, 2, 108),
            Trans(0, 65, 2, 108),
            Trans(0, 66, 2, 108),
            Trans(0, 73, 1, 107),
            Trans(0, 78, 2, 108),
        ],
        k: 1,
    },
    /* 144 - "extends_clause" */
    LookaheadDFA {
        prod0: 191,
        transitions: &[],
        k: 0,
    },
    /* 145 - "extends_clauseOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 195),
            Trans(0, 71, 2, 195),
            Trans(0, 73, 1, 194),
        ],
        k: 1,
    },
    /* 146 - "extends_clauseOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 7, 1, 192), Trans(0, 71, 2, 193)],
        k: 1,
    },
    /* 147 - "external" */
    LookaheadDFA {
        prod0: 22,
        transitions: &[],
        k: 0,
    },
    /* 148 - "external_function_call" */
    LookaheadDFA {
        prod0: 151,
        transitions: &[],
        k: 0,
    },
    /* 149 - "external_function_callOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 3, -1),
            Trans(0, 65, 3, -1),
            Trans(0, 78, 1, -1),
            Trans(1, 64, 2, 154),
            Trans(1, 65, 2, 154),
            Trans(3, 72, 2, 154),
            Trans(3, 73, 4, 155),
            Trans(3, 78, 2, 154),
            Trans(3, 97, 2, 154),
        ],
        k: 2,
    },
    /* 150 - "external_function_callOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 1, 152),
            Trans(0, 22, 1, 152),
            Trans(0, 28, 1, 152),
            Trans(0, 33, 1, 152),
            Trans(0, 37, 1, 152),
            Trans(0, 42, 1, 152),
            Trans(0, 52, 1, 152),
            Trans(0, 59, 1, 152),
            Trans(0, 64, 1, 152),
            Trans(0, 65, 1, 152),
            Trans(0, 66, 1, 152),
            Trans(0, 67, 1, 152),
            Trans(0, 68, 1, 152),
            Trans(0, 69, 1, 152),
            Trans(0, 70, 1, 152),
            Trans(0, 73, 1, 152),
            Trans(0, 74, 2, 153),
            Trans(0, 78, 1, 152),
            Trans(0, 80, 1, 152),
            Trans(0, 89, 1, 152),
            Trans(0, 90, 1, 152),
            Trans(0, 91, 1, 152),
            Trans(0, 92, 1, 152),
            Trans(0, 97, 1, 152),
        ],
        k: 1,
    },
    /* 151 - "factor" */
    LookaheadDFA {
        prod0: 399,
        transitions: &[],
        k: 0,
    },
    /* 152 - "factorList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 403),
            Trans(0, 7, 2, 403),
            Trans(0, 14, 2, 403),
            Trans(0, 18, 2, 403),
            Trans(0, 19, 2, 403),
            Trans(0, 31, 2, 403),
            Trans(0, 33, 2, 403),
            Trans(0, 40, 2, 403),
            Trans(0, 44, 2, 403),
            Trans(0, 58, 2, 403),
            Trans(0, 66, 2, 403),
            Trans(0, 71, 2, 403),
            Trans(0, 72, 2, 403),
            Trans(0, 74, 2, 403),
            Trans(0, 75, 2, 403),
            Trans(0, 76, 2, 403),
            Trans(0, 77, 2, 403),
            Trans(0, 79, 2, 403),
            Trans(0, 81, 2, 403),
            Trans(0, 83, 2, 403),
            Trans(0, 84, 2, 403),
            Trans(0, 85, 2, 403),
            Trans(0, 86, 2, 403),
            Trans(0, 87, 2, 403),
            Trans(0, 88, 2, 403),
            Trans(0, 89, 2, 403),
            Trans(0, 90, 2, 403),
            Trans(0, 91, 2, 403),
            Trans(0, 92, 2, 403),
            Trans(0, 93, 2, 403),
            Trans(0, 94, 2, 403),
            Trans(0, 95, 1, 400),
            Trans(0, 96, 1, 400),
            Trans(0, 98, 2, 403),
        ],
        k: 1,
    },
    /* 153 - "factorListGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 95, 1, 401), Trans(0, 96, 2, 402)],
        k: 1,
    },
    /* 154 - "false" */
    LookaheadDFA {
        prod0: 23,
        transitions: &[],
        k: 0,
    },
    /* 155 - "final" */
    LookaheadDFA {
        prod0: 24,
        transitions: &[],
        k: 0,
    },
    /* 156 - "flow" */
    LookaheadDFA {
        prod0: 25,
        transitions: &[],
        k: 0,
    },
    /* 157 - "for" */
    LookaheadDFA {
        prod0: 26,
        transitions: &[],
        k: 0,
    },
    /* 158 - "for_equation" */
    LookaheadDFA {
        prod0: 333,
        transitions: &[],
        k: 0,
    },
    /* 159 - "for_equationList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 11, 10, -1),
            Trans(0, 15, 10, -1),
            Trans(0, 22, 1, -1),
            Trans(0, 28, 3, -1),
            Trans(0, 31, 9, -1),
            Trans(0, 33, 5, -1),
            Trans(0, 37, 10, -1),
            Trans(0, 42, 6, -1),
            Trans(0, 52, 10, -1),
            Trans(0, 59, 3, -1),
            Trans(0, 61, 5, -1),
            Trans(0, 64, 4, -1),
            Trans(0, 65, 4, -1),
            Trans(0, 66, 3, -1),
            Trans(0, 67, 3, -1),
            Trans(0, 68, 3, -1),
            Trans(0, 69, 3, -1),
            Trans(0, 70, 3, -1),
            Trans(0, 73, 7, -1),
            Trans(0, 78, 9, -1),
            Trans(0, 80, 5, -1),
            Trans(0, 89, 8, -1),
            Trans(0, 90, 8, -1),
            Trans(0, 91, 8, -1),
            Trans(0, 92, 8, -1),
            Trans(0, 97, 5, -1),
            Trans(1, 6, 2, 334),
            Trans(1, 7, 2, 334),
            Trans(1, 31, 11, 335),
            Trans(1, 44, 2, 334),
            Trans(1, 66, 2, 334),
            Trans(1, 71, 2, 334),
            Trans(1, 72, 2, 334),
            Trans(1, 75, 2, 334),
            Trans(1, 77, 2, 334),
            Trans(1, 79, 2, 334),
            Trans(1, 83, 2, 334),
            Trans(1, 84, 2, 334),
            Trans(1, 85, 2, 334),
            Trans(1, 86, 2, 334),
            Trans(1, 87, 2, 334),
            Trans(1, 88, 2, 334),
            Trans(1, 89, 2, 334),
            Trans(1, 90, 2, 334),
            Trans(1, 91, 2, 334),
            Trans(1, 92, 2, 334),
            Trans(1, 93, 2, 334),
            Trans(1, 94, 2, 334),
            Trans(1, 95, 2, 334),
            Trans(1, 96, 2, 334),
            Trans(3, 6, 2, 334),
            Trans(3, 7, 2, 334),
            Trans(3, 44, 2, 334),
            Trans(3, 66, 2, 334),
            Trans(3, 71, 2, 334),
            Trans(3, 72, 2, 334),
            Trans(3, 75, 2, 334),
            Trans(3, 77, 2, 334),
            Trans(3, 79, 2, 334),
            Trans(3, 83, 2, 334),
            Trans(3, 84, 2, 334),
            Trans(3, 85, 2, 334),
            Trans(3, 86, 2, 334),
            Trans(3, 87, 2, 334),
            Trans(3, 88, 2, 334),
            Trans(3, 89, 2, 334),
            Trans(3, 90, 2, 334),
            Trans(3, 91, 2, 334),
            Trans(3, 92, 2, 334),
            Trans(3, 93, 2, 334),
            Trans(3, 94, 2, 334),
            Trans(3, 95, 2, 334),
            Trans(3, 96, 2, 334),
            Trans(4, 6, 2, 334),
            Trans(4, 7, 2, 334),
            Trans(4, 44, 2, 334),
            Trans(4, 66, 2, 334),
            Trans(4, 71, 2, 334),
            Trans(4, 72, 2, 334),
            Trans(4, 73, 2, 334),
            Trans(4, 75, 2, 334),
            Trans(4, 77, 2, 334),
            Trans(4, 78, 2, 334),
            Trans(4, 79, 2, 334),
            Trans(4, 83, 2, 334),
            Trans(4, 84, 2, 334),
            Trans(4, 85, 2, 334),
            Trans(4, 86, 2, 334),
            Trans(4, 87, 2, 334),
            Trans(4, 88, 2, 334),
            Trans(4, 89, 2, 334),
            Trans(4, 90, 2, 334),
            Trans(4, 91, 2, 334),
            Trans(4, 92, 2, 334),
            Trans(4, 93, 2, 334),
            Trans(4, 94, 2, 334),
            Trans(4, 95, 2, 334),
            Trans(4, 96, 2, 334),
            Trans(4, 97, 2, 334),
            Trans(5, 15, 2, 334),
            Trans(5, 22, 2, 334),
            Trans(5, 28, 2, 334),
            Trans(5, 33, 2, 334),
            Trans(5, 37, 2, 334),
            Trans(5, 42, 2, 334),
            Trans(5, 52, 2, 334),
            Trans(5, 59, 2, 334),
            Trans(5, 64, 2, 334),
            Trans(5, 65, 2, 334),
            Trans(5, 66, 2, 334),
            Trans(5, 67, 2, 334),
            Trans(5, 68, 2, 334),
            Trans(5, 69, 2, 334),
            Trans(5, 70, 2, 334),
            Trans(5, 73, 2, 334),
            Trans(5, 78, 2, 334),
            Trans(5, 80, 2, 334),
            Trans(5, 89, 2, 334),
            Trans(5, 90, 2, 334),
            Trans(5, 91, 2, 334),
            Trans(5, 92, 2, 334),
            Trans(5, 97, 2, 334),
            Trans(6, 15, 2, 334),
            Trans(6, 22, 2, 334),
            Trans(6, 28, 2, 334),
            Trans(6, 37, 2, 334),
            Trans(6, 52, 2, 334),
            Trans(6, 59, 2, 334),
            Trans(6, 64, 2, 334),
            Trans(6, 65, 2, 334),
            Trans(6, 66, 2, 334),
            Trans(6, 67, 2, 334),
            Trans(6, 68, 2, 334),
            Trans(6, 69, 2, 334),
            Trans(6, 70, 2, 334),
            Trans(6, 73, 2, 334),
            Trans(6, 78, 2, 334),
            Trans(6, 80, 2, 334),
            Trans(6, 89, 2, 334),
            Trans(6, 90, 2, 334),
            Trans(6, 91, 2, 334),
            Trans(6, 92, 2, 334),
            Trans(6, 97, 2, 334),
            Trans(7, 15, 2, 334),
            Trans(7, 22, 2, 334),
            Trans(7, 28, 2, 334),
            Trans(7, 33, 2, 334),
            Trans(7, 37, 2, 334),
            Trans(7, 42, 2, 334),
            Trans(7, 52, 2, 334),
            Trans(7, 59, 2, 334),
            Trans(7, 64, 2, 334),
            Trans(7, 65, 2, 334),
            Trans(7, 66, 2, 334),
            Trans(7, 67, 2, 334),
            Trans(7, 68, 2, 334),
            Trans(7, 69, 2, 334),
            Trans(7, 70, 2, 334),
            Trans(7, 73, 2, 334),
            Trans(7, 74, 2, 334),
            Trans(7, 76, 2, 334),
            Trans(7, 78, 2, 334),
            Trans(7, 80, 2, 334),
            Trans(7, 89, 2, 334),
            Trans(7, 90, 2, 334),
            Trans(7, 91, 2, 334),
            Trans(7, 92, 2, 334),
            Trans(7, 97, 2, 334),
            Trans(8, 15, 2, 334),
            Trans(8, 22, 2, 334),
            Trans(8, 28, 2, 334),
            Trans(8, 37, 2, 334),
            Trans(8, 52, 2, 334),
            Trans(8, 59, 2, 334),
            Trans(8, 64, 2, 334),
            Trans(8, 65, 2, 334),
            Trans(8, 66, 2, 334),
            Trans(8, 67, 2, 334),
            Trans(8, 68, 2, 334),
            Trans(8, 69, 2, 334),
            Trans(8, 70, 2, 334),
            Trans(8, 73, 2, 334),
            Trans(8, 78, 2, 334),
            Trans(8, 80, 2, 334),
            Trans(8, 97, 2, 334),
            Trans(9, 64, 2, 334),
            Trans(9, 65, 2, 334),
            Trans(10, 73, 2, 334),
        ],
        k: 2,
    },
    /* 160 - "for_index" */
    LookaheadDFA {
        prod0: 342,
        transitions: &[],
        k: 0,
    },
    /* 161 - "for_indexOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 36, 1, 343),
            Trans(0, 40, 2, 344),
            Trans(0, 74, 2, 344),
            Trans(0, 76, 2, 344),
            Trans(0, 81, 2, 344),
        ],
        k: 1,
    },
    /* 162 - "for_indices" */
    LookaheadDFA {
        prod0: 339,
        transitions: &[],
        k: 0,
    },
    /* 163 - "for_indicesList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 40, 2, 341),
            Trans(0, 74, 2, 341),
            Trans(0, 76, 1, 340),
            Trans(0, 81, 2, 341),
        ],
        k: 1,
    },
    /* 164 - "for_statement" */
    LookaheadDFA {
        prod0: 336,
        transitions: &[],
        k: 0,
    },
    /* 165 - "for_statementList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 1, 337),
            Trans(0, 22, 2, 338),
            Trans(0, 31, 1, 337),
            Trans(0, 33, 1, 337),
            Trans(0, 56, 1, 337),
            Trans(0, 61, 1, 337),
            Trans(0, 62, 1, 337),
            Trans(0, 64, 1, 337),
            Trans(0, 65, 1, 337),
            Trans(0, 73, 1, 337),
            Trans(0, 78, 1, 337),
        ],
        k: 1,
    },
    /* 166 - "function" */
    LookaheadDFA {
        prod0: 27,
        transitions: &[],
        k: 0,
    },
    /* 167 - "function_argument" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 2, 477),
            Trans(0, 22, 2, 477),
            Trans(0, 28, 2, 477),
            Trans(0, 32, 1, 476),
            Trans(0, 33, 2, 477),
            Trans(0, 37, 2, 477),
            Trans(0, 42, 2, 477),
            Trans(0, 52, 2, 477),
            Trans(0, 59, 2, 477),
            Trans(0, 64, 2, 477),
            Trans(0, 65, 2, 477),
            Trans(0, 66, 2, 477),
            Trans(0, 67, 2, 477),
            Trans(0, 68, 2, 477),
            Trans(0, 69, 2, 477),
            Trans(0, 70, 2, 477),
            Trans(0, 73, 2, 477),
            Trans(0, 78, 2, 477),
            Trans(0, 80, 2, 477),
            Trans(0, 89, 2, 477),
            Trans(0, 90, 2, 477),
            Trans(0, 91, 2, 477),
            Trans(0, 92, 2, 477),
            Trans(0, 97, 2, 477),
        ],
        k: 1,
    },
    /* 168 - "function_arguments" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 9, -1),
            Trans(0, 22, 1, -1),
            Trans(0, 28, 1, -1),
            Trans(0, 32, 10, -1),
            Trans(0, 33, 4, -1),
            Trans(0, 37, 9, -1),
            Trans(0, 42, 5, -1),
            Trans(0, 52, 9, -1),
            Trans(0, 59, 1, -1),
            Trans(0, 64, 3, -1),
            Trans(0, 65, 3, -1),
            Trans(0, 66, 1, -1),
            Trans(0, 67, 1, -1),
            Trans(0, 68, 1, -1),
            Trans(0, 69, 1, -1),
            Trans(0, 70, 1, -1),
            Trans(0, 73, 6, -1),
            Trans(0, 78, 8, -1),
            Trans(0, 80, 4, -1),
            Trans(0, 89, 7, -1),
            Trans(0, 90, 7, -1),
            Trans(0, 91, 7, -1),
            Trans(0, 92, 7, -1),
            Trans(0, 97, 4, -1),
            Trans(1, 6, 2, 451),
            Trans(1, 31, 2, 451),
            Trans(1, 44, 2, 451),
            Trans(1, 74, 2, 451),
            Trans(1, 75, 2, 451),
            Trans(1, 76, 2, 451),
            Trans(1, 77, 2, 451),
            Trans(1, 79, 2, 451),
            Trans(1, 83, 2, 451),
            Trans(1, 84, 2, 451),
            Trans(1, 85, 2, 451),
            Trans(1, 86, 2, 451),
            Trans(1, 87, 2, 451),
            Trans(1, 88, 2, 451),
            Trans(1, 89, 2, 451),
            Trans(1, 90, 2, 451),
            Trans(1, 91, 2, 451),
            Trans(1, 92, 2, 451),
            Trans(1, 93, 2, 451),
            Trans(1, 94, 2, 451),
            Trans(1, 95, 2, 451),
            Trans(1, 96, 2, 451),
            Trans(3, 6, 2, 451),
            Trans(3, 31, 2, 451),
            Trans(3, 44, 2, 451),
            Trans(3, 72, 12, 453),
            Trans(3, 73, 2, 451),
            Trans(3, 74, 2, 451),
            Trans(3, 75, 2, 451),
            Trans(3, 76, 2, 451),
            Trans(3, 77, 2, 451),
            Trans(3, 78, 2, 451),
            Trans(3, 79, 2, 451),
            Trans(3, 83, 2, 451),
            Trans(3, 84, 2, 451),
            Trans(3, 85, 2, 451),
            Trans(3, 86, 2, 451),
            Trans(3, 87, 2, 451),
            Trans(3, 88, 2, 451),
            Trans(3, 89, 2, 451),
            Trans(3, 90, 2, 451),
            Trans(3, 91, 2, 451),
            Trans(3, 92, 2, 451),
            Trans(3, 93, 2, 451),
            Trans(3, 94, 2, 451),
            Trans(3, 95, 2, 451),
            Trans(3, 96, 2, 451),
            Trans(3, 97, 2, 451),
            Trans(4, 15, 2, 451),
            Trans(4, 22, 2, 451),
            Trans(4, 28, 2, 451),
            Trans(4, 33, 2, 451),
            Trans(4, 37, 2, 451),
            Trans(4, 42, 2, 451),
            Trans(4, 52, 2, 451),
            Trans(4, 59, 2, 451),
            Trans(4, 64, 2, 451),
            Trans(4, 65, 2, 451),
            Trans(4, 66, 2, 451),
            Trans(4, 67, 2, 451),
            Trans(4, 68, 2, 451),
            Trans(4, 69, 2, 451),
            Trans(4, 70, 2, 451),
            Trans(4, 73, 2, 451),
            Trans(4, 78, 2, 451),
            Trans(4, 80, 2, 451),
            Trans(4, 89, 2, 451),
            Trans(4, 90, 2, 451),
            Trans(4, 91, 2, 451),
            Trans(4, 92, 2, 451),
            Trans(4, 97, 2, 451),
            Trans(5, 15, 2, 451),
            Trans(5, 22, 2, 451),
            Trans(5, 28, 2, 451),
            Trans(5, 37, 2, 451),
            Trans(5, 52, 2, 451),
            Trans(5, 59, 2, 451),
            Trans(5, 64, 2, 451),
            Trans(5, 65, 2, 451),
            Trans(5, 66, 2, 451),
            Trans(5, 67, 2, 451),
            Trans(5, 68, 2, 451),
            Trans(5, 69, 2, 451),
            Trans(5, 70, 2, 451),
            Trans(5, 73, 2, 451),
            Trans(5, 78, 2, 451),
            Trans(5, 80, 2, 451),
            Trans(5, 89, 2, 451),
            Trans(5, 90, 2, 451),
            Trans(5, 91, 2, 451),
            Trans(5, 92, 2, 451),
            Trans(5, 97, 2, 451),
            Trans(6, 15, 2, 451),
            Trans(6, 22, 2, 451),
            Trans(6, 28, 2, 451),
            Trans(6, 33, 2, 451),
            Trans(6, 37, 2, 451),
            Trans(6, 42, 2, 451),
            Trans(6, 52, 2, 451),
            Trans(6, 59, 2, 451),
            Trans(6, 64, 2, 451),
            Trans(6, 65, 2, 451),
            Trans(6, 66, 2, 451),
            Trans(6, 67, 2, 451),
            Trans(6, 68, 2, 451),
            Trans(6, 69, 2, 451),
            Trans(6, 70, 2, 451),
            Trans(6, 73, 2, 451),
            Trans(6, 74, 2, 451),
            Trans(6, 76, 2, 451),
            Trans(6, 78, 2, 451),
            Trans(6, 80, 2, 451),
            Trans(6, 89, 2, 451),
            Trans(6, 90, 2, 451),
            Trans(6, 91, 2, 451),
            Trans(6, 92, 2, 451),
            Trans(6, 97, 2, 451),
            Trans(7, 15, 2, 451),
            Trans(7, 22, 2, 451),
            Trans(7, 28, 2, 451),
            Trans(7, 37, 2, 451),
            Trans(7, 52, 2, 451),
            Trans(7, 59, 2, 451),
            Trans(7, 64, 2, 451),
            Trans(7, 65, 2, 451),
            Trans(7, 66, 2, 451),
            Trans(7, 67, 2, 451),
            Trans(7, 68, 2, 451),
            Trans(7, 69, 2, 451),
            Trans(7, 70, 2, 451),
            Trans(7, 73, 2, 451),
            Trans(7, 78, 2, 451),
            Trans(7, 80, 2, 451),
            Trans(7, 97, 2, 451),
            Trans(8, 64, 2, 451),
            Trans(8, 65, 2, 451),
            Trans(9, 73, 2, 451),
            Trans(10, 64, 11, 452),
            Trans(10, 65, 11, 452),
            Trans(10, 78, 11, 452),
        ],
        k: 2,
    },
    /* 169 - "function_argumentsOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 31, 1, 456),
            Trans(0, 74, 2, 459),
            Trans(0, 76, 1, 456),
        ],
        k: 1,
    },
    /* 170 - "function_argumentsOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 455), Trans(0, 76, 1, 454)],
        k: 1,
    },
    /* 171 - "function_argumentsOptGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 31, 2, 458), Trans(0, 76, 1, 457)],
        k: 1,
    },
    /* 172 - "function_arguments_non_first" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 10, -1),
            Trans(0, 22, 1, -1),
            Trans(0, 28, 1, -1),
            Trans(0, 32, 8, -1),
            Trans(0, 33, 4, -1),
            Trans(0, 37, 10, -1),
            Trans(0, 42, 5, -1),
            Trans(0, 52, 10, -1),
            Trans(0, 59, 1, -1),
            Trans(0, 64, 3, -1),
            Trans(0, 65, 3, -1),
            Trans(0, 66, 1, -1),
            Trans(0, 67, 1, -1),
            Trans(0, 68, 1, -1),
            Trans(0, 69, 1, -1),
            Trans(0, 70, 1, -1),
            Trans(0, 73, 6, -1),
            Trans(0, 78, 9, -1),
            Trans(0, 80, 4, -1),
            Trans(0, 89, 7, -1),
            Trans(0, 90, 7, -1),
            Trans(0, 91, 7, -1),
            Trans(0, 92, 7, -1),
            Trans(0, 97, 4, -1),
            Trans(1, 6, 2, 460),
            Trans(1, 44, 2, 460),
            Trans(1, 74, 2, 460),
            Trans(1, 75, 2, 460),
            Trans(1, 76, 2, 460),
            Trans(1, 77, 2, 460),
            Trans(1, 79, 2, 460),
            Trans(1, 83, 2, 460),
            Trans(1, 84, 2, 460),
            Trans(1, 85, 2, 460),
            Trans(1, 86, 2, 460),
            Trans(1, 87, 2, 460),
            Trans(1, 88, 2, 460),
            Trans(1, 89, 2, 460),
            Trans(1, 90, 2, 460),
            Trans(1, 91, 2, 460),
            Trans(1, 92, 2, 460),
            Trans(1, 93, 2, 460),
            Trans(1, 94, 2, 460),
            Trans(1, 95, 2, 460),
            Trans(1, 96, 2, 460),
            Trans(3, 6, 2, 460),
            Trans(3, 44, 2, 460),
            Trans(3, 72, 11, 461),
            Trans(3, 73, 2, 460),
            Trans(3, 74, 2, 460),
            Trans(3, 75, 2, 460),
            Trans(3, 76, 2, 460),
            Trans(3, 77, 2, 460),
            Trans(3, 78, 2, 460),
            Trans(3, 79, 2, 460),
            Trans(3, 83, 2, 460),
            Trans(3, 84, 2, 460),
            Trans(3, 85, 2, 460),
            Trans(3, 86, 2, 460),
            Trans(3, 87, 2, 460),
            Trans(3, 88, 2, 460),
            Trans(3, 89, 2, 460),
            Trans(3, 90, 2, 460),
            Trans(3, 91, 2, 460),
            Trans(3, 92, 2, 460),
            Trans(3, 93, 2, 460),
            Trans(3, 94, 2, 460),
            Trans(3, 95, 2, 460),
            Trans(3, 96, 2, 460),
            Trans(3, 97, 2, 460),
            Trans(4, 15, 2, 460),
            Trans(4, 22, 2, 460),
            Trans(4, 28, 2, 460),
            Trans(4, 33, 2, 460),
            Trans(4, 37, 2, 460),
            Trans(4, 42, 2, 460),
            Trans(4, 52, 2, 460),
            Trans(4, 59, 2, 460),
            Trans(4, 64, 2, 460),
            Trans(4, 65, 2, 460),
            Trans(4, 66, 2, 460),
            Trans(4, 67, 2, 460),
            Trans(4, 68, 2, 460),
            Trans(4, 69, 2, 460),
            Trans(4, 70, 2, 460),
            Trans(4, 73, 2, 460),
            Trans(4, 78, 2, 460),
            Trans(4, 80, 2, 460),
            Trans(4, 89, 2, 460),
            Trans(4, 90, 2, 460),
            Trans(4, 91, 2, 460),
            Trans(4, 92, 2, 460),
            Trans(4, 97, 2, 460),
            Trans(5, 15, 2, 460),
            Trans(5, 22, 2, 460),
            Trans(5, 28, 2, 460),
            Trans(5, 37, 2, 460),
            Trans(5, 52, 2, 460),
            Trans(5, 59, 2, 460),
            Trans(5, 64, 2, 460),
            Trans(5, 65, 2, 460),
            Trans(5, 66, 2, 460),
            Trans(5, 67, 2, 460),
            Trans(5, 68, 2, 460),
            Trans(5, 69, 2, 460),
            Trans(5, 70, 2, 460),
            Trans(5, 73, 2, 460),
            Trans(5, 78, 2, 460),
            Trans(5, 80, 2, 460),
            Trans(5, 89, 2, 460),
            Trans(5, 90, 2, 460),
            Trans(5, 91, 2, 460),
            Trans(5, 92, 2, 460),
            Trans(5, 97, 2, 460),
            Trans(6, 15, 2, 460),
            Trans(6, 22, 2, 460),
            Trans(6, 28, 2, 460),
            Trans(6, 33, 2, 460),
            Trans(6, 37, 2, 460),
            Trans(6, 42, 2, 460),
            Trans(6, 52, 2, 460),
            Trans(6, 59, 2, 460),
            Trans(6, 64, 2, 460),
            Trans(6, 65, 2, 460),
            Trans(6, 66, 2, 460),
            Trans(6, 67, 2, 460),
            Trans(6, 68, 2, 460),
            Trans(6, 69, 2, 460),
            Trans(6, 70, 2, 460),
            Trans(6, 73, 2, 460),
            Trans(6, 74, 2, 460),
            Trans(6, 76, 2, 460),
            Trans(6, 78, 2, 460),
            Trans(6, 80, 2, 460),
            Trans(6, 89, 2, 460),
            Trans(6, 90, 2, 460),
            Trans(6, 91, 2, 460),
            Trans(6, 92, 2, 460),
            Trans(6, 97, 2, 460),
            Trans(7, 15, 2, 460),
            Trans(7, 22, 2, 460),
            Trans(7, 28, 2, 460),
            Trans(7, 37, 2, 460),
            Trans(7, 52, 2, 460),
            Trans(7, 59, 2, 460),
            Trans(7, 64, 2, 460),
            Trans(7, 65, 2, 460),
            Trans(7, 66, 2, 460),
            Trans(7, 67, 2, 460),
            Trans(7, 68, 2, 460),
            Trans(7, 69, 2, 460),
            Trans(7, 70, 2, 460),
            Trans(7, 73, 2, 460),
            Trans(7, 78, 2, 460),
            Trans(7, 80, 2, 460),
            Trans(7, 97, 2, 460),
            Trans(8, 64, 2, 460),
            Trans(8, 65, 2, 460),
            Trans(8, 78, 2, 460),
            Trans(9, 64, 2, 460),
            Trans(9, 65, 2, 460),
            Trans(10, 73, 2, 460),
        ],
        k: 2,
    },
    /* 173 - "function_arguments_non_firstOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 463), Trans(0, 76, 1, 462)],
        k: 1,
    },
    /* 174 - "function_call_args" */
    LookaheadDFA {
        prod0: 448,
        transitions: &[],
        k: 0,
    },
    /* 175 - "function_call_argsOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 1, 449),
            Trans(0, 22, 1, 449),
            Trans(0, 28, 1, 449),
            Trans(0, 32, 1, 449),
            Trans(0, 33, 1, 449),
            Trans(0, 37, 1, 449),
            Trans(0, 42, 1, 449),
            Trans(0, 52, 1, 449),
            Trans(0, 59, 1, 449),
            Trans(0, 64, 1, 449),
            Trans(0, 65, 1, 449),
            Trans(0, 66, 1, 449),
            Trans(0, 67, 1, 449),
            Trans(0, 68, 1, 449),
            Trans(0, 69, 1, 449),
            Trans(0, 70, 1, 449),
            Trans(0, 73, 1, 449),
            Trans(0, 74, 2, 450),
            Trans(0, 78, 1, 449),
            Trans(0, 80, 1, 449),
            Trans(0, 89, 1, 449),
            Trans(0, 90, 1, 449),
            Trans(0, 91, 1, 449),
            Trans(0, 92, 1, 449),
            Trans(0, 97, 1, 449),
        ],
        k: 1,
    },
    /* 176 - "function_call_output_statement" */
    LookaheadDFA {
        prod0: 311,
        transitions: &[],
        k: 0,
    },
    /* 177 - "function_partial_application" */
    LookaheadDFA {
        prod0: 478,
        transitions: &[],
        k: 0,
    },
    /* 178 - "function_partial_applicationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 1, 479),
            Trans(0, 65, 1, 479),
            Trans(0, 74, 2, 480),
        ],
        k: 1,
    },
    /* 179 - "global_function_call" */
    LookaheadDFA {
        prod0: 426,
        transitions: &[],
        k: 0,
    },
    /* 180 - "global_function_callGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 1, 427),
            Trans(0, 37, 2, 428),
            Trans(0, 52, 3, 429),
        ],
        k: 1,
    },
    /* 181 - "ident" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 64, 1, 59), Trans(0, 65, 2, 60)],
        k: 1,
    },
    /* 182 - "if" */
    LookaheadDFA {
        prod0: 28,
        transitions: &[],
        k: 0,
    },
    /* 183 - "if_equation" */
    LookaheadDFA {
        prod0: 316,
        transitions: &[],
        k: 0,
    },
    /* 184 - "if_equationList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 18, 2, 318),
            Trans(0, 19, 1, 317),
            Trans(0, 22, 2, 318),
        ],
        k: 1,
    },
    /* 185 - "if_equationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 18, 1, 319), Trans(0, 22, 2, 322)],
        k: 1,
    },
    /* 186 - "if_equationOptList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 11, 10, -1),
            Trans(0, 15, 10, -1),
            Trans(0, 22, 1, -1),
            Trans(0, 28, 3, -1),
            Trans(0, 31, 9, -1),
            Trans(0, 33, 5, -1),
            Trans(0, 37, 10, -1),
            Trans(0, 42, 6, -1),
            Trans(0, 52, 10, -1),
            Trans(0, 59, 3, -1),
            Trans(0, 61, 5, -1),
            Trans(0, 64, 4, -1),
            Trans(0, 65, 4, -1),
            Trans(0, 66, 3, -1),
            Trans(0, 67, 3, -1),
            Trans(0, 68, 3, -1),
            Trans(0, 69, 3, -1),
            Trans(0, 70, 3, -1),
            Trans(0, 73, 7, -1),
            Trans(0, 78, 9, -1),
            Trans(0, 80, 5, -1),
            Trans(0, 89, 8, -1),
            Trans(0, 90, 8, -1),
            Trans(0, 91, 8, -1),
            Trans(0, 92, 8, -1),
            Trans(0, 97, 5, -1),
            Trans(1, 6, 2, 320),
            Trans(1, 7, 2, 320),
            Trans(1, 33, 11, 321),
            Trans(1, 44, 2, 320),
            Trans(1, 66, 2, 320),
            Trans(1, 71, 2, 320),
            Trans(1, 72, 2, 320),
            Trans(1, 75, 2, 320),
            Trans(1, 77, 2, 320),
            Trans(1, 79, 2, 320),
            Trans(1, 83, 2, 320),
            Trans(1, 84, 2, 320),
            Trans(1, 85, 2, 320),
            Trans(1, 86, 2, 320),
            Trans(1, 87, 2, 320),
            Trans(1, 88, 2, 320),
            Trans(1, 89, 2, 320),
            Trans(1, 90, 2, 320),
            Trans(1, 91, 2, 320),
            Trans(1, 92, 2, 320),
            Trans(1, 93, 2, 320),
            Trans(1, 94, 2, 320),
            Trans(1, 95, 2, 320),
            Trans(1, 96, 2, 320),
            Trans(3, 6, 2, 320),
            Trans(3, 7, 2, 320),
            Trans(3, 44, 2, 320),
            Trans(3, 66, 2, 320),
            Trans(3, 71, 2, 320),
            Trans(3, 72, 2, 320),
            Trans(3, 75, 2, 320),
            Trans(3, 77, 2, 320),
            Trans(3, 79, 2, 320),
            Trans(3, 83, 2, 320),
            Trans(3, 84, 2, 320),
            Trans(3, 85, 2, 320),
            Trans(3, 86, 2, 320),
            Trans(3, 87, 2, 320),
            Trans(3, 88, 2, 320),
            Trans(3, 89, 2, 320),
            Trans(3, 90, 2, 320),
            Trans(3, 91, 2, 320),
            Trans(3, 92, 2, 320),
            Trans(3, 93, 2, 320),
            Trans(3, 94, 2, 320),
            Trans(3, 95, 2, 320),
            Trans(3, 96, 2, 320),
            Trans(4, 6, 2, 320),
            Trans(4, 7, 2, 320),
            Trans(4, 44, 2, 320),
            Trans(4, 66, 2, 320),
            Trans(4, 71, 2, 320),
            Trans(4, 72, 2, 320),
            Trans(4, 73, 2, 320),
            Trans(4, 75, 2, 320),
            Trans(4, 77, 2, 320),
            Trans(4, 78, 2, 320),
            Trans(4, 79, 2, 320),
            Trans(4, 83, 2, 320),
            Trans(4, 84, 2, 320),
            Trans(4, 85, 2, 320),
            Trans(4, 86, 2, 320),
            Trans(4, 87, 2, 320),
            Trans(4, 88, 2, 320),
            Trans(4, 89, 2, 320),
            Trans(4, 90, 2, 320),
            Trans(4, 91, 2, 320),
            Trans(4, 92, 2, 320),
            Trans(4, 93, 2, 320),
            Trans(4, 94, 2, 320),
            Trans(4, 95, 2, 320),
            Trans(4, 96, 2, 320),
            Trans(4, 97, 2, 320),
            Trans(5, 15, 2, 320),
            Trans(5, 22, 2, 320),
            Trans(5, 28, 2, 320),
            Trans(5, 33, 2, 320),
            Trans(5, 37, 2, 320),
            Trans(5, 42, 2, 320),
            Trans(5, 52, 2, 320),
            Trans(5, 59, 2, 320),
            Trans(5, 64, 2, 320),
            Trans(5, 65, 2, 320),
            Trans(5, 66, 2, 320),
            Trans(5, 67, 2, 320),
            Trans(5, 68, 2, 320),
            Trans(5, 69, 2, 320),
            Trans(5, 70, 2, 320),
            Trans(5, 73, 2, 320),
            Trans(5, 78, 2, 320),
            Trans(5, 80, 2, 320),
            Trans(5, 89, 2, 320),
            Trans(5, 90, 2, 320),
            Trans(5, 91, 2, 320),
            Trans(5, 92, 2, 320),
            Trans(5, 97, 2, 320),
            Trans(6, 15, 2, 320),
            Trans(6, 22, 2, 320),
            Trans(6, 28, 2, 320),
            Trans(6, 37, 2, 320),
            Trans(6, 52, 2, 320),
            Trans(6, 59, 2, 320),
            Trans(6, 64, 2, 320),
            Trans(6, 65, 2, 320),
            Trans(6, 66, 2, 320),
            Trans(6, 67, 2, 320),
            Trans(6, 68, 2, 320),
            Trans(6, 69, 2, 320),
            Trans(6, 70, 2, 320),
            Trans(6, 73, 2, 320),
            Trans(6, 78, 2, 320),
            Trans(6, 80, 2, 320),
            Trans(6, 89, 2, 320),
            Trans(6, 90, 2, 320),
            Trans(6, 91, 2, 320),
            Trans(6, 92, 2, 320),
            Trans(6, 97, 2, 320),
            Trans(7, 15, 2, 320),
            Trans(7, 22, 2, 320),
            Trans(7, 28, 2, 320),
            Trans(7, 33, 2, 320),
            Trans(7, 37, 2, 320),
            Trans(7, 42, 2, 320),
            Trans(7, 52, 2, 320),
            Trans(7, 59, 2, 320),
            Trans(7, 64, 2, 320),
            Trans(7, 65, 2, 320),
            Trans(7, 66, 2, 320),
            Trans(7, 67, 2, 320),
            Trans(7, 68, 2, 320),
            Trans(7, 69, 2, 320),
            Trans(7, 70, 2, 320),
            Trans(7, 73, 2, 320),
            Trans(7, 74, 2, 320),
            Trans(7, 76, 2, 320),
            Trans(7, 78, 2, 320),
            Trans(7, 80, 2, 320),
            Trans(7, 89, 2, 320),
            Trans(7, 90, 2, 320),
            Trans(7, 91, 2, 320),
            Trans(7, 92, 2, 320),
            Trans(7, 97, 2, 320),
            Trans(8, 15, 2, 320),
            Trans(8, 22, 2, 320),
            Trans(8, 28, 2, 320),
            Trans(8, 37, 2, 320),
            Trans(8, 52, 2, 320),
            Trans(8, 59, 2, 320),
            Trans(8, 64, 2, 320),
            Trans(8, 65, 2, 320),
            Trans(8, 66, 2, 320),
            Trans(8, 67, 2, 320),
            Trans(8, 68, 2, 320),
            Trans(8, 69, 2, 320),
            Trans(8, 70, 2, 320),
            Trans(8, 73, 2, 320),
            Trans(8, 78, 2, 320),
            Trans(8, 80, 2, 320),
            Trans(8, 97, 2, 320),
            Trans(9, 64, 2, 320),
            Trans(9, 65, 2, 320),
            Trans(10, 73, 2, 320),
        ],
        k: 2,
    },
    /* 187 - "if_expression" */
    LookaheadDFA {
        prod0: 357,
        transitions: &[],
        k: 0,
    },
    /* 188 - "if_expressionList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 18, 2, 359), Trans(0, 19, 1, 358)],
        k: 1,
    },
    /* 189 - "if_statement" */
    LookaheadDFA {
        prod0: 326,
        transitions: &[],
        k: 0,
    },
    /* 190 - "if_statementList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 18, 2, 328),
            Trans(0, 19, 1, 327),
            Trans(0, 22, 2, 328),
        ],
        k: 1,
    },
    /* 191 - "if_statementOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 18, 1, 329), Trans(0, 22, 2, 332)],
        k: 1,
    },
    /* 192 - "if_statementOptList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 1, 330),
            Trans(0, 22, 2, 331),
            Trans(0, 31, 1, 330),
            Trans(0, 33, 1, 330),
            Trans(0, 56, 1, 330),
            Trans(0, 61, 1, 330),
            Trans(0, 62, 1, 330),
            Trans(0, 64, 1, 330),
            Trans(0, 65, 1, 330),
            Trans(0, 73, 1, 330),
            Trans(0, 78, 1, 330),
        ],
        k: 1,
    },
    /* 193 - "import" */
    LookaheadDFA {
        prod0: 29,
        transitions: &[],
        k: 0,
    },
    /* 194 - "import_clause" */
    LookaheadDFA {
        prod0: 179,
        transitions: &[],
        k: 0,
    },
    /* 195 - "import_clauseGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 1, -1),
            Trans(0, 65, 1, -1),
            Trans(1, 7, 3, 181),
            Trans(1, 66, 3, 181),
            Trans(1, 71, 3, 181),
            Trans(1, 72, 2, 180),
            Trans(1, 77, 3, 181),
            Trans(1, 78, 3, 181),
        ],
        k: 2,
    },
    /* 196 - "import_clauseOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 187),
            Trans(0, 66, 2, 187),
            Trans(0, 71, 2, 187),
            Trans(0, 77, 1, 182),
            Trans(0, 78, 1, 182),
        ],
        k: 1,
    },
    /* 197 - "import_clauseOptGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 77, 1, 183), Trans(0, 78, 2, 184)],
        k: 1,
    },
    /* 198 - "import_clauseOptGroupGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 79, 1, 185), Trans(0, 80, 2, 186)],
        k: 1,
    },
    /* 199 - "import_list" */
    LookaheadDFA {
        prod0: 188,
        transitions: &[],
        k: 0,
    },
    /* 200 - "import_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 76, 1, 189), Trans(0, 81, 2, 190)],
        k: 1,
    },
    /* 201 - "impure" */
    LookaheadDFA {
        prod0: 30,
        transitions: &[],
        k: 0,
    },
    /* 202 - "in" */
    LookaheadDFA {
        prod0: 31,
        transitions: &[],
        k: 0,
    },
    /* 203 - "inheritance_modification" */
    LookaheadDFA {
        prod0: 209,
        transitions: &[],
        k: 0,
    },
    /* 204 - "inheritance_modificationGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 11, 1, 210),
            Trans(0, 64, 2, 211),
            Trans(0, 65, 2, 211),
        ],
        k: 1,
    },
    /* 205 - "initial" */
    LookaheadDFA {
        prod0: 32,
        transitions: &[],
        k: 0,
    },
    /* 206 - "inner" */
    LookaheadDFA {
        prod0: 33,
        transitions: &[],
        k: 0,
    },
    /* 207 - "input" */
    LookaheadDFA {
        prod0: 34,
        transitions: &[],
        k: 0,
    },
    /* 208 - "language_specification" */
    LookaheadDFA {
        prod0: 150,
        transitions: &[],
        k: 0,
    },
    /* 209 - "logical_expression" */
    LookaheadDFA {
        prod0: 365,
        transitions: &[],
        k: 0,
    },
    /* 210 - "logical_expressionList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 367),
            Trans(0, 14, 2, 367),
            Trans(0, 18, 2, 367),
            Trans(0, 19, 2, 367),
            Trans(0, 31, 2, 367),
            Trans(0, 33, 2, 367),
            Trans(0, 40, 2, 367),
            Trans(0, 44, 1, 366),
            Trans(0, 58, 2, 367),
            Trans(0, 66, 2, 367),
            Trans(0, 71, 2, 367),
            Trans(0, 72, 2, 367),
            Trans(0, 74, 2, 367),
            Trans(0, 75, 2, 367),
            Trans(0, 76, 2, 367),
            Trans(0, 81, 2, 367),
            Trans(0, 98, 2, 367),
        ],
        k: 1,
    },
    /* 211 - "logical_factor" */
    LookaheadDFA {
        prod0: 371,
        transitions: &[],
        k: 0,
    },
    /* 212 - "logical_factorOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 2, 373),
            Trans(0, 22, 2, 373),
            Trans(0, 28, 2, 373),
            Trans(0, 37, 2, 373),
            Trans(0, 42, 1, 372),
            Trans(0, 52, 2, 373),
            Trans(0, 59, 2, 373),
            Trans(0, 64, 2, 373),
            Trans(0, 65, 2, 373),
            Trans(0, 66, 2, 373),
            Trans(0, 67, 2, 373),
            Trans(0, 68, 2, 373),
            Trans(0, 69, 2, 373),
            Trans(0, 70, 2, 373),
            Trans(0, 73, 2, 373),
            Trans(0, 78, 2, 373),
            Trans(0, 80, 2, 373),
            Trans(0, 89, 2, 373),
            Trans(0, 90, 2, 373),
            Trans(0, 91, 2, 373),
            Trans(0, 92, 2, 373),
            Trans(0, 97, 2, 373),
        ],
        k: 1,
    },
    /* 213 - "logical_term" */
    LookaheadDFA {
        prod0: 368,
        transitions: &[],
        k: 0,
    },
    /* 214 - "logical_termList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 1, 369),
            Trans(0, 7, 2, 370),
            Trans(0, 14, 2, 370),
            Trans(0, 18, 2, 370),
            Trans(0, 19, 2, 370),
            Trans(0, 31, 2, 370),
            Trans(0, 33, 2, 370),
            Trans(0, 40, 2, 370),
            Trans(0, 44, 2, 370),
            Trans(0, 58, 2, 370),
            Trans(0, 66, 2, 370),
            Trans(0, 71, 2, 370),
            Trans(0, 72, 2, 370),
            Trans(0, 74, 2, 370),
            Trans(0, 75, 2, 370),
            Trans(0, 76, 2, 370),
            Trans(0, 81, 2, 370),
            Trans(0, 98, 2, 370),
        ],
        k: 1,
    },
    /* 215 - "long_class_specifier" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 26, 2, 104),
            Trans(0, 64, 1, 103),
            Trans(0, 65, 1, 103),
        ],
        k: 1,
    },
    /* 216 - "loop" */
    LookaheadDFA {
        prod0: 35,
        transitions: &[],
        k: 0,
    },
    /* 217 - "model" */
    LookaheadDFA {
        prod0: 36,
        transitions: &[],
        k: 0,
    },
    /* 218 - "modification" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 72, 2, 242), Trans(0, 73, 1, 241)],
        k: 1,
    },
    /* 219 - "modificationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 244),
            Trans(0, 14, 2, 244),
            Trans(0, 33, 2, 244),
            Trans(0, 66, 2, 244),
            Trans(0, 71, 2, 244),
            Trans(0, 72, 1, 243),
            Trans(0, 74, 2, 244),
            Trans(0, 76, 2, 244),
        ],
        k: 1,
    },
    /* 220 - "modification_expression" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 2, 246),
            Trans(0, 15, 1, 245),
            Trans(0, 22, 1, 245),
            Trans(0, 28, 1, 245),
            Trans(0, 33, 1, 245),
            Trans(0, 37, 1, 245),
            Trans(0, 42, 1, 245),
            Trans(0, 52, 1, 245),
            Trans(0, 59, 1, 245),
            Trans(0, 64, 1, 245),
            Trans(0, 65, 1, 245),
            Trans(0, 66, 1, 245),
            Trans(0, 67, 1, 245),
            Trans(0, 68, 1, 245),
            Trans(0, 69, 1, 245),
            Trans(0, 70, 1, 245),
            Trans(0, 73, 1, 245),
            Trans(0, 78, 1, 245),
            Trans(0, 80, 1, 245),
            Trans(0, 89, 1, 245),
            Trans(0, 90, 1, 245),
            Trans(0, 91, 1, 245),
            Trans(0, 92, 1, 245),
            Trans(0, 97, 1, 245),
        ],
        k: 1,
    },
    /* 221 - "mul_operator" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 77, 3, 397),
            Trans(0, 79, 1, 395),
            Trans(0, 93, 2, 396),
            Trans(0, 94, 4, 398),
        ],
        k: 1,
    },
    /* 222 - "name" */
    LookaheadDFA {
        prod0: 435,
        transitions: &[],
        k: 0,
    },
    /* 223 - "nameList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 3, -1),
            Trans(0, 14, 4, -1),
            Trans(0, 64, 5, -1),
            Trans(0, 65, 5, -1),
            Trans(0, 66, 6, -1),
            Trans(0, 71, 7, -1),
            Trans(0, 72, 8, -1),
            Trans(0, 73, 9, -1),
            Trans(0, 74, 10, -1),
            Trans(0, 76, 11, -1),
            Trans(0, 77, 12, -1),
            Trans(0, 78, 1, -1),
            Trans(0, 97, 13, -1),
            Trans(1, 64, 2, 436),
            Trans(1, 65, 2, 436),
            Trans(1, 79, 14, 437),
            Trans(1, 80, 14, 437),
            Trans(3, 73, 14, 437),
            Trans(4, 64, 14, 437),
            Trans(4, 65, 14, 437),
            Trans(4, 78, 14, 437),
            Trans(5, 7, 14, 437),
            Trans(5, 14, 14, 437),
            Trans(5, 33, 14, 437),
            Trans(5, 66, 14, 437),
            Trans(5, 71, 14, 437),
            Trans(5, 72, 14, 437),
            Trans(5, 73, 14, 437),
            Trans(5, 74, 14, 437),
            Trans(5, 76, 14, 437),
            Trans(5, 97, 14, 437),
            Trans(6, 7, 14, 437),
            Trans(6, 14, 14, 437),
            Trans(6, 71, 14, 437),
            Trans(6, 74, 14, 437),
            Trans(6, 76, 14, 437),
            Trans(6, 89, 14, 437),
            Trans(7, 0, 14, 437),
            Trans(7, 5, 14, 437),
            Trans(7, 7, 14, 437),
            Trans(7, 8, 14, 437),
            Trans(7, 10, 14, 437),
            Trans(7, 12, 14, 437),
            Trans(7, 13, 14, 437),
            Trans(7, 16, 14, 437),
            Trans(7, 21, 14, 437),
            Trans(7, 22, 14, 437),
            Trans(7, 24, 14, 437),
            Trans(7, 25, 14, 437),
            Trans(7, 26, 14, 437),
            Trans(7, 27, 14, 437),
            Trans(7, 29, 14, 437),
            Trans(7, 30, 14, 437),
            Trans(7, 32, 14, 437),
            Trans(7, 34, 14, 437),
            Trans(7, 35, 14, 437),
            Trans(7, 37, 14, 437),
            Trans(7, 38, 14, 437),
            Trans(7, 39, 14, 437),
            Trans(7, 41, 14, 437),
            Trans(7, 43, 14, 437),
            Trans(7, 45, 14, 437),
            Trans(7, 46, 14, 437),
            Trans(7, 47, 14, 437),
            Trans(7, 48, 14, 437),
            Trans(7, 49, 14, 437),
            Trans(7, 50, 14, 437),
            Trans(7, 51, 14, 437),
            Trans(7, 52, 14, 437),
            Trans(7, 53, 14, 437),
            Trans(7, 54, 14, 437),
            Trans(7, 55, 14, 437),
            Trans(7, 57, 14, 437),
            Trans(7, 60, 14, 437),
            Trans(7, 64, 14, 437),
            Trans(7, 65, 14, 437),
            Trans(7, 78, 14, 437),
            Trans(8, 9, 14, 437),
            Trans(8, 15, 14, 437),
            Trans(8, 22, 14, 437),
            Trans(8, 28, 14, 437),
            Trans(8, 33, 14, 437),
            Trans(8, 37, 14, 437),
            Trans(8, 42, 14, 437),
            Trans(8, 52, 14, 437),
            Trans(8, 59, 14, 437),
            Trans(8, 64, 14, 437),
            Trans(8, 65, 14, 437),
            Trans(8, 66, 14, 437),
            Trans(8, 67, 14, 437),
            Trans(8, 68, 14, 437),
            Trans(8, 69, 14, 437),
            Trans(8, 70, 14, 437),
            Trans(8, 73, 14, 437),
            Trans(8, 78, 14, 437),
            Trans(8, 80, 14, 437),
            Trans(8, 89, 14, 437),
            Trans(8, 90, 14, 437),
            Trans(8, 91, 14, 437),
            Trans(8, 92, 14, 437),
            Trans(8, 97, 14, 437),
            Trans(9, 9, 14, 437),
            Trans(9, 17, 14, 437),
            Trans(9, 29, 14, 437),
            Trans(9, 54, 14, 437),
            Trans(9, 55, 14, 437),
            Trans(9, 64, 14, 437),
            Trans(9, 65, 14, 437),
            Trans(9, 74, 14, 437),
            Trans(10, 5, 14, 437),
            Trans(10, 7, 14, 437),
            Trans(10, 8, 14, 437),
            Trans(10, 10, 14, 437),
            Trans(10, 12, 14, 437),
            Trans(10, 13, 14, 437),
            Trans(10, 14, 14, 437),
            Trans(10, 16, 14, 437),
            Trans(10, 21, 14, 437),
            Trans(10, 22, 14, 437),
            Trans(10, 24, 14, 437),
            Trans(10, 25, 14, 437),
            Trans(10, 26, 14, 437),
            Trans(10, 27, 14, 437),
            Trans(10, 29, 14, 437),
            Trans(10, 30, 14, 437),
            Trans(10, 32, 14, 437),
            Trans(10, 33, 14, 437),
            Trans(10, 34, 14, 437),
            Trans(10, 35, 14, 437),
            Trans(10, 37, 14, 437),
            Trans(10, 38, 14, 437),
            Trans(10, 39, 14, 437),
            Trans(10, 41, 14, 437),
            Trans(10, 43, 14, 437),
            Trans(10, 45, 14, 437),
            Trans(10, 46, 14, 437),
            Trans(10, 47, 14, 437),
            Trans(10, 48, 14, 437),
            Trans(10, 49, 14, 437),
            Trans(10, 50, 14, 437),
            Trans(10, 51, 14, 437),
            Trans(10, 52, 14, 437),
            Trans(10, 53, 14, 437),
            Trans(10, 54, 14, 437),
            Trans(10, 55, 14, 437),
            Trans(10, 57, 14, 437),
            Trans(10, 60, 14, 437),
            Trans(10, 64, 14, 437),
            Trans(10, 65, 14, 437),
            Trans(10, 66, 14, 437),
            Trans(10, 71, 14, 437),
            Trans(10, 72, 14, 437),
            Trans(10, 74, 14, 437),
            Trans(10, 76, 14, 437),
            Trans(10, 78, 14, 437),
            Trans(11, 9, 14, 437),
            Trans(11, 17, 14, 437),
            Trans(11, 29, 14, 437),
            Trans(11, 54, 14, 437),
            Trans(11, 55, 14, 437),
            Trans(11, 64, 14, 437),
            Trans(11, 65, 14, 437),
            Trans(12, 7, 14, 437),
            Trans(12, 66, 14, 437),
            Trans(12, 71, 14, 437),
            Trans(13, 15, 14, 437),
            Trans(13, 22, 14, 437),
            Trans(13, 28, 14, 437),
            Trans(13, 33, 14, 437),
            Trans(13, 37, 14, 437),
            Trans(13, 42, 14, 437),
            Trans(13, 52, 14, 437),
            Trans(13, 59, 14, 437),
            Trans(13, 64, 14, 437),
            Trans(13, 65, 14, 437),
            Trans(13, 66, 14, 437),
            Trans(13, 67, 14, 437),
            Trans(13, 68, 14, 437),
            Trans(13, 69, 14, 437),
            Trans(13, 70, 14, 437),
            Trans(13, 73, 14, 437),
            Trans(13, 75, 14, 437),
            Trans(13, 78, 14, 437),
            Trans(13, 80, 14, 437),
            Trans(13, 89, 14, 437),
            Trans(13, 90, 14, 437),
            Trans(13, 91, 14, 437),
            Trans(13, 92, 14, 437),
            Trans(13, 97, 14, 437),
        ],
        k: 2,
    },
    /* 224 - "named_argument" */
    LookaheadDFA {
        prod0: 475,
        transitions: &[],
        k: 0,
    },
    /* 225 - "named_arguments" */
    LookaheadDFA {
        prod0: 472,
        transitions: &[],
        k: 0,
    },
    /* 226 - "named_argumentsOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 474), Trans(0, 76, 1, 473)],
        k: 1,
    },
    /* 227 - "not" */
    LookaheadDFA {
        prod0: 37,
        transitions: &[],
        k: 0,
    },
    /* 228 - "operator" */
    LookaheadDFA {
        prod0: 38,
        transitions: &[],
        k: 0,
    },
    /* 229 - "or" */
    LookaheadDFA {
        prod0: 39,
        transitions: &[],
        k: 0,
    },
    /* 230 - "outer" */
    LookaheadDFA {
        prod0: 40,
        transitions: &[],
        k: 0,
    },
    /* 231 - "output" */
    LookaheadDFA {
        prod0: 41,
        transitions: &[],
        k: 0,
    },
    /* 232 - "output_expression_list" */
    LookaheadDFA {
        prod0: 481,
        transitions: &[],
        k: 0,
    },
    /* 233 - "output_expression_listList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 74, 2, 483), Trans(0, 76, 1, 482)],
        k: 1,
    },
    /* 234 - "output_expression_listOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 1, 486),
            Trans(0, 22, 1, 486),
            Trans(0, 28, 1, 486),
            Trans(0, 33, 1, 486),
            Trans(0, 37, 1, 486),
            Trans(0, 42, 1, 486),
            Trans(0, 52, 1, 486),
            Trans(0, 59, 1, 486),
            Trans(0, 64, 1, 486),
            Trans(0, 65, 1, 486),
            Trans(0, 66, 1, 486),
            Trans(0, 67, 1, 486),
            Trans(0, 68, 1, 486),
            Trans(0, 69, 1, 486),
            Trans(0, 70, 1, 486),
            Trans(0, 73, 1, 486),
            Trans(0, 74, 2, 487),
            Trans(0, 76, 2, 487),
            Trans(0, 78, 1, 486),
            Trans(0, 80, 1, 486),
            Trans(0, 89, 1, 486),
            Trans(0, 90, 1, 486),
            Trans(0, 91, 1, 486),
            Trans(0, 92, 1, 486),
            Trans(0, 97, 1, 486),
        ],
        k: 1,
    },
    /* 235 - "output_expression_listOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 1, 484),
            Trans(0, 22, 1, 484),
            Trans(0, 28, 1, 484),
            Trans(0, 33, 1, 484),
            Trans(0, 37, 1, 484),
            Trans(0, 42, 1, 484),
            Trans(0, 52, 1, 484),
            Trans(0, 59, 1, 484),
            Trans(0, 64, 1, 484),
            Trans(0, 65, 1, 484),
            Trans(0, 66, 1, 484),
            Trans(0, 67, 1, 484),
            Trans(0, 68, 1, 484),
            Trans(0, 69, 1, 484),
            Trans(0, 70, 1, 484),
            Trans(0, 73, 1, 484),
            Trans(0, 74, 2, 485),
            Trans(0, 76, 2, 485),
            Trans(0, 78, 1, 484),
            Trans(0, 80, 1, 484),
            Trans(0, 89, 1, 484),
            Trans(0, 90, 1, 484),
            Trans(0, 91, 1, 484),
            Trans(0, 92, 1, 484),
            Trans(0, 97, 1, 484),
        ],
        k: 1,
    },
    /* 236 - "output_primary" */
    LookaheadDFA {
        prod0: 417,
        transitions: &[],
        k: 0,
    },
    /* 237 - "output_primaryOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 421),
            Trans(0, 7, 2, 421),
            Trans(0, 14, 2, 421),
            Trans(0, 18, 2, 421),
            Trans(0, 19, 2, 421),
            Trans(0, 31, 2, 421),
            Trans(0, 33, 2, 421),
            Trans(0, 40, 2, 421),
            Trans(0, 44, 2, 421),
            Trans(0, 58, 2, 421),
            Trans(0, 66, 2, 421),
            Trans(0, 71, 2, 421),
            Trans(0, 72, 2, 421),
            Trans(0, 74, 2, 421),
            Trans(0, 75, 2, 421),
            Trans(0, 76, 2, 421),
            Trans(0, 77, 2, 421),
            Trans(0, 78, 1, 418),
            Trans(0, 79, 2, 421),
            Trans(0, 81, 2, 421),
            Trans(0, 83, 2, 421),
            Trans(0, 84, 2, 421),
            Trans(0, 85, 2, 421),
            Trans(0, 86, 2, 421),
            Trans(0, 87, 2, 421),
            Trans(0, 88, 2, 421),
            Trans(0, 89, 2, 421),
            Trans(0, 90, 2, 421),
            Trans(0, 91, 2, 421),
            Trans(0, 92, 2, 421),
            Trans(0, 93, 2, 421),
            Trans(0, 94, 2, 421),
            Trans(0, 95, 2, 421),
            Trans(0, 96, 2, 421),
            Trans(0, 97, 1, 418),
            Trans(0, 98, 2, 421),
        ],
        k: 1,
    },
    /* 238 - "output_primaryOptGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 78, 2, 420), Trans(0, 97, 1, 419)],
        k: 1,
    },
    /* 239 - "package" */
    LookaheadDFA {
        prod0: 42,
        transitions: &[],
        k: 0,
    },
    /* 240 - "parameter" */
    LookaheadDFA {
        prod0: 43,
        transitions: &[],
        k: 0,
    },
    /* 241 - "partial" */
    LookaheadDFA {
        prod0: 44,
        transitions: &[],
        k: 0,
    },
    /* 242 - "primary" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 5, 408),
            Trans(0, 22, 10, 413),
            Trans(0, 28, 3, 406),
            Trans(0, 37, 5, 408),
            Trans(0, 52, 5, 408),
            Trans(0, 59, 4, 407),
            Trans(0, 64, 6, 409),
            Trans(0, 65, 6, 409),
            Trans(0, 66, 2, 405),
            Trans(0, 67, 1, 404),
            Trans(0, 68, 1, 404),
            Trans(0, 69, 1, 404),
            Trans(0, 70, 1, 404),
            Trans(0, 73, 7, 410),
            Trans(0, 78, 6, 409),
            Trans(0, 80, 9, 412),
            Trans(0, 97, 8, 411),
        ],
        k: 1,
    },
    /* 243 - "protected" */
    LookaheadDFA {
        prod0: 45,
        transitions: &[],
        k: 0,
    },
    /* 244 - "public" */
    LookaheadDFA {
        prod0: 46,
        transitions: &[],
        k: 0,
    },
    /* 245 - "pure" */
    LookaheadDFA {
        prod0: 47,
        transitions: &[],
        k: 0,
    },
    /* 246 - "range_primary" */
    LookaheadDFA {
        prod0: 422,
        transitions: &[],
        k: 0,
    },
    /* 247 - "range_primaryList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 71, 1, 423), Trans(0, 98, 2, 424)],
        k: 1,
    },
    /* 248 - "record" */
    LookaheadDFA {
        prod0: 48,
        transitions: &[],
        k: 0,
    },
    /* 249 - "redeclare" */
    LookaheadDFA {
        prod0: 49,
        transitions: &[],
        k: 0,
    },
    /* 250 - "relation" */
    LookaheadDFA {
        prod0: 374,
        transitions: &[],
        k: 0,
    },
    /* 251 - "relationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 376),
            Trans(0, 7, 2, 376),
            Trans(0, 14, 2, 376),
            Trans(0, 18, 2, 376),
            Trans(0, 19, 2, 376),
            Trans(0, 31, 2, 376),
            Trans(0, 33, 2, 376),
            Trans(0, 40, 2, 376),
            Trans(0, 44, 2, 376),
            Trans(0, 58, 2, 376),
            Trans(0, 66, 2, 376),
            Trans(0, 71, 2, 376),
            Trans(0, 72, 2, 376),
            Trans(0, 74, 2, 376),
            Trans(0, 75, 2, 376),
            Trans(0, 76, 2, 376),
            Trans(0, 81, 2, 376),
            Trans(0, 83, 1, 375),
            Trans(0, 84, 1, 375),
            Trans(0, 85, 1, 375),
            Trans(0, 86, 1, 375),
            Trans(0, 87, 1, 375),
            Trans(0, 88, 1, 375),
            Trans(0, 98, 2, 376),
        ],
        k: 1,
    },
    /* 252 - "relational_operator" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 83, 1, 377),
            Trans(0, 84, 2, 378),
            Trans(0, 85, 3, 379),
            Trans(0, 86, 4, 380),
            Trans(0, 87, 5, 381),
            Trans(0, 88, 6, 382),
        ],
        k: 1,
    },
    /* 253 - "replaceable" */
    LookaheadDFA {
        prod0: 50,
        transitions: &[],
        k: 0,
    },
    /* 254 - "return" */
    LookaheadDFA {
        prod0: 51,
        transitions: &[],
        k: 0,
    },
    /* 255 - "short_class_definition" */
    LookaheadDFA {
        prod0: 280,
        transitions: &[],
        k: 0,
    },
    /* 256 - "short_class_specifier" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 1, -1),
            Trans(0, 65, 1, -1),
            Trans(1, 72, 2, -1),
            Trans(2, 23, 4, 110),
            Trans(2, 39, 3, 109),
            Trans(2, 46, 3, 109),
            Trans(2, 64, 3, 109),
            Trans(2, 65, 3, 109),
            Trans(2, 78, 3, 109),
        ],
        k: 3,
    },
    /* 257 - "simple_equation" */
    LookaheadDFA {
        prod0: 296,
        transitions: &[],
        k: 0,
    },
    /* 258 - "simple_equationOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 298),
            Trans(0, 66, 2, 298),
            Trans(0, 71, 2, 298),
            Trans(0, 72, 1, 297),
        ],
        k: 1,
    },
    /* 259 - "simple_expression" */
    LookaheadDFA {
        prod0: 360,
        transitions: &[],
        k: 0,
    },
    /* 260 - "simple_expressionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 364),
            Trans(0, 14, 2, 364),
            Trans(0, 18, 2, 364),
            Trans(0, 19, 2, 364),
            Trans(0, 31, 2, 364),
            Trans(0, 33, 2, 364),
            Trans(0, 40, 2, 364),
            Trans(0, 58, 2, 364),
            Trans(0, 66, 2, 364),
            Trans(0, 71, 2, 364),
            Trans(0, 72, 2, 364),
            Trans(0, 74, 2, 364),
            Trans(0, 75, 1, 361),
            Trans(0, 76, 2, 364),
            Trans(0, 81, 2, 364),
            Trans(0, 98, 2, 364),
        ],
        k: 1,
    },
    /* 261 - "simple_expressionOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 363),
            Trans(0, 14, 2, 363),
            Trans(0, 18, 2, 363),
            Trans(0, 19, 2, 363),
            Trans(0, 31, 2, 363),
            Trans(0, 33, 2, 363),
            Trans(0, 40, 2, 363),
            Trans(0, 58, 2, 363),
            Trans(0, 66, 2, 363),
            Trans(0, 71, 2, 363),
            Trans(0, 72, 2, 363),
            Trans(0, 74, 2, 363),
            Trans(0, 75, 1, 362),
            Trans(0, 76, 2, 363),
            Trans(0, 81, 2, 363),
            Trans(0, 98, 2, 363),
        ],
        k: 1,
    },
    /* 262 - "some_equation" */
    LookaheadDFA {
        prod0: 299,
        transitions: &[],
        k: 0,
    },
    /* 263 - "some_equation_option" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 11, 4, 294),
            Trans(0, 15, 1, 291),
            Trans(0, 22, 1, 291),
            Trans(0, 28, 1, 291),
            Trans(0, 31, 3, 293),
            Trans(0, 33, 2, 292),
            Trans(0, 37, 1, 291),
            Trans(0, 42, 1, 291),
            Trans(0, 52, 1, 291),
            Trans(0, 59, 1, 291),
            Trans(0, 61, 5, 295),
            Trans(0, 64, 1, 291),
            Trans(0, 65, 1, 291),
            Trans(0, 66, 1, 291),
            Trans(0, 67, 1, 291),
            Trans(0, 68, 1, 291),
            Trans(0, 69, 1, 291),
            Trans(0, 70, 1, 291),
            Trans(0, 73, 1, 291),
            Trans(0, 78, 1, 291),
            Trans(0, 80, 1, 291),
            Trans(0, 89, 1, 291),
            Trans(0, 90, 1, 291),
            Trans(0, 91, 1, 291),
            Trans(0, 92, 1, 291),
            Trans(0, 97, 1, 291),
        ],
        k: 1,
    },
    /* 264 - "standard_class_specifier" */
    LookaheadDFA {
        prod0: 105,
        transitions: &[],
        k: 0,
    },
    /* 265 - "statement" */
    LookaheadDFA {
        prod0: 312,
        transitions: &[],
        k: 0,
    },
    /* 266 - "statement_block" */
    LookaheadDFA {
        prod0: 323,
        transitions: &[],
        k: 0,
    },
    /* 267 - "statement_blockList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 1, 324),
            Trans(0, 18, 2, 325),
            Trans(0, 19, 2, 325),
            Trans(0, 20, 2, 325),
            Trans(0, 22, 2, 325),
            Trans(0, 31, 1, 324),
            Trans(0, 33, 1, 324),
            Trans(0, 56, 1, 324),
            Trans(0, 61, 1, 324),
            Trans(0, 62, 1, 324),
            Trans(0, 64, 1, 324),
            Trans(0, 65, 1, 324),
            Trans(0, 73, 1, 324),
            Trans(0, 78, 1, 324),
        ],
        k: 1,
    },
    /* 268 - "statement_option" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 3, 302),
            Trans(0, 31, 6, 305),
            Trans(0, 33, 5, 304),
            Trans(0, 56, 4, 303),
            Trans(0, 61, 8, 307),
            Trans(0, 62, 7, 306),
            Trans(0, 64, 1, 300),
            Trans(0, 65, 1, 300),
            Trans(0, 73, 2, 301),
            Trans(0, 78, 1, 300),
        ],
        k: 1,
    },
    /* 269 - "stored_definition" */
    LookaheadDFA {
        prod0: 66,
        transitions: &[],
        k: 0,
    },
    /* 270 - "stored_definitionList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 0, 2, 68),
            Trans(0, 8, 1, 67),
            Trans(0, 10, 1, 67),
            Trans(0, 12, 1, 67),
            Trans(0, 21, 1, 67),
            Trans(0, 25, 1, 67),
            Trans(0, 29, 1, 67),
            Trans(0, 32, 1, 67),
            Trans(0, 35, 1, 67),
            Trans(0, 41, 1, 67),
            Trans(0, 43, 1, 67),
            Trans(0, 47, 1, 67),
            Trans(0, 49, 1, 67),
            Trans(0, 52, 1, 67),
            Trans(0, 53, 1, 67),
            Trans(0, 60, 1, 67),
        ],
        k: 1,
    },
    /* 271 - "stored_definitionOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 0, 2, 74),
            Trans(0, 8, 2, 74),
            Trans(0, 10, 2, 74),
            Trans(0, 12, 2, 74),
            Trans(0, 21, 2, 74),
            Trans(0, 25, 2, 74),
            Trans(0, 29, 2, 74),
            Trans(0, 32, 2, 74),
            Trans(0, 35, 2, 74),
            Trans(0, 41, 2, 74),
            Trans(0, 43, 2, 74),
            Trans(0, 47, 2, 74),
            Trans(0, 49, 2, 74),
            Trans(0, 52, 2, 74),
            Trans(0, 53, 2, 74),
            Trans(0, 60, 2, 74),
            Trans(0, 63, 1, 71),
        ],
        k: 1,
    },
    /* 272 - "stored_definitionOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 8, 2, 70),
            Trans(0, 10, 2, 70),
            Trans(0, 12, 2, 70),
            Trans(0, 21, 2, 70),
            Trans(0, 25, 2, 70),
            Trans(0, 29, 1, 69),
            Trans(0, 32, 2, 70),
            Trans(0, 35, 2, 70),
            Trans(0, 41, 2, 70),
            Trans(0, 43, 2, 70),
            Trans(0, 47, 2, 70),
            Trans(0, 49, 2, 70),
            Trans(0, 52, 2, 70),
            Trans(0, 53, 2, 70),
            Trans(0, 60, 2, 70),
        ],
        k: 1,
    },
    /* 273 - "stored_definitionOpt1" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 1, 72),
            Trans(0, 65, 1, 72),
            Trans(0, 71, 2, 73),
        ],
        k: 1,
    },
    /* 274 - "stream" */
    LookaheadDFA {
        prod0: 52,
        transitions: &[],
        k: 0,
    },
    /* 275 - "string" */
    LookaheadDFA {
        prod0: 61,
        transitions: &[],
        k: 0,
    },
    /* 276 - "subscript" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 15, 2, 495),
            Trans(0, 22, 2, 495),
            Trans(0, 28, 2, 495),
            Trans(0, 33, 2, 495),
            Trans(0, 37, 2, 495),
            Trans(0, 42, 2, 495),
            Trans(0, 52, 2, 495),
            Trans(0, 59, 2, 495),
            Trans(0, 64, 2, 495),
            Trans(0, 65, 2, 495),
            Trans(0, 66, 2, 495),
            Trans(0, 67, 2, 495),
            Trans(0, 68, 2, 495),
            Trans(0, 69, 2, 495),
            Trans(0, 70, 2, 495),
            Trans(0, 73, 2, 495),
            Trans(0, 75, 1, 494),
            Trans(0, 78, 2, 495),
            Trans(0, 80, 2, 495),
            Trans(0, 89, 2, 495),
            Trans(0, 90, 2, 495),
            Trans(0, 91, 2, 495),
            Trans(0, 92, 2, 495),
            Trans(0, 97, 2, 495),
        ],
        k: 1,
    },
    /* 277 - "term" */
    LookaheadDFA {
        prod0: 392,
        transitions: &[],
        k: 0,
    },
    /* 278 - "termList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 6, 2, 394),
            Trans(0, 7, 2, 394),
            Trans(0, 14, 2, 394),
            Trans(0, 18, 2, 394),
            Trans(0, 19, 2, 394),
            Trans(0, 31, 2, 394),
            Trans(0, 33, 2, 394),
            Trans(0, 40, 2, 394),
            Trans(0, 44, 2, 394),
            Trans(0, 58, 2, 394),
            Trans(0, 66, 2, 394),
            Trans(0, 71, 2, 394),
            Trans(0, 72, 2, 394),
            Trans(0, 74, 2, 394),
            Trans(0, 75, 2, 394),
            Trans(0, 76, 2, 394),
            Trans(0, 77, 1, 393),
            Trans(0, 79, 1, 393),
            Trans(0, 81, 2, 394),
            Trans(0, 83, 2, 394),
            Trans(0, 84, 2, 394),
            Trans(0, 85, 2, 394),
            Trans(0, 86, 2, 394),
            Trans(0, 87, 2, 394),
            Trans(0, 88, 2, 394),
            Trans(0, 89, 2, 394),
            Trans(0, 90, 2, 394),
            Trans(0, 91, 2, 394),
            Trans(0, 92, 2, 394),
            Trans(0, 93, 1, 393),
            Trans(0, 94, 1, 393),
            Trans(0, 98, 2, 394),
        ],
        k: 1,
    },
    /* 279 - "then" */
    LookaheadDFA {
        prod0: 53,
        transitions: &[],
        k: 0,
    },
    /* 280 - "true" */
    LookaheadDFA {
        prod0: 54,
        transitions: &[],
        k: 0,
    },
    /* 281 - "type" */
    LookaheadDFA {
        prod0: 55,
        transitions: &[],
        k: 0,
    },
    /* 282 - "type_class_specifier" */
    LookaheadDFA {
        prod0: 111,
        transitions: &[],
        k: 0,
    },
    /* 283 - "type_class_specifierOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 115),
            Trans(0, 14, 2, 115),
            Trans(0, 66, 2, 115),
            Trans(0, 71, 2, 115),
            Trans(0, 73, 2, 115),
            Trans(0, 74, 2, 115),
            Trans(0, 76, 2, 115),
            Trans(0, 97, 1, 114),
        ],
        k: 1,
    },
    /* 284 - "type_class_specifierOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 7, 2, 113),
            Trans(0, 14, 2, 113),
            Trans(0, 66, 2, 113),
            Trans(0, 71, 2, 113),
            Trans(0, 73, 1, 112),
            Trans(0, 74, 2, 113),
            Trans(0, 76, 2, 113),
        ],
        k: 1,
    },
    /* 285 - "type_prefix" */
    LookaheadDFA {
        prod0: 215,
        transitions: &[],
        k: 0,
    },
    /* 286 - "type_prefixOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 13, 2, 228),
            Trans(0, 16, 2, 228),
            Trans(0, 30, 1, 225),
            Trans(0, 39, 2, 228),
            Trans(0, 46, 2, 228),
            Trans(0, 48, 2, 228),
            Trans(0, 57, 1, 225),
            Trans(0, 64, 2, 228),
            Trans(0, 65, 2, 228),
            Trans(0, 78, 2, 228),
        ],
        k: 1,
    },
    /* 287 - "type_prefixOpt0" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 13, 1, 220),
            Trans(0, 16, 1, 220),
            Trans(0, 39, 2, 224),
            Trans(0, 46, 2, 224),
            Trans(0, 48, 1, 220),
            Trans(0, 64, 2, 224),
            Trans(0, 65, 2, 224),
            Trans(0, 78, 2, 224),
        ],
        k: 1,
    },
    /* 288 - "type_prefixOpt0Group" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 13, 3, 223),
            Trans(0, 16, 1, 221),
            Trans(0, 48, 2, 222),
        ],
        k: 1,
    },
    /* 289 - "type_prefixOpt1" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 39, 1, 216),
            Trans(0, 46, 1, 216),
            Trans(0, 64, 2, 219),
            Trans(0, 65, 2, 219),
            Trans(0, 78, 2, 219),
        ],
        k: 1,
    },
    /* 290 - "type_prefixOpt1Group" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 39, 1, 217), Trans(0, 46, 2, 218)],
        k: 1,
    },
    /* 291 - "type_prefixOptGroup" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 30, 1, 226), Trans(0, 57, 2, 227)],
        k: 1,
    },
    /* 292 - "type_specifier" */
    LookaheadDFA {
        prod0: 432,
        transitions: &[],
        k: 0,
    },
    /* 293 - "type_specifierOpt" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 64, 2, 434),
            Trans(0, 65, 2, 434),
            Trans(0, 78, 1, 433),
        ],
        k: 1,
    },
    /* 294 - "unsigned_integer" */
    LookaheadDFA {
        prod0: 62,
        transitions: &[],
        k: 0,
    },
    /* 295 - "unsigned_number" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 67, 1, 430),
            Trans(0, 68, 2, 431),
            Trans(0, 69, 2, 431),
            Trans(0, 70, 2, 431),
        ],
        k: 1,
    },
    /* 296 - "unsigned_real" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 68, 1, 63),
            Trans(0, 69, 2, 64),
            Trans(0, 70, 3, 65),
        ],
        k: 1,
    },
    /* 297 - "when" */
    LookaheadDFA {
        prod0: 56,
        transitions: &[],
        k: 0,
    },
    /* 298 - "when_equation" */
    LookaheadDFA {
        prod0: 348,
        transitions: &[],
        k: 0,
    },
    /* 299 - "when_equationList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 20, 1, 349), Trans(0, 22, 2, 350)],
        k: 1,
    },
    /* 300 - "when_statement" */
    LookaheadDFA {
        prod0: 351,
        transitions: &[],
        k: 0,
    },
    /* 301 - "when_statementList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[Trans(0, 20, 1, 352), Trans(0, 22, 2, 353)],
        k: 1,
    },
    /* 302 - "while" */
    LookaheadDFA {
        prod0: 57,
        transitions: &[],
        k: 0,
    },
    /* 303 - "while_statement" */
    LookaheadDFA {
        prod0: 345,
        transitions: &[],
        k: 0,
    },
    /* 304 - "while_statementList" */
    LookaheadDFA {
        prod0: -1,
        transitions: &[
            Trans(0, 9, 1, 346),
            Trans(0, 22, 2, 347),
            Trans(0, 31, 1, 346),
            Trans(0, 33, 1, 346),
            Trans(0, 56, 1, 346),
            Trans(0, 61, 1, 346),
            Trans(0, 62, 1, 346),
            Trans(0, 64, 1, 346),
            Trans(0, 65, 1, 346),
            Trans(0, 73, 1, 346),
            Trans(0, 78, 1, 346),
        ],
        k: 1,
    },
    /* 305 - "within" */
    LookaheadDFA {
        prod0: 58,
        transitions: &[],
        k: 0,
    },
];

pub const PRODUCTIONS: &[Production; 505] = &[
    // 0 - algorithm: 'algorithm';
    Production {
        lhs: 1,
        production: &[ParseType::T(5)],
    },
    // 1 - and: 'and';
    Production {
        lhs: 5,
        production: &[ParseType::T(6)],
    },
    // 2 - annotation: 'annotation';
    Production {
        lhs: 6,
        production: &[ParseType::T(7)],
    },
    // 3 - block: 'block';
    Production {
        lhs: 29,
        production: &[ParseType::T(8)],
    },
    // 4 - break: 'break';
    Production {
        lhs: 30,
        production: &[ParseType::T(9)],
    },
    // 5 - class: 'class';
    Production {
        lhs: 31,
        production: &[ParseType::T(10)],
    },
    // 6 - connect: 'connect';
    Production {
        lhs: 74,
        production: &[ParseType::T(11)],
    },
    // 7 - connector: 'connector';
    Production {
        lhs: 76,
        production: &[ParseType::T(12)],
    },
    // 8 - constant: 'constant';
    Production {
        lhs: 77,
        production: &[ParseType::T(13)],
    },
    // 9 - constrainedby: 'constrainedby';
    Production {
        lhs: 78,
        production: &[ParseType::T(14)],
    },
    // 10 - der: 'der';
    Production {
        lhs: 84,
        production: &[ParseType::T(15)],
    },
    // 11 - discrete: 'discrete';
    Production {
        lhs: 92,
        production: &[ParseType::T(16)],
    },
    // 12 - each: 'each';
    Production {
        lhs: 93,
        production: &[ParseType::T(17)],
    },
    // 13 - else: 'else';
    Production {
        lhs: 119,
        production: &[ParseType::T(18)],
    },
    // 14 - elseif: 'elseif';
    Production {
        lhs: 120,
        production: &[ParseType::T(19)],
    },
    // 15 - elsewhen: 'elsewhen';
    Production {
        lhs: 121,
        production: &[ParseType::T(20)],
    },
    // 16 - encapsulated: 'encapsulated';
    Production {
        lhs: 122,
        production: &[ParseType::T(21)],
    },
    // 17 - end: 'end';
    Production {
        lhs: 123,
        production: &[ParseType::T(22)],
    },
    // 18 - enumeration: 'enumeration';
    Production {
        lhs: 129,
        production: &[ParseType::T(23)],
    },
    // 19 - equation: 'equation';
    Production {
        lhs: 131,
        production: &[ParseType::T(24)],
    },
    // 20 - expandable: 'expandable';
    Production {
        lhs: 137,
        production: &[ParseType::T(25)],
    },
    // 21 - extends: 'extends';
    Production {
        lhs: 141,
        production: &[ParseType::T(26)],
    },
    // 22 - external: 'external';
    Production {
        lhs: 147,
        production: &[ParseType::T(27)],
    },
    // 23 - false: 'false';
    Production {
        lhs: 154,
        production: &[ParseType::T(28)],
    },
    // 24 - final: 'final';
    Production {
        lhs: 155,
        production: &[ParseType::T(29)],
    },
    // 25 - flow: 'flow';
    Production {
        lhs: 156,
        production: &[ParseType::T(30)],
    },
    // 26 - for: 'for';
    Production {
        lhs: 157,
        production: &[ParseType::T(31)],
    },
    // 27 - function: 'function';
    Production {
        lhs: 166,
        production: &[ParseType::T(32)],
    },
    // 28 - if: 'if';
    Production {
        lhs: 182,
        production: &[ParseType::T(33)],
    },
    // 29 - import: 'import';
    Production {
        lhs: 193,
        production: &[ParseType::T(34)],
    },
    // 30 - impure: 'impure';
    Production {
        lhs: 201,
        production: &[ParseType::T(35)],
    },
    // 31 - in: 'in';
    Production {
        lhs: 202,
        production: &[ParseType::T(36)],
    },
    // 32 - initial: 'initial';
    Production {
        lhs: 205,
        production: &[ParseType::T(37)],
    },
    // 33 - inner: 'inner';
    Production {
        lhs: 206,
        production: &[ParseType::T(38)],
    },
    // 34 - input: 'input';
    Production {
        lhs: 207,
        production: &[ParseType::T(39)],
    },
    // 35 - loop: 'loop';
    Production {
        lhs: 216,
        production: &[ParseType::T(40)],
    },
    // 36 - model: 'model';
    Production {
        lhs: 217,
        production: &[ParseType::T(41)],
    },
    // 37 - not: 'not';
    Production {
        lhs: 227,
        production: &[ParseType::T(42)],
    },
    // 38 - operator: 'operator';
    Production {
        lhs: 228,
        production: &[ParseType::T(43)],
    },
    // 39 - or: 'or';
    Production {
        lhs: 229,
        production: &[ParseType::T(44)],
    },
    // 40 - outer: 'outer';
    Production {
        lhs: 230,
        production: &[ParseType::T(45)],
    },
    // 41 - output: 'output';
    Production {
        lhs: 231,
        production: &[ParseType::T(46)],
    },
    // 42 - package: 'package';
    Production {
        lhs: 239,
        production: &[ParseType::T(47)],
    },
    // 43 - parameter: 'parameter';
    Production {
        lhs: 240,
        production: &[ParseType::T(48)],
    },
    // 44 - partial: 'partial';
    Production {
        lhs: 241,
        production: &[ParseType::T(49)],
    },
    // 45 - protected: 'protected';
    Production {
        lhs: 243,
        production: &[ParseType::T(50)],
    },
    // 46 - public: 'public';
    Production {
        lhs: 244,
        production: &[ParseType::T(51)],
    },
    // 47 - pure: 'pure';
    Production {
        lhs: 245,
        production: &[ParseType::T(52)],
    },
    // 48 - record: 'record';
    Production {
        lhs: 248,
        production: &[ParseType::T(53)],
    },
    // 49 - redeclare: 'redeclare';
    Production {
        lhs: 249,
        production: &[ParseType::T(54)],
    },
    // 50 - replaceable: 'replaceable';
    Production {
        lhs: 253,
        production: &[ParseType::T(55)],
    },
    // 51 - return: 'return';
    Production {
        lhs: 254,
        production: &[ParseType::T(56)],
    },
    // 52 - stream: 'stream';
    Production {
        lhs: 274,
        production: &[ParseType::T(57)],
    },
    // 53 - then: 'then';
    Production {
        lhs: 279,
        production: &[ParseType::T(58)],
    },
    // 54 - true: 'true';
    Production {
        lhs: 280,
        production: &[ParseType::T(59)],
    },
    // 55 - type: 'type';
    Production {
        lhs: 281,
        production: &[ParseType::T(60)],
    },
    // 56 - when: 'when';
    Production {
        lhs: 297,
        production: &[ParseType::T(61)],
    },
    // 57 - while: 'while';
    Production {
        lhs: 302,
        production: &[ParseType::T(62)],
    },
    // 58 - within: 'within';
    Production {
        lhs: 305,
        production: &[ParseType::T(63)],
    },
    // 59 - ident: /[_a-zA-Z][_a-zA-Z0-9]*/;
    Production {
        lhs: 181,
        production: &[ParseType::T(64)],
    },
    // 60 - ident: /\'[_a-zA-Z0-9!#\$%&\(\)\*\+,-\.\/:;<>=\?@\[\]\^\{\}\|~ \"]*\'/;
    Production {
        lhs: 181,
        production: &[ParseType::T(65)],
    },
    // 61 - string: /"[' \w]*"/;
    Production {
        lhs: 275,
        production: &[ParseType::T(66)],
    },
    // 62 - unsigned_integer: /[0-9]+/;
    Production {
        lhs: 294,
        production: &[ParseType::T(67)],
    },
    // 63 - unsigned_real: /[0-9]+\.[0-9]+/;
    Production {
        lhs: 296,
        production: &[ParseType::T(68)],
    },
    // 64 - unsigned_real: /[0-9]+\.([0-9]+)?([eE][+-]?[0-9]+)?/;
    Production {
        lhs: 296,
        production: &[ParseType::T(69)],
    },
    // 65 - unsigned_real: /\.[0-9]+([eE][+-]?[0-9]+)?/;
    Production {
        lhs: 296,
        production: &[ParseType::T(70)],
    },
    // 66 - stored_definition: stored_definitionOpt /* Option */ stored_definitionList /* Vec */;
    Production {
        lhs: 269,
        production: &[ParseType::N(270), ParseType::N(271)],
    },
    // 67 - stored_definitionList: stored_definitionOpt0 /* Option */ class_definition : crate::ir::ast::ClassDefinition  ';'^ /* Clipped */ stored_definitionList;
    Production {
        lhs: 270,
        production: &[
            ParseType::N(270),
            ParseType::T(71),
            ParseType::N(32),
            ParseType::N(272),
        ],
    },
    // 68 - stored_definitionList: ;
    Production {
        lhs: 270,
        production: &[],
    },
    // 69 - stored_definitionOpt0: final;
    Production {
        lhs: 272,
        production: &[ParseType::N(155)],
    },
    // 70 - stored_definitionOpt0: ;
    Production {
        lhs: 272,
        production: &[],
    },
    // 71 - stored_definitionOpt: within^ /* Clipped */ stored_definitionOpt1 /* Option */ ';'^ /* Clipped */;
    Production {
        lhs: 271,
        production: &[ParseType::T(71), ParseType::N(273), ParseType::N(305)],
    },
    // 72 - stored_definitionOpt1: name : crate::ir::ast::Name ;
    Production {
        lhs: 273,
        production: &[ParseType::N(222)],
    },
    // 73 - stored_definitionOpt1: ;
    Production {
        lhs: 273,
        production: &[],
    },
    // 74 - stored_definitionOpt: ;
    Production {
        lhs: 271,
        production: &[],
    },
    // 75 - class_definition: class_definitionOpt /* Option */ class_prefixes class_specifier;
    Production {
        lhs: 32,
        production: &[ParseType::N(40), ParseType::N(38), ParseType::N(33)],
    },
    // 76 - class_definitionOpt: encapsulated;
    Production {
        lhs: 33,
        production: &[ParseType::N(122)],
    },
    // 77 - class_definitionOpt: ;
    Production {
        lhs: 33,
        production: &[],
    },
    // 78 - class_type: class;
    Production {
        lhs: 41,
        production: &[ParseType::N(31)],
    },
    // 79 - class_type: model;
    Production {
        lhs: 41,
        production: &[ParseType::N(217)],
    },
    // 80 - class_type: class_typeOpt /* Option */ record;
    Production {
        lhs: 41,
        production: &[ParseType::N(248), ParseType::N(42)],
    },
    // 81 - class_type: block;
    Production {
        lhs: 41,
        production: &[ParseType::N(29)],
    },
    // 82 - class_type: class_typeOpt0 /* Option */ connector;
    Production {
        lhs: 41,
        production: &[ParseType::N(76), ParseType::N(43)],
    },
    // 83 - class_type: type;
    Production {
        lhs: 41,
        production: &[ParseType::N(281)],
    },
    // 84 - class_type: package;
    Production {
        lhs: 41,
        production: &[ParseType::N(239)],
    },
    // 85 - class_type: class_typeOpt1 /* Option */ class_typeOpt2 /* Option */ function;
    Production {
        lhs: 41,
        production: &[ParseType::N(166), ParseType::N(46), ParseType::N(44)],
    },
    // 86 - class_type: operator;
    Production {
        lhs: 41,
        production: &[ParseType::N(228)],
    },
    // 87 - class_typeOpt2: operator;
    Production {
        lhs: 46,
        production: &[ParseType::N(228)],
    },
    // 88 - class_typeOpt2: ;
    Production {
        lhs: 46,
        production: &[],
    },
    // 89 - class_typeOpt1: class_typeOpt1Group;
    Production {
        lhs: 44,
        production: &[ParseType::N(45)],
    },
    // 90 - class_typeOpt1Group: pure;
    Production {
        lhs: 45,
        production: &[ParseType::N(245)],
    },
    // 91 - class_typeOpt1Group: impure;
    Production {
        lhs: 45,
        production: &[ParseType::N(201)],
    },
    // 92 - class_typeOpt1: ;
    Production {
        lhs: 44,
        production: &[],
    },
    // 93 - class_typeOpt0: expandable;
    Production {
        lhs: 43,
        production: &[ParseType::N(137)],
    },
    // 94 - class_typeOpt0: ;
    Production {
        lhs: 43,
        production: &[],
    },
    // 95 - class_typeOpt: operator;
    Production {
        lhs: 42,
        production: &[ParseType::N(228)],
    },
    // 96 - class_typeOpt: ;
    Production {
        lhs: 42,
        production: &[],
    },
    // 97 - class_prefixes: class_prefixesOpt /* Option */ class_type;
    Production {
        lhs: 38,
        production: &[ParseType::N(41), ParseType::N(39)],
    },
    // 98 - class_prefixesOpt: partial;
    Production {
        lhs: 39,
        production: &[ParseType::N(241)],
    },
    // 99 - class_prefixesOpt: ;
    Production {
        lhs: 39,
        production: &[],
    },
    // 100 - class_specifier: long_class_specifier;
    Production {
        lhs: 40,
        production: &[ParseType::N(215)],
    },
    // 101 - class_specifier: short_class_specifier;
    Production {
        lhs: 40,
        production: &[ParseType::N(256)],
    },
    // 102 - class_specifier: der_class_specifier;
    Production {
        lhs: 40,
        production: &[ParseType::N(85)],
    },
    // 103 - long_class_specifier: standard_class_specifier;
    Production {
        lhs: 215,
        production: &[ParseType::N(264)],
    },
    // 104 - long_class_specifier: extends_class_specifier;
    Production {
        lhs: 215,
        production: &[ParseType::N(142)],
    },
    // 105 - standard_class_specifier: ident@name : crate::ir::ast::Token  description_string : crate::modelica_grammar::TokenList  composition : crate::modelica_grammar::Composition  end^ /* Clipped */ ident : crate::ir::ast::Token ;
    Production {
        lhs: 264,
        production: &[
            ParseType::N(181),
            ParseType::N(123),
            ParseType::N(65),
            ParseType::N(89),
            ParseType::N(181),
        ],
    },
    // 106 - extends_class_specifier: extends^ /* Clipped */ ident : crate::ir::ast::Token  extends_class_specifierOpt /* Option */ description_string : crate::modelica_grammar::TokenList  composition : crate::modelica_grammar::Composition  end^ /* Clipped */ ident : crate::ir::ast::Token ;
    Production {
        lhs: 142,
        production: &[
            ParseType::N(181),
            ParseType::N(123),
            ParseType::N(65),
            ParseType::N(89),
            ParseType::N(143),
            ParseType::N(181),
            ParseType::N(141),
        ],
    },
    // 107 - extends_class_specifierOpt: class_modification;
    Production {
        lhs: 143,
        production: &[ParseType::N(34)],
    },
    // 108 - extends_class_specifierOpt: ;
    Production {
        lhs: 143,
        production: &[],
    },
    // 109 - short_class_specifier: type_class_specifier;
    Production {
        lhs: 256,
        production: &[ParseType::N(282)],
    },
    // 110 - short_class_specifier: enum_class_specifier;
    Production {
        lhs: 256,
        production: &[ParseType::N(124)],
    },
    // 111 - type_class_specifier: ident : crate::ir::ast::Token  '='^ /* Clipped */ base_prefix type_specifier type_class_specifierOpt /* Option */ type_class_specifierOpt0 /* Option */ description;
    Production {
        lhs: 282,
        production: &[
            ParseType::N(87),
            ParseType::N(284),
            ParseType::N(283),
            ParseType::N(292),
            ParseType::N(26),
            ParseType::T(72),
            ParseType::N(181),
        ],
    },
    // 112 - type_class_specifierOpt0: class_modification;
    Production {
        lhs: 284,
        production: &[ParseType::N(34)],
    },
    // 113 - type_class_specifierOpt0: ;
    Production {
        lhs: 284,
        production: &[],
    },
    // 114 - type_class_specifierOpt: array_subscripts : crate::modelica_grammar::ArraySubscripts ;
    Production {
        lhs: 283,
        production: &[ParseType::N(24)],
    },
    // 115 - type_class_specifierOpt: ;
    Production {
        lhs: 283,
        production: &[],
    },
    // 116 - enum_class_specifier: ident : crate::ir::ast::Token  '='^ /* Clipped */ enumeration '('^ /* Clipped */ enum_class_specifierGroup ')'^ /* Clipped */ description;
    Production {
        lhs: 124,
        production: &[
            ParseType::N(87),
            ParseType::T(74),
            ParseType::N(125),
            ParseType::T(73),
            ParseType::N(129),
            ParseType::T(72),
            ParseType::N(181),
        ],
    },
    // 117 - enum_class_specifierGroup: enum_class_specifierOpt /* Option */;
    Production {
        lhs: 125,
        production: &[ParseType::N(126)],
    },
    // 118 - enum_class_specifierGroup: ':'^ /* Clipped */;
    Production {
        lhs: 125,
        production: &[ParseType::T(75)],
    },
    // 119 - enum_class_specifierOpt: enum_list;
    Production {
        lhs: 126,
        production: &[ParseType::N(127)],
    },
    // 120 - enum_class_specifierOpt: ;
    Production {
        lhs: 126,
        production: &[],
    },
    // 121 - der_class_specifier: ident : crate::ir::ast::Token  '='^ /* Clipped */ der '('^ /* Clipped */ type_specifier ','^ /* Clipped */ ident : crate::ir::ast::Token  der_class_specifierList /* Vec */ ')'^ /* Clipped */ description;
    Production {
        lhs: 85,
        production: &[
            ParseType::N(87),
            ParseType::T(74),
            ParseType::N(86),
            ParseType::N(181),
            ParseType::T(76),
            ParseType::N(292),
            ParseType::T(73),
            ParseType::N(84),
            ParseType::T(72),
            ParseType::N(181),
        ],
    },
    // 122 - der_class_specifierList: ','^ /* Clipped */ ident : crate::ir::ast::Token  der_class_specifierList;
    Production {
        lhs: 86,
        production: &[ParseType::N(86), ParseType::N(181), ParseType::T(76)],
    },
    // 123 - der_class_specifierList: ;
    Production {
        lhs: 86,
        production: &[],
    },
    // 124 - base_prefix: base_prefixOpt /* Option */;
    Production {
        lhs: 26,
        production: &[ParseType::N(27)],
    },
    // 125 - base_prefixOpt: base_prefixOptGroup;
    Production {
        lhs: 27,
        production: &[ParseType::N(28)],
    },
    // 126 - base_prefixOptGroup: input;
    Production {
        lhs: 28,
        production: &[ParseType::N(207)],
    },
    // 127 - base_prefixOptGroup: output;
    Production {
        lhs: 28,
        production: &[ParseType::N(231)],
    },
    // 128 - base_prefixOpt: ;
    Production {
        lhs: 27,
        production: &[],
    },
    // 129 - enum_list: enumeration_literal enum_listList /* Vec */;
    Production {
        lhs: 127,
        production: &[ParseType::N(128), ParseType::N(130)],
    },
    // 130 - enum_listList: ','^ /* Clipped */ enumeration_literal enum_listList;
    Production {
        lhs: 128,
        production: &[ParseType::N(128), ParseType::N(130), ParseType::T(76)],
    },
    // 131 - enum_listList: ;
    Production {
        lhs: 128,
        production: &[],
    },
    // 132 - enumeration_literal: ident : crate::ir::ast::Token  description;
    Production {
        lhs: 130,
        production: &[ParseType::N(87), ParseType::N(181)],
    },
    // 133 - composition: element_list : crate::modelica_grammar::ElementList  compositionList /* Vec */ compositionOpt /* Option */ compositionOpt0 /* Option */;
    Production {
        lhs: 65,
        production: &[
            ParseType::N(69),
            ParseType::N(68),
            ParseType::N(66),
            ParseType::N(101),
        ],
    },
    // 134 - compositionList: compositionListGroup compositionList;
    Production {
        lhs: 66,
        production: &[ParseType::N(66), ParseType::N(67)],
    },
    // 135 - compositionListGroup: public element_list : crate::modelica_grammar::ElementList ;
    Production {
        lhs: 67,
        production: &[ParseType::N(101), ParseType::N(244)],
    },
    // 136 - compositionListGroup: protected element_list : crate::modelica_grammar::ElementList ;
    Production {
        lhs: 67,
        production: &[ParseType::N(101), ParseType::N(243)],
    },
    // 137 - compositionListGroup: equation_section : crate::modelica_grammar::EquationSection ;
    Production {
        lhs: 67,
        production: &[ParseType::N(134)],
    },
    // 138 - compositionListGroup: algorithm_section : crate::modelica_grammar::AlgorithmSection ;
    Production {
        lhs: 67,
        production: &[ParseType::N(2)],
    },
    // 139 - compositionList: ;
    Production {
        lhs: 66,
        production: &[],
    },
    // 140 - compositionOpt0: annotation_clause ';'^ /* Clipped */;
    Production {
        lhs: 69,
        production: &[ParseType::T(71), ParseType::N(7)],
    },
    // 141 - compositionOpt0: ;
    Production {
        lhs: 69,
        production: &[],
    },
    // 142 - compositionOpt: external^ /* Clipped */ compositionOpt1 /* Option */ compositionOpt2 /* Option */ compositionOpt3 /* Option */ ';'^ /* Clipped */;
    Production {
        lhs: 68,
        production: &[
            ParseType::T(71),
            ParseType::N(72),
            ParseType::N(71),
            ParseType::N(70),
            ParseType::N(147),
        ],
    },
    // 143 - compositionOpt3: annotation_clause;
    Production {
        lhs: 72,
        production: &[ParseType::N(7)],
    },
    // 144 - compositionOpt3: ;
    Production {
        lhs: 72,
        production: &[],
    },
    // 145 - compositionOpt2: external_function_call;
    Production {
        lhs: 71,
        production: &[ParseType::N(148)],
    },
    // 146 - compositionOpt2: ;
    Production {
        lhs: 71,
        production: &[],
    },
    // 147 - compositionOpt1: language_specification;
    Production {
        lhs: 70,
        production: &[ParseType::N(208)],
    },
    // 148 - compositionOpt1: ;
    Production {
        lhs: 70,
        production: &[],
    },
    // 149 - compositionOpt: ;
    Production {
        lhs: 68,
        production: &[],
    },
    // 150 - language_specification: string : crate::ir::ast::Token ;
    Production {
        lhs: 208,
        production: &[ParseType::N(275)],
    },
    // 151 - external_function_call: external_function_callOpt /* Option */ ident : crate::ir::ast::Token  '('^ /* Clipped */ external_function_callOpt0 /* Option */ ')'^ /* Clipped */;
    Production {
        lhs: 148,
        production: &[
            ParseType::T(74),
            ParseType::N(150),
            ParseType::T(73),
            ParseType::N(181),
            ParseType::N(149),
        ],
    },
    // 152 - external_function_callOpt0: expression_list;
    Production {
        lhs: 150,
        production: &[ParseType::N(139)],
    },
    // 153 - external_function_callOpt0: ;
    Production {
        lhs: 150,
        production: &[],
    },
    // 154 - external_function_callOpt: component_reference : crate::ir::ast::ComponentReference  '='^ /* Clipped */;
    Production {
        lhs: 149,
        production: &[ParseType::T(72), ParseType::N(59)],
    },
    // 155 - external_function_callOpt: ;
    Production {
        lhs: 149,
        production: &[],
    },
    // 156 - element_list: element_listList /* Vec */;
    Production {
        lhs: 101,
        production: &[ParseType::N(102)],
    },
    // 157 - element_listList: element ';'^ /* Clipped */ element_listList;
    Production {
        lhs: 102,
        production: &[ParseType::N(102), ParseType::T(71), ParseType::N(94)],
    },
    // 158 - element_listList: ;
    Production {
        lhs: 102,
        production: &[],
    },
    // 159 - element: import_clause;
    Production {
        lhs: 94,
        production: &[ParseType::N(194)],
    },
    // 160 - element: extends_clause;
    Production {
        lhs: 94,
        production: &[ParseType::N(144)],
    },
    // 161 - element: element_definition;
    Production {
        lhs: 94,
        production: &[ParseType::N(95)],
    },
    // 162 - element: element_replaceable_definition;
    Production {
        lhs: 94,
        production: &[ParseType::N(116)],
    },
    // 163 - element_definition: element_definitionOpt /* Option */ element_definitionOpt0 /* Option */ element_definitionOpt1 /* Option */ element_definitionOpt2 /* Option */ element_definitionGroup;
    Production {
        lhs: 95,
        production: &[
            ParseType::N(96),
            ParseType::N(100),
            ParseType::N(99),
            ParseType::N(98),
            ParseType::N(97),
        ],
    },
    // 164 - element_definitionGroup: class_definition : crate::ir::ast::ClassDefinition ;
    Production {
        lhs: 96,
        production: &[ParseType::N(32)],
    },
    // 165 - element_definitionGroup: component_clause;
    Production {
        lhs: 96,
        production: &[ParseType::N(47)],
    },
    // 166 - element_definitionOpt2: outer;
    Production {
        lhs: 100,
        production: &[ParseType::N(230)],
    },
    // 167 - element_definitionOpt2: ;
    Production {
        lhs: 100,
        production: &[],
    },
    // 168 - element_definitionOpt1: inner;
    Production {
        lhs: 99,
        production: &[ParseType::N(206)],
    },
    // 169 - element_definitionOpt1: ;
    Production {
        lhs: 99,
        production: &[],
    },
    // 170 - element_definitionOpt0: final;
    Production {
        lhs: 98,
        production: &[ParseType::N(155)],
    },
    // 171 - element_definitionOpt0: ;
    Production {
        lhs: 98,
        production: &[],
    },
    // 172 - element_definitionOpt: redeclare;
    Production {
        lhs: 97,
        production: &[ParseType::N(249)],
    },
    // 173 - element_definitionOpt: ;
    Production {
        lhs: 97,
        production: &[],
    },
    // 174 - element_replaceable_definition: replaceable element_replaceable_definitionGroup element_replaceable_definitionOpt /* Option */;
    Production {
        lhs: 116,
        production: &[ParseType::N(118), ParseType::N(117), ParseType::N(253)],
    },
    // 175 - element_replaceable_definitionGroup: class_definition : crate::ir::ast::ClassDefinition ;
    Production {
        lhs: 117,
        production: &[ParseType::N(32)],
    },
    // 176 - element_replaceable_definitionGroup: component_clause;
    Production {
        lhs: 117,
        production: &[ParseType::N(47)],
    },
    // 177 - element_replaceable_definitionOpt: constraining_clause description;
    Production {
        lhs: 118,
        production: &[ParseType::N(87), ParseType::N(79)],
    },
    // 178 - element_replaceable_definitionOpt: ;
    Production {
        lhs: 118,
        production: &[],
    },
    // 179 - import_clause: import import_clauseGroup description;
    Production {
        lhs: 194,
        production: &[ParseType::N(87), ParseType::N(195), ParseType::N(193)],
    },
    // 180 - import_clauseGroup: ident : crate::ir::ast::Token  '='^ /* Clipped */ name : crate::ir::ast::Name ;
    Production {
        lhs: 195,
        production: &[ParseType::N(222), ParseType::T(72), ParseType::N(181)],
    },
    // 181 - import_clauseGroup: name : crate::ir::ast::Name  import_clauseOpt /* Option */;
    Production {
        lhs: 195,
        production: &[ParseType::N(196), ParseType::N(222)],
    },
    // 182 - import_clauseOpt: import_clauseOptGroup;
    Production {
        lhs: 196,
        production: &[ParseType::N(197)],
    },
    // 183 - import_clauseOptGroup: '.*';
    Production {
        lhs: 197,
        production: &[ParseType::T(77)],
    },
    // 184 - import_clauseOptGroup: '.' import_clauseOptGroupGroup;
    Production {
        lhs: 197,
        production: &[ParseType::N(198), ParseType::T(78)],
    },
    // 185 - import_clauseOptGroupGroup: '*';
    Production {
        lhs: 198,
        production: &[ParseType::T(79)],
    },
    // 186 - import_clauseOptGroupGroup: '{'^ /* Clipped */ import_list '}'^ /* Clipped */;
    Production {
        lhs: 198,
        production: &[ParseType::T(81), ParseType::N(199), ParseType::T(80)],
    },
    // 187 - import_clauseOpt: ;
    Production {
        lhs: 196,
        production: &[],
    },
    // 188 - import_list: ident : crate::ir::ast::Token  import_listList /* Vec */;
    Production {
        lhs: 199,
        production: &[ParseType::N(200), ParseType::N(181)],
    },
    // 189 - import_listList: ','^ /* Clipped */ ident : crate::ir::ast::Token  import_listList;
    Production {
        lhs: 200,
        production: &[ParseType::N(200), ParseType::N(181), ParseType::T(76)],
    },
    // 190 - import_listList: ;
    Production {
        lhs: 200,
        production: &[],
    },
    // 191 - extends_clause: extends^ /* Clipped */ type_specifier extends_clauseOpt /* Option */ extends_clauseOpt0 /* Option */;
    Production {
        lhs: 144,
        production: &[
            ParseType::N(146),
            ParseType::N(145),
            ParseType::N(292),
            ParseType::N(141),
        ],
    },
    // 192 - extends_clauseOpt0: annotation_clause;
    Production {
        lhs: 146,
        production: &[ParseType::N(7)],
    },
    // 193 - extends_clauseOpt0: ;
    Production {
        lhs: 146,
        production: &[],
    },
    // 194 - extends_clauseOpt: class_or_inheritance_modification;
    Production {
        lhs: 145,
        production: &[ParseType::N(36)],
    },
    // 195 - extends_clauseOpt: ;
    Production {
        lhs: 145,
        production: &[],
    },
    // 196 - constraining_clause: constrainedby^ /* Clipped */ type_specifier constraining_clauseOpt /* Option */;
    Production {
        lhs: 79,
        production: &[ParseType::N(80), ParseType::N(292), ParseType::N(78)],
    },
    // 197 - constraining_clauseOpt: class_modification;
    Production {
        lhs: 80,
        production: &[ParseType::N(34)],
    },
    // 198 - constraining_clauseOpt: ;
    Production {
        lhs: 80,
        production: &[],
    },
    // 199 - class_or_inheritance_modification: '('^ /* Clipped */ class_or_inheritance_modificationOpt /* Option */ ')'^ /* Clipped */;
    Production {
        lhs: 36,
        production: &[ParseType::T(74), ParseType::N(37), ParseType::T(73)],
    },
    // 200 - class_or_inheritance_modificationOpt: argument_or_inheritance_modification_list;
    Production {
        lhs: 37,
        production: &[ParseType::N(11)],
    },
    // 201 - class_or_inheritance_modificationOpt: ;
    Production {
        lhs: 37,
        production: &[],
    },
    // 202 - argument_or_inheritance_modification_list: argument_or_inheritance_modification_listGroup argument_or_inheritance_modification_listList /* Vec */;
    Production {
        lhs: 11,
        production: &[ParseType::N(13), ParseType::N(12)],
    },
    // 203 - argument_or_inheritance_modification_listGroup: argument : crate::ir::ast::Expression ;
    Production {
        lhs: 12,
        production: &[ParseType::N(8)],
    },
    // 204 - argument_or_inheritance_modification_listGroup: inheritance_modification;
    Production {
        lhs: 12,
        production: &[ParseType::N(203)],
    },
    // 205 - argument_or_inheritance_modification_listList: ','^ /* Clipped */ argument_or_inheritance_modification_listListGroup argument_or_inheritance_modification_listList;
    Production {
        lhs: 13,
        production: &[ParseType::N(13), ParseType::N(14), ParseType::T(76)],
    },
    // 206 - argument_or_inheritance_modification_listListGroup: argument : crate::ir::ast::Expression ;
    Production {
        lhs: 14,
        production: &[ParseType::N(8)],
    },
    // 207 - argument_or_inheritance_modification_listListGroup: inheritance_modification;
    Production {
        lhs: 14,
        production: &[ParseType::N(203)],
    },
    // 208 - argument_or_inheritance_modification_listList: ;
    Production {
        lhs: 13,
        production: &[],
    },
    // 209 - inheritance_modification: break^ /* Clipped */ inheritance_modificationGroup;
    Production {
        lhs: 203,
        production: &[ParseType::N(204), ParseType::N(30)],
    },
    // 210 - inheritance_modificationGroup: connect_equation;
    Production {
        lhs: 204,
        production: &[ParseType::N(75)],
    },
    // 211 - inheritance_modificationGroup: ident : crate::ir::ast::Token ;
    Production {
        lhs: 204,
        production: &[ParseType::N(181)],
    },
    // 212 - component_clause: type_prefix type_specifier component_clauseOpt /* Option */ component_list : crate::modelica_grammar::ComponentList ;
    Production {
        lhs: 47,
        production: &[
            ParseType::N(53),
            ParseType::N(49),
            ParseType::N(292),
            ParseType::N(285),
        ],
    },
    // 213 - component_clauseOpt: array_subscripts : crate::modelica_grammar::ArraySubscripts ;
    Production {
        lhs: 49,
        production: &[ParseType::N(24)],
    },
    // 214 - component_clauseOpt: ;
    Production {
        lhs: 49,
        production: &[],
    },
    // 215 - type_prefix: type_prefixOpt /* Option */ type_prefixOpt0 /* Option */ type_prefixOpt1 /* Option */;
    Production {
        lhs: 285,
        production: &[ParseType::N(289), ParseType::N(287), ParseType::N(286)],
    },
    // 216 - type_prefixOpt1: type_prefixOpt1Group;
    Production {
        lhs: 289,
        production: &[ParseType::N(290)],
    },
    // 217 - type_prefixOpt1Group: input;
    Production {
        lhs: 290,
        production: &[ParseType::N(207)],
    },
    // 218 - type_prefixOpt1Group: output;
    Production {
        lhs: 290,
        production: &[ParseType::N(231)],
    },
    // 219 - type_prefixOpt1: ;
    Production {
        lhs: 289,
        production: &[],
    },
    // 220 - type_prefixOpt0: type_prefixOpt0Group;
    Production {
        lhs: 287,
        production: &[ParseType::N(288)],
    },
    // 221 - type_prefixOpt0Group: discrete;
    Production {
        lhs: 288,
        production: &[ParseType::N(92)],
    },
    // 222 - type_prefixOpt0Group: parameter;
    Production {
        lhs: 288,
        production: &[ParseType::N(240)],
    },
    // 223 - type_prefixOpt0Group: constant;
    Production {
        lhs: 288,
        production: &[ParseType::N(77)],
    },
    // 224 - type_prefixOpt0: ;
    Production {
        lhs: 287,
        production: &[],
    },
    // 225 - type_prefixOpt: type_prefixOptGroup;
    Production {
        lhs: 286,
        production: &[ParseType::N(291)],
    },
    // 226 - type_prefixOptGroup: flow;
    Production {
        lhs: 291,
        production: &[ParseType::N(156)],
    },
    // 227 - type_prefixOptGroup: stream;
    Production {
        lhs: 291,
        production: &[ParseType::N(274)],
    },
    // 228 - type_prefixOpt: ;
    Production {
        lhs: 286,
        production: &[],
    },
    // 229 - component_list: component_declaration component_listList /* Vec */;
    Production {
        lhs: 53,
        production: &[ParseType::N(54), ParseType::N(50)],
    },
    // 230 - component_listList: ','^ /* Clipped */ component_declaration component_listList;
    Production {
        lhs: 54,
        production: &[ParseType::N(54), ParseType::N(50), ParseType::T(76)],
    },
    // 231 - component_listList: ;
    Production {
        lhs: 54,
        production: &[],
    },
    // 232 - component_declaration: declaration component_declarationOpt /* Option */ description;
    Production {
        lhs: 50,
        production: &[ParseType::N(87), ParseType::N(52), ParseType::N(81)],
    },
    // 233 - component_declarationOpt: condition_attribute;
    Production {
        lhs: 52,
        production: &[ParseType::N(73)],
    },
    // 234 - component_declarationOpt: ;
    Production {
        lhs: 52,
        production: &[],
    },
    // 235 - condition_attribute: if^ /* Clipped */ expression : crate::ir::ast::Expression ;
    Production {
        lhs: 73,
        production: &[ParseType::N(138), ParseType::N(182)],
    },
    // 236 - declaration: ident : crate::ir::ast::Token  declarationOpt /* Option */ declarationOpt0 /* Option */;
    Production {
        lhs: 81,
        production: &[ParseType::N(83), ParseType::N(82), ParseType::N(181)],
    },
    // 237 - declarationOpt0: modification;
    Production {
        lhs: 83,
        production: &[ParseType::N(218)],
    },
    // 238 - declarationOpt0: ;
    Production {
        lhs: 83,
        production: &[],
    },
    // 239 - declarationOpt: array_subscripts : crate::modelica_grammar::ArraySubscripts ;
    Production {
        lhs: 82,
        production: &[ParseType::N(24)],
    },
    // 240 - declarationOpt: ;
    Production {
        lhs: 82,
        production: &[],
    },
    // 241 - modification: class_modification modificationOpt /* Option */;
    Production {
        lhs: 218,
        production: &[ParseType::N(219), ParseType::N(34)],
    },
    // 242 - modification: '='^ /* Clipped */ modification_expression;
    Production {
        lhs: 218,
        production: &[ParseType::N(220), ParseType::T(72)],
    },
    // 243 - modificationOpt: '='^ /* Clipped */ modification_expression;
    Production {
        lhs: 219,
        production: &[ParseType::N(220), ParseType::T(72)],
    },
    // 244 - modificationOpt: ;
    Production {
        lhs: 219,
        production: &[],
    },
    // 245 - modification_expression: expression : crate::ir::ast::Expression ;
    Production {
        lhs: 220,
        production: &[ParseType::N(138)],
    },
    // 246 - modification_expression: break;
    Production {
        lhs: 220,
        production: &[ParseType::N(30)],
    },
    // 247 - class_modification: '('^ /* Clipped */ class_modificationOpt /* Option */ ')'^ /* Clipped */;
    Production {
        lhs: 34,
        production: &[ParseType::T(74), ParseType::N(35), ParseType::T(73)],
    },
    // 248 - class_modificationOpt: argument_list : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 35,
        production: &[ParseType::N(9)],
    },
    // 249 - class_modificationOpt: ;
    Production {
        lhs: 35,
        production: &[],
    },
    // 250 - argument_list: argument : crate::ir::ast::Expression  argument_listList /* Vec */;
    Production {
        lhs: 9,
        production: &[ParseType::N(10), ParseType::N(8)],
    },
    // 251 - argument_listList: ','^ /* Clipped */ argument : crate::ir::ast::Expression  argument_listList;
    Production {
        lhs: 10,
        production: &[ParseType::N(10), ParseType::N(8), ParseType::T(76)],
    },
    // 252 - argument_listList: ;
    Production {
        lhs: 10,
        production: &[],
    },
    // 253 - argument: element_modification_or_replaceable;
    Production {
        lhs: 8,
        production: &[ParseType::N(105)],
    },
    // 254 - argument: element_redeclaration;
    Production {
        lhs: 8,
        production: &[ParseType::N(109)],
    },
    // 255 - element_modification_or_replaceable: element_modification_or_replaceableOpt /* Option */ element_modification_or_replaceableOpt0 /* Option */ element_modification_or_replaceableGroup;
    Production {
        lhs: 105,
        production: &[ParseType::N(106), ParseType::N(108), ParseType::N(107)],
    },
    // 256 - element_modification_or_replaceableGroup: element_modification;
    Production {
        lhs: 106,
        production: &[ParseType::N(103)],
    },
    // 257 - element_modification_or_replaceableGroup: element_replaceable;
    Production {
        lhs: 106,
        production: &[ParseType::N(113)],
    },
    // 258 - element_modification_or_replaceableOpt0: final;
    Production {
        lhs: 108,
        production: &[ParseType::N(155)],
    },
    // 259 - element_modification_or_replaceableOpt0: ;
    Production {
        lhs: 108,
        production: &[],
    },
    // 260 - element_modification_or_replaceableOpt: each;
    Production {
        lhs: 107,
        production: &[ParseType::N(93)],
    },
    // 261 - element_modification_or_replaceableOpt: ;
    Production {
        lhs: 107,
        production: &[],
    },
    // 262 - element_modification: name : crate::ir::ast::Name  element_modificationOpt /* Option */ description_string : crate::modelica_grammar::TokenList ;
    Production {
        lhs: 103,
        production: &[ParseType::N(89), ParseType::N(104), ParseType::N(222)],
    },
    // 263 - element_modificationOpt: modification;
    Production {
        lhs: 104,
        production: &[ParseType::N(218)],
    },
    // 264 - element_modificationOpt: ;
    Production {
        lhs: 104,
        production: &[],
    },
    // 265 - element_redeclaration: redeclare element_redeclarationOpt /* Option */ element_redeclarationOpt0 /* Option */ element_redeclarationGroup;
    Production {
        lhs: 109,
        production: &[
            ParseType::N(110),
            ParseType::N(112),
            ParseType::N(111),
            ParseType::N(249),
        ],
    },
    // 266 - element_redeclarationGroup: short_class_definition;
    Production {
        lhs: 110,
        production: &[ParseType::N(255)],
    },
    // 267 - element_redeclarationGroup: component_clause1;
    Production {
        lhs: 110,
        production: &[ParseType::N(48)],
    },
    // 268 - element_redeclarationGroup: element_replaceable;
    Production {
        lhs: 110,
        production: &[ParseType::N(113)],
    },
    // 269 - element_redeclarationOpt0: final;
    Production {
        lhs: 112,
        production: &[ParseType::N(155)],
    },
    // 270 - element_redeclarationOpt0: ;
    Production {
        lhs: 112,
        production: &[],
    },
    // 271 - element_redeclarationOpt: each;
    Production {
        lhs: 111,
        production: &[ParseType::N(93)],
    },
    // 272 - element_redeclarationOpt: ;
    Production {
        lhs: 111,
        production: &[],
    },
    // 273 - element_replaceable: replaceable element_replaceableGroup element_replaceableOpt /* Option */;
    Production {
        lhs: 113,
        production: &[ParseType::N(115), ParseType::N(114), ParseType::N(253)],
    },
    // 274 - element_replaceableGroup: short_class_definition;
    Production {
        lhs: 114,
        production: &[ParseType::N(255)],
    },
    // 275 - element_replaceableGroup: component_clause1;
    Production {
        lhs: 114,
        production: &[ParseType::N(48)],
    },
    // 276 - element_replaceableOpt: constraining_clause;
    Production {
        lhs: 115,
        production: &[ParseType::N(79)],
    },
    // 277 - element_replaceableOpt: ;
    Production {
        lhs: 115,
        production: &[],
    },
    // 278 - component_clause1: type_prefix type_specifier component_declaration1;
    Production {
        lhs: 48,
        production: &[ParseType::N(51), ParseType::N(292), ParseType::N(285)],
    },
    // 279 - component_declaration1: declaration description;
    Production {
        lhs: 51,
        production: &[ParseType::N(87), ParseType::N(81)],
    },
    // 280 - short_class_definition: class_prefixes short_class_specifier;
    Production {
        lhs: 255,
        production: &[ParseType::N(256), ParseType::N(38)],
    },
    // 281 - equation_section: equation_sectionOpt /* Option */ equation^ /* Clipped */ equation_sectionList /* Vec */;
    Production {
        lhs: 134,
        production: &[ParseType::N(135), ParseType::N(131), ParseType::N(136)],
    },
    // 282 - equation_sectionList: some_equation : crate::ir::ast::Equation  ';'^ /* Clipped */ equation_sectionList;
    Production {
        lhs: 135,
        production: &[ParseType::N(135), ParseType::T(71), ParseType::N(262)],
    },
    // 283 - equation_sectionList: ;
    Production {
        lhs: 135,
        production: &[],
    },
    // 284 - equation_sectionOpt: initial^ /* Clipped */;
    Production {
        lhs: 136,
        production: &[ParseType::N(205)],
    },
    // 285 - equation_sectionOpt: ;
    Production {
        lhs: 136,
        production: &[],
    },
    // 286 - algorithm_section: algorithm_sectionOpt /* Option */ algorithm^ /* Clipped */ algorithm_sectionList /* Vec */;
    Production {
        lhs: 2,
        production: &[ParseType::N(3), ParseType::N(1), ParseType::N(4)],
    },
    // 287 - algorithm_sectionList: statement : crate::ir::ast::Statement  ';'^ /* Clipped */ algorithm_sectionList;
    Production {
        lhs: 3,
        production: &[ParseType::N(3), ParseType::T(71), ParseType::N(265)],
    },
    // 288 - algorithm_sectionList: ;
    Production {
        lhs: 3,
        production: &[],
    },
    // 289 - algorithm_sectionOpt: initial^ /* Clipped */;
    Production {
        lhs: 4,
        production: &[ParseType::N(205)],
    },
    // 290 - algorithm_sectionOpt: ;
    Production {
        lhs: 4,
        production: &[],
    },
    // 291 - some_equation_option: simple_equation;
    Production {
        lhs: 263,
        production: &[ParseType::N(257)],
    },
    // 292 - some_equation_option: if_equation;
    Production {
        lhs: 263,
        production: &[ParseType::N(183)],
    },
    // 293 - some_equation_option: for_equation;
    Production {
        lhs: 263,
        production: &[ParseType::N(158)],
    },
    // 294 - some_equation_option: connect_equation;
    Production {
        lhs: 263,
        production: &[ParseType::N(75)],
    },
    // 295 - some_equation_option: when_equation;
    Production {
        lhs: 263,
        production: &[ParseType::N(298)],
    },
    // 296 - simple_equation: simple_expression : crate::ir::ast::Expression  simple_equationOpt /* Option */;
    Production {
        lhs: 257,
        production: &[ParseType::N(258), ParseType::N(259)],
    },
    // 297 - simple_equationOpt: '='^ /* Clipped */ expression : crate::ir::ast::Expression ;
    Production {
        lhs: 258,
        production: &[ParseType::N(138), ParseType::T(72)],
    },
    // 298 - simple_equationOpt: ;
    Production {
        lhs: 258,
        production: &[],
    },
    // 299 - some_equation: some_equation_option description;
    Production {
        lhs: 262,
        production: &[ParseType::N(87), ParseType::N(263)],
    },
    // 300 - statement_option: component_statement;
    Production {
        lhs: 268,
        production: &[ParseType::N(63)],
    },
    // 301 - statement_option: function_call_output_statement;
    Production {
        lhs: 268,
        production: &[ParseType::N(176)],
    },
    // 302 - statement_option: break;
    Production {
        lhs: 268,
        production: &[ParseType::N(30)],
    },
    // 303 - statement_option: return;
    Production {
        lhs: 268,
        production: &[ParseType::N(254)],
    },
    // 304 - statement_option: if_statement;
    Production {
        lhs: 268,
        production: &[ParseType::N(189)],
    },
    // 305 - statement_option: for_statement;
    Production {
        lhs: 268,
        production: &[ParseType::N(164)],
    },
    // 306 - statement_option: while_statement;
    Production {
        lhs: 268,
        production: &[ParseType::N(303)],
    },
    // 307 - statement_option: when_statement;
    Production {
        lhs: 268,
        production: &[ParseType::N(300)],
    },
    // 308 - component_statement: component_reference : crate::ir::ast::ComponentReference  component_statementGroup;
    Production {
        lhs: 63,
        production: &[ParseType::N(64), ParseType::N(59)],
    },
    // 309 - component_statementGroup: ':='^ /* Clipped */ expression : crate::ir::ast::Expression ;
    Production {
        lhs: 64,
        production: &[ParseType::N(138), ParseType::T(82)],
    },
    // 310 - component_statementGroup: function_call_args : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 64,
        production: &[ParseType::N(174)],
    },
    // 311 - function_call_output_statement: '('^ /* Clipped */ output_expression_list : crate::modelica_grammar::ExpressionList  ')'^ /* Clipped */ ':='^ /* Clipped */ component_reference : crate::ir::ast::ComponentReference  function_call_args : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 176,
        production: &[
            ParseType::N(174),
            ParseType::N(59),
            ParseType::T(82),
            ParseType::T(74),
            ParseType::N(232),
            ParseType::T(73),
        ],
    },
    // 312 - statement: statement_option description;
    Production {
        lhs: 265,
        production: &[ParseType::N(87), ParseType::N(268)],
    },
    // 313 - equation_block: expression : crate::ir::ast::Expression  then^ /* Clipped */ equation_blockList /* Vec */;
    Production {
        lhs: 132,
        production: &[ParseType::N(133), ParseType::N(279), ParseType::N(138)],
    },
    // 314 - equation_blockList: some_equation : crate::ir::ast::Equation  ';'^ /* Clipped */ equation_blockList;
    Production {
        lhs: 133,
        production: &[ParseType::N(133), ParseType::T(71), ParseType::N(262)],
    },
    // 315 - equation_blockList: ;
    Production {
        lhs: 133,
        production: &[],
    },
    // 316 - if_equation: if^ /* Clipped */ equation_block@if : crate::ir::ast::EquationBlock  if_equationList /* Vec */ if_equationOpt /* Option */ end^ /* Clipped */ if^ /* Clipped */;
    Production {
        lhs: 183,
        production: &[
            ParseType::N(182),
            ParseType::N(123),
            ParseType::N(185),
            ParseType::N(184),
            ParseType::N(132),
            ParseType::N(182),
        ],
    },
    // 317 - if_equationList: elseif^ /* Clipped */ equation_block@elseif : crate::ir::ast::EquationBlock  if_equationList;
    Production {
        lhs: 184,
        production: &[ParseType::N(184), ParseType::N(132), ParseType::N(120)],
    },
    // 318 - if_equationList: ;
    Production {
        lhs: 184,
        production: &[],
    },
    // 319 - if_equationOpt: else^ /* Clipped */ if_equationOptList /* Vec */;
    Production {
        lhs: 185,
        production: &[ParseType::N(186), ParseType::N(119)],
    },
    // 320 - if_equationOptList: some_equation : crate::ir::ast::Equation  ';'^ /* Clipped */ if_equationOptList;
    Production {
        lhs: 186,
        production: &[ParseType::N(186), ParseType::T(71), ParseType::N(262)],
    },
    // 321 - if_equationOptList: ;
    Production {
        lhs: 186,
        production: &[],
    },
    // 322 - if_equationOpt: ;
    Production {
        lhs: 185,
        production: &[],
    },
    // 323 - statement_block: expression : crate::ir::ast::Expression  then^ /* Clipped */ statement_blockList /* Vec */;
    Production {
        lhs: 266,
        production: &[ParseType::N(267), ParseType::N(279), ParseType::N(138)],
    },
    // 324 - statement_blockList: statement : crate::ir::ast::Statement  ';'^ /* Clipped */ statement_blockList;
    Production {
        lhs: 267,
        production: &[ParseType::N(267), ParseType::T(71), ParseType::N(265)],
    },
    // 325 - statement_blockList: ;
    Production {
        lhs: 267,
        production: &[],
    },
    // 326 - if_statement: if^ /* Clipped */ statement_block@if : crate::ir::ast::StatementBlock  if_statementList /* Vec */ if_statementOpt /* Option */ end^ /* Clipped */ if^ /* Clipped */;
    Production {
        lhs: 189,
        production: &[
            ParseType::N(182),
            ParseType::N(123),
            ParseType::N(191),
            ParseType::N(190),
            ParseType::N(266),
            ParseType::N(182),
        ],
    },
    // 327 - if_statementList: elseif^ /* Clipped */ statement_block@elseif : crate::ir::ast::StatementBlock  if_statementList;
    Production {
        lhs: 190,
        production: &[ParseType::N(190), ParseType::N(266), ParseType::N(120)],
    },
    // 328 - if_statementList: ;
    Production {
        lhs: 190,
        production: &[],
    },
    // 329 - if_statementOpt: else^ /* Clipped */ if_statementOptList /* Vec */;
    Production {
        lhs: 191,
        production: &[ParseType::N(192), ParseType::N(119)],
    },
    // 330 - if_statementOptList: statement@else : crate::ir::ast::Statement  ';'^ /* Clipped */ if_statementOptList;
    Production {
        lhs: 192,
        production: &[ParseType::N(192), ParseType::T(71), ParseType::N(265)],
    },
    // 331 - if_statementOptList: ;
    Production {
        lhs: 192,
        production: &[],
    },
    // 332 - if_statementOpt: ;
    Production {
        lhs: 191,
        production: &[],
    },
    // 333 - for_equation: for^ /* Clipped */ for_indices loop^ /* Clipped */ for_equationList /* Vec */ end^ /* Clipped */ for^ /* Clipped */;
    Production {
        lhs: 158,
        production: &[
            ParseType::N(157),
            ParseType::N(123),
            ParseType::N(159),
            ParseType::N(216),
            ParseType::N(162),
            ParseType::N(157),
        ],
    },
    // 334 - for_equationList: some_equation : crate::ir::ast::Equation  ';'^ /* Clipped */ for_equationList;
    Production {
        lhs: 159,
        production: &[ParseType::N(159), ParseType::T(71), ParseType::N(262)],
    },
    // 335 - for_equationList: ;
    Production {
        lhs: 159,
        production: &[],
    },
    // 336 - for_statement: for^ /* Clipped */ for_indices loop^ /* Clipped */ for_statementList /* Vec */ end^ /* Clipped */ for^ /* Clipped */;
    Production {
        lhs: 164,
        production: &[
            ParseType::N(157),
            ParseType::N(123),
            ParseType::N(165),
            ParseType::N(216),
            ParseType::N(162),
            ParseType::N(157),
        ],
    },
    // 337 - for_statementList: statement : crate::ir::ast::Statement  ';'^ /* Clipped */ for_statementList;
    Production {
        lhs: 165,
        production: &[ParseType::N(165), ParseType::T(71), ParseType::N(265)],
    },
    // 338 - for_statementList: ;
    Production {
        lhs: 165,
        production: &[],
    },
    // 339 - for_indices: for_index for_indicesList /* Vec */;
    Production {
        lhs: 162,
        production: &[ParseType::N(163), ParseType::N(160)],
    },
    // 340 - for_indicesList: ','^ /* Clipped */ for_index for_indicesList;
    Production {
        lhs: 163,
        production: &[ParseType::N(163), ParseType::N(160), ParseType::T(76)],
    },
    // 341 - for_indicesList: ;
    Production {
        lhs: 163,
        production: &[],
    },
    // 342 - for_index: ident : crate::ir::ast::Token  for_indexOpt /* Option */;
    Production {
        lhs: 160,
        production: &[ParseType::N(161), ParseType::N(181)],
    },
    // 343 - for_indexOpt: in^ /* Clipped */ expression : crate::ir::ast::Expression ;
    Production {
        lhs: 161,
        production: &[ParseType::N(138), ParseType::N(202)],
    },
    // 344 - for_indexOpt: ;
    Production {
        lhs: 161,
        production: &[],
    },
    // 345 - while_statement: while^ /* Clipped */ expression : crate::ir::ast::Expression  loop^ /* Clipped */ while_statementList /* Vec */ end^ /* Clipped */ while^ /* Clipped */;
    Production {
        lhs: 303,
        production: &[
            ParseType::N(302),
            ParseType::N(123),
            ParseType::N(304),
            ParseType::N(216),
            ParseType::N(138),
            ParseType::N(302),
        ],
    },
    // 346 - while_statementList: statement : crate::ir::ast::Statement  ';'^ /* Clipped */ while_statementList;
    Production {
        lhs: 304,
        production: &[ParseType::N(304), ParseType::T(71), ParseType::N(265)],
    },
    // 347 - while_statementList: ;
    Production {
        lhs: 304,
        production: &[],
    },
    // 348 - when_equation: when^ /* Clipped */ equation_block@when : crate::ir::ast::EquationBlock  when_equationList /* Vec */ end^ /* Clipped */ when^ /* Clipped */;
    Production {
        lhs: 298,
        production: &[
            ParseType::N(297),
            ParseType::N(123),
            ParseType::N(299),
            ParseType::N(132),
            ParseType::N(297),
        ],
    },
    // 349 - when_equationList: elsewhen^ /* Clipped */ equation_block@elsewhen : crate::ir::ast::EquationBlock  when_equationList;
    Production {
        lhs: 299,
        production: &[ParseType::N(299), ParseType::N(132), ParseType::N(121)],
    },
    // 350 - when_equationList: ;
    Production {
        lhs: 299,
        production: &[],
    },
    // 351 - when_statement: when^ /* Clipped */ statement_block@when : crate::ir::ast::StatementBlock  when_statementList /* Vec */ end^ /* Clipped */ when^ /* Clipped */;
    Production {
        lhs: 300,
        production: &[
            ParseType::N(297),
            ParseType::N(123),
            ParseType::N(301),
            ParseType::N(266),
            ParseType::N(297),
        ],
    },
    // 352 - when_statementList: elsewhen^ /* Clipped */ statement_block@elsewhen : crate::ir::ast::StatementBlock  when_statementList;
    Production {
        lhs: 301,
        production: &[ParseType::N(301), ParseType::N(266), ParseType::N(121)],
    },
    // 353 - when_statementList: ;
    Production {
        lhs: 301,
        production: &[],
    },
    // 354 - connect_equation: connect^ /* Clipped */ '('^ /* Clipped */ component_reference : crate::ir::ast::ComponentReference  ','^ /* Clipped */ component_reference : crate::ir::ast::ComponentReference  ')'^ /* Clipped */;
    Production {
        lhs: 75,
        production: &[
            ParseType::T(74),
            ParseType::N(59),
            ParseType::T(76),
            ParseType::N(59),
            ParseType::T(73),
            ParseType::N(74),
        ],
    },
    // 355 - expression: simple_expression : crate::ir::ast::Expression ;
    Production {
        lhs: 138,
        production: &[ParseType::N(259)],
    },
    // 356 - expression: if_expression;
    Production {
        lhs: 138,
        production: &[ParseType::N(187)],
    },
    // 357 - if_expression: if^ /* Clipped */ expression : crate::ir::ast::Expression  then^ /* Clipped */ expression : crate::ir::ast::Expression  if_expressionList /* Vec */ else^ /* Clipped */ expression : crate::ir::ast::Expression ;
    Production {
        lhs: 187,
        production: &[
            ParseType::N(138),
            ParseType::N(119),
            ParseType::N(188),
            ParseType::N(138),
            ParseType::N(279),
            ParseType::N(138),
            ParseType::N(182),
        ],
    },
    // 358 - if_expressionList: elseif^ /* Clipped */ expression : crate::ir::ast::Expression  then^ /* Clipped */ expression : crate::ir::ast::Expression  if_expressionList;
    Production {
        lhs: 188,
        production: &[
            ParseType::N(188),
            ParseType::N(138),
            ParseType::N(279),
            ParseType::N(138),
            ParseType::N(120),
        ],
    },
    // 359 - if_expressionList: ;
    Production {
        lhs: 188,
        production: &[],
    },
    // 360 - simple_expression: logical_expression : crate::ir::ast::Expression  simple_expressionOpt /* Option */;
    Production {
        lhs: 259,
        production: &[ParseType::N(260), ParseType::N(209)],
    },
    // 361 - simple_expressionOpt: ':'^ /* Clipped */ logical_expression : crate::ir::ast::Expression  simple_expressionOpt0 /* Option */;
    Production {
        lhs: 260,
        production: &[ParseType::N(261), ParseType::N(209), ParseType::T(75)],
    },
    // 362 - simple_expressionOpt0: ':'^ /* Clipped */ logical_expression : crate::ir::ast::Expression ;
    Production {
        lhs: 261,
        production: &[ParseType::N(209), ParseType::T(75)],
    },
    // 363 - simple_expressionOpt0: ;
    Production {
        lhs: 261,
        production: &[],
    },
    // 364 - simple_expressionOpt: ;
    Production {
        lhs: 260,
        production: &[],
    },
    // 365 - logical_expression: logical_term : crate::ir::ast::Expression  logical_expressionList /* Vec */;
    Production {
        lhs: 209,
        production: &[ParseType::N(210), ParseType::N(213)],
    },
    // 366 - logical_expressionList: or^ /* Clipped */ logical_term : crate::ir::ast::Expression  logical_expressionList;
    Production {
        lhs: 210,
        production: &[ParseType::N(210), ParseType::N(213), ParseType::N(229)],
    },
    // 367 - logical_expressionList: ;
    Production {
        lhs: 210,
        production: &[],
    },
    // 368 - logical_term: logical_factor : crate::ir::ast::Expression  logical_termList /* Vec */;
    Production {
        lhs: 213,
        production: &[ParseType::N(214), ParseType::N(211)],
    },
    // 369 - logical_termList: and^ /* Clipped */ logical_factor : crate::ir::ast::Expression  logical_termList;
    Production {
        lhs: 214,
        production: &[ParseType::N(214), ParseType::N(211), ParseType::N(5)],
    },
    // 370 - logical_termList: ;
    Production {
        lhs: 214,
        production: &[],
    },
    // 371 - logical_factor: logical_factorOpt /* Option */ relation : crate::ir::ast::Expression ;
    Production {
        lhs: 211,
        production: &[ParseType::N(250), ParseType::N(212)],
    },
    // 372 - logical_factorOpt: not;
    Production {
        lhs: 212,
        production: &[ParseType::N(227)],
    },
    // 373 - logical_factorOpt: ;
    Production {
        lhs: 212,
        production: &[],
    },
    // 374 - relation: arithmetic_expression : crate::ir::ast::Expression  relationOpt /* Option */;
    Production {
        lhs: 250,
        production: &[ParseType::N(251), ParseType::N(15)],
    },
    // 375 - relationOpt: relational_operator arithmetic_expression : crate::ir::ast::Expression ;
    Production {
        lhs: 251,
        production: &[ParseType::N(15), ParseType::N(252)],
    },
    // 376 - relationOpt: ;
    Production {
        lhs: 251,
        production: &[],
    },
    // 377 - relational_operator: '<';
    Production {
        lhs: 252,
        production: &[ParseType::T(83)],
    },
    // 378 - relational_operator: '<=';
    Production {
        lhs: 252,
        production: &[ParseType::T(84)],
    },
    // 379 - relational_operator: '>';
    Production {
        lhs: 252,
        production: &[ParseType::T(85)],
    },
    // 380 - relational_operator: '>=';
    Production {
        lhs: 252,
        production: &[ParseType::T(86)],
    },
    // 381 - relational_operator: '==';
    Production {
        lhs: 252,
        production: &[ParseType::T(87)],
    },
    // 382 - relational_operator: '<>';
    Production {
        lhs: 252,
        production: &[ParseType::T(88)],
    },
    // 383 - arithmetic_expression: arithmetic_expressionOpt /* Option */ term : crate::ir::ast::Expression  arithmetic_expressionList /* Vec */;
    Production {
        lhs: 15,
        production: &[ParseType::N(16), ParseType::N(277), ParseType::N(17)],
    },
    // 384 - arithmetic_expressionList: add_operator term : crate::ir::ast::Expression  arithmetic_expressionList;
    Production {
        lhs: 16,
        production: &[ParseType::N(16), ParseType::N(277), ParseType::N(0)],
    },
    // 385 - arithmetic_expressionList: ;
    Production {
        lhs: 16,
        production: &[],
    },
    // 386 - arithmetic_expressionOpt: add_operator;
    Production {
        lhs: 17,
        production: &[ParseType::N(0)],
    },
    // 387 - arithmetic_expressionOpt: ;
    Production {
        lhs: 17,
        production: &[],
    },
    // 388 - add_operator: '+';
    Production {
        lhs: 0,
        production: &[ParseType::T(89)],
    },
    // 389 - add_operator: '-';
    Production {
        lhs: 0,
        production: &[ParseType::T(90)],
    },
    // 390 - add_operator: '.+';
    Production {
        lhs: 0,
        production: &[ParseType::T(91)],
    },
    // 391 - add_operator: '.-';
    Production {
        lhs: 0,
        production: &[ParseType::T(92)],
    },
    // 392 - term: factor : crate::ir::ast::Expression  termList /* Vec */;
    Production {
        lhs: 277,
        production: &[ParseType::N(278), ParseType::N(151)],
    },
    // 393 - termList: mul_operator factor : crate::ir::ast::Expression  termList;
    Production {
        lhs: 278,
        production: &[ParseType::N(278), ParseType::N(151), ParseType::N(221)],
    },
    // 394 - termList: ;
    Production {
        lhs: 278,
        production: &[],
    },
    // 395 - mul_operator: '*';
    Production {
        lhs: 221,
        production: &[ParseType::T(79)],
    },
    // 396 - mul_operator: '/';
    Production {
        lhs: 221,
        production: &[ParseType::T(93)],
    },
    // 397 - mul_operator: '.*';
    Production {
        lhs: 221,
        production: &[ParseType::T(77)],
    },
    // 398 - mul_operator: './';
    Production {
        lhs: 221,
        production: &[ParseType::T(94)],
    },
    // 399 - factor: primary : crate::ir::ast::Expression  factorList /* Vec */;
    Production {
        lhs: 151,
        production: &[ParseType::N(152), ParseType::N(242)],
    },
    // 400 - factorList: factorListGroup primary : crate::ir::ast::Expression  factorList;
    Production {
        lhs: 152,
        production: &[ParseType::N(152), ParseType::N(242), ParseType::N(153)],
    },
    // 401 - factorListGroup: '^';
    Production {
        lhs: 153,
        production: &[ParseType::T(95)],
    },
    // 402 - factorListGroup: '.^';
    Production {
        lhs: 153,
        production: &[ParseType::T(96)],
    },
    // 403 - factorList: ;
    Production {
        lhs: 152,
        production: &[],
    },
    // 404 - primary: unsigned_number;
    Production {
        lhs: 242,
        production: &[ParseType::N(295)],
    },
    // 405 - primary: string : crate::ir::ast::Token ;
    Production {
        lhs: 242,
        production: &[ParseType::N(275)],
    },
    // 406 - primary: false;
    Production {
        lhs: 242,
        production: &[ParseType::N(154)],
    },
    // 407 - primary: true;
    Production {
        lhs: 242,
        production: &[ParseType::N(280)],
    },
    // 408 - primary: global_function_call;
    Production {
        lhs: 242,
        production: &[ParseType::N(179)],
    },
    // 409 - primary: component_primary;
    Production {
        lhs: 242,
        production: &[ParseType::N(55)],
    },
    // 410 - primary: output_primary;
    Production {
        lhs: 242,
        production: &[ParseType::N(236)],
    },
    // 411 - primary: range_primary;
    Production {
        lhs: 242,
        production: &[ParseType::N(246)],
    },
    // 412 - primary: array_primary;
    Production {
        lhs: 242,
        production: &[ParseType::N(23)],
    },
    // 413 - primary: end;
    Production {
        lhs: 242,
        production: &[ParseType::N(123)],
    },
    // 414 - component_primary: component_reference : crate::ir::ast::ComponentReference  component_primaryOpt /* Option */;
    Production {
        lhs: 55,
        production: &[ParseType::N(56), ParseType::N(59)],
    },
    // 415 - component_primaryOpt: function_call_args : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 56,
        production: &[ParseType::N(174)],
    },
    // 416 - component_primaryOpt: ;
    Production {
        lhs: 56,
        production: &[],
    },
    // 417 - output_primary: '('^ /* Clipped */ output_expression_list : crate::modelica_grammar::ExpressionList  ')'^ /* Clipped */ output_primaryOpt /* Option */;
    Production {
        lhs: 236,
        production: &[
            ParseType::N(237),
            ParseType::T(74),
            ParseType::N(232),
            ParseType::T(73),
        ],
    },
    // 418 - output_primaryOpt: output_primaryOptGroup;
    Production {
        lhs: 237,
        production: &[ParseType::N(238)],
    },
    // 419 - output_primaryOptGroup: array_subscripts : crate::modelica_grammar::ArraySubscripts ;
    Production {
        lhs: 238,
        production: &[ParseType::N(24)],
    },
    // 420 - output_primaryOptGroup: '.'^ /* Clipped */ ident : crate::ir::ast::Token ;
    Production {
        lhs: 238,
        production: &[ParseType::N(181), ParseType::T(78)],
    },
    // 421 - output_primaryOpt: ;
    Production {
        lhs: 237,
        production: &[],
    },
    // 422 - range_primary: '['^ /* Clipped */ expression_list range_primaryList /* Vec */ ']'^ /* Clipped */;
    Production {
        lhs: 246,
        production: &[
            ParseType::T(98),
            ParseType::N(247),
            ParseType::N(139),
            ParseType::T(97),
        ],
    },
    // 423 - range_primaryList: ';'^ /* Clipped */ expression_list range_primaryList;
    Production {
        lhs: 247,
        production: &[ParseType::N(247), ParseType::N(139), ParseType::T(71)],
    },
    // 424 - range_primaryList: ;
    Production {
        lhs: 247,
        production: &[],
    },
    // 425 - array_primary: '{'^ /* Clipped */ array_arguments '}'^ /* Clipped */;
    Production {
        lhs: 23,
        production: &[ParseType::T(81), ParseType::N(18), ParseType::T(80)],
    },
    // 426 - global_function_call: global_function_callGroup function_call_args : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 179,
        production: &[ParseType::N(174), ParseType::N(180)],
    },
    // 427 - global_function_callGroup: der;
    Production {
        lhs: 180,
        production: &[ParseType::N(84)],
    },
    // 428 - global_function_callGroup: initial;
    Production {
        lhs: 180,
        production: &[ParseType::N(205)],
    },
    // 429 - global_function_callGroup: pure;
    Production {
        lhs: 180,
        production: &[ParseType::N(245)],
    },
    // 430 - unsigned_number: unsigned_integer : crate::ir::ast::Token ;
    Production {
        lhs: 295,
        production: &[ParseType::N(294)],
    },
    // 431 - unsigned_number: unsigned_real : crate::ir::ast::Token ;
    Production {
        lhs: 295,
        production: &[ParseType::N(296)],
    },
    // 432 - type_specifier: type_specifierOpt /* Option */ name : crate::ir::ast::Name ;
    Production {
        lhs: 292,
        production: &[ParseType::N(222), ParseType::N(293)],
    },
    // 433 - type_specifierOpt: '.'^ /* Clipped */;
    Production {
        lhs: 293,
        production: &[ParseType::T(78)],
    },
    // 434 - type_specifierOpt: ;
    Production {
        lhs: 293,
        production: &[],
    },
    // 435 - name: ident : crate::ir::ast::Token  nameList /* Vec */;
    Production {
        lhs: 222,
        production: &[ParseType::N(223), ParseType::N(181)],
    },
    // 436 - nameList: '.'^ /* Clipped */ ident : crate::ir::ast::Token  nameList;
    Production {
        lhs: 223,
        production: &[ParseType::N(223), ParseType::N(181), ParseType::T(78)],
    },
    // 437 - nameList: ;
    Production {
        lhs: 223,
        production: &[],
    },
    // 438 - component_reference: component_referenceOpt /* Option */ ident : crate::ir::ast::Token  component_referenceOpt0 /* Option */ component_referenceList /* Vec */;
    Production {
        lhs: 59,
        production: &[
            ParseType::N(60),
            ParseType::N(62),
            ParseType::N(181),
            ParseType::N(61),
        ],
    },
    // 439 - component_referenceList: component_ref_part : crate::ir::ast::ComponentRefPart  component_referenceList;
    Production {
        lhs: 60,
        production: &[ParseType::N(60), ParseType::N(57)],
    },
    // 440 - component_referenceList: ;
    Production {
        lhs: 60,
        production: &[],
    },
    // 441 - component_referenceOpt0: array_subscripts : crate::modelica_grammar::ArraySubscripts ;
    Production {
        lhs: 62,
        production: &[ParseType::N(24)],
    },
    // 442 - component_referenceOpt0: ;
    Production {
        lhs: 62,
        production: &[],
    },
    // 443 - component_referenceOpt: '.'^ /* Clipped */;
    Production {
        lhs: 61,
        production: &[ParseType::T(78)],
    },
    // 444 - component_referenceOpt: ;
    Production {
        lhs: 61,
        production: &[],
    },
    // 445 - component_ref_part: '.'^ /* Clipped */ ident : crate::ir::ast::Token  component_ref_partOpt /* Option */;
    Production {
        lhs: 57,
        production: &[ParseType::N(58), ParseType::N(181), ParseType::T(78)],
    },
    // 446 - component_ref_partOpt: array_subscripts : crate::modelica_grammar::ArraySubscripts ;
    Production {
        lhs: 58,
        production: &[ParseType::N(24)],
    },
    // 447 - component_ref_partOpt: ;
    Production {
        lhs: 58,
        production: &[],
    },
    // 448 - function_call_args: '('^ /* Clipped */ function_call_argsOpt /* Option */ ')'^ /* Clipped */;
    Production {
        lhs: 174,
        production: &[ParseType::T(74), ParseType::N(175), ParseType::T(73)],
    },
    // 449 - function_call_argsOpt: function_arguments : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 175,
        production: &[ParseType::N(168)],
    },
    // 450 - function_call_argsOpt: ;
    Production {
        lhs: 175,
        production: &[],
    },
    // 451 - function_arguments: expression : crate::ir::ast::Expression  function_argumentsOpt /* Option */;
    Production {
        lhs: 168,
        production: &[ParseType::N(169), ParseType::N(138)],
    },
    // 452 - function_arguments: function_partial_application function_argumentsOpt0 /* Option */;
    Production {
        lhs: 168,
        production: &[ParseType::N(170), ParseType::N(177)],
    },
    // 453 - function_arguments: named_arguments;
    Production {
        lhs: 168,
        production: &[ParseType::N(225)],
    },
    // 454 - function_argumentsOpt0: ','^ /* Clipped */ function_arguments_non_first : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 170,
        production: &[ParseType::N(172), ParseType::T(76)],
    },
    // 455 - function_argumentsOpt0: ;
    Production {
        lhs: 170,
        production: &[],
    },
    // 456 - function_argumentsOpt: function_argumentsOptGroup;
    Production {
        lhs: 169,
        production: &[ParseType::N(171)],
    },
    // 457 - function_argumentsOptGroup: ','^ /* Clipped */ function_arguments_non_first : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 171,
        production: &[ParseType::N(172), ParseType::T(76)],
    },
    // 458 - function_argumentsOptGroup: for for_indices;
    Production {
        lhs: 171,
        production: &[ParseType::N(162), ParseType::N(157)],
    },
    // 459 - function_argumentsOpt: ;
    Production {
        lhs: 169,
        production: &[],
    },
    // 460 - function_arguments_non_first: function_argument : crate::ir::ast::Expression  function_arguments_non_firstOpt /* Option */;
    Production {
        lhs: 172,
        production: &[ParseType::N(173), ParseType::N(167)],
    },
    // 461 - function_arguments_non_first: named_arguments;
    Production {
        lhs: 172,
        production: &[ParseType::N(225)],
    },
    // 462 - function_arguments_non_firstOpt: ','^ /* Clipped */ function_arguments_non_first : crate::modelica_grammar::ExpressionList ;
    Production {
        lhs: 173,
        production: &[ParseType::N(172), ParseType::T(76)],
    },
    // 463 - function_arguments_non_firstOpt: ;
    Production {
        lhs: 173,
        production: &[],
    },
    // 464 - array_arguments: expression : crate::ir::ast::Expression  array_argumentsOpt /* Option */;
    Production {
        lhs: 18,
        production: &[ParseType::N(19), ParseType::N(138)],
    },
    // 465 - array_argumentsOpt: array_argumentsOptGroup;
    Production {
        lhs: 19,
        production: &[ParseType::N(20)],
    },
    // 466 - array_argumentsOptGroup: ','^ /* Clipped */ array_arguments_non_first;
    Production {
        lhs: 20,
        production: &[ParseType::N(21), ParseType::T(76)],
    },
    // 467 - array_argumentsOptGroup: for for_indices;
    Production {
        lhs: 20,
        production: &[ParseType::N(162), ParseType::N(157)],
    },
    // 468 - array_argumentsOpt: ;
    Production {
        lhs: 19,
        production: &[],
    },
    // 469 - array_arguments_non_first: expression : crate::ir::ast::Expression  array_arguments_non_firstOpt /* Option */;
    Production {
        lhs: 21,
        production: &[ParseType::N(22), ParseType::N(138)],
    },
    // 470 - array_arguments_non_firstOpt: ','^ /* Clipped */ array_arguments_non_first;
    Production {
        lhs: 22,
        production: &[ParseType::N(21), ParseType::T(76)],
    },
    // 471 - array_arguments_non_firstOpt: ;
    Production {
        lhs: 22,
        production: &[],
    },
    // 472 - named_arguments: named_argument named_argumentsOpt /* Option */;
    Production {
        lhs: 225,
        production: &[ParseType::N(226), ParseType::N(224)],
    },
    // 473 - named_argumentsOpt: ','^ /* Clipped */ named_arguments;
    Production {
        lhs: 226,
        production: &[ParseType::N(225), ParseType::T(76)],
    },
    // 474 - named_argumentsOpt: ;
    Production {
        lhs: 226,
        production: &[],
    },
    // 475 - named_argument: ident : crate::ir::ast::Token  '='^ /* Clipped */ function_argument : crate::ir::ast::Expression ;
    Production {
        lhs: 224,
        production: &[ParseType::N(167), ParseType::T(72), ParseType::N(181)],
    },
    // 476 - function_argument: function_partial_application;
    Production {
        lhs: 167,
        production: &[ParseType::N(177)],
    },
    // 477 - function_argument: expression : crate::ir::ast::Expression ;
    Production {
        lhs: 167,
        production: &[ParseType::N(138)],
    },
    // 478 - function_partial_application: function type_specifier '('^ /* Clipped */ function_partial_applicationOpt /* Option */ ')'^ /* Clipped */;
    Production {
        lhs: 177,
        production: &[
            ParseType::T(74),
            ParseType::N(178),
            ParseType::T(73),
            ParseType::N(292),
            ParseType::N(166),
        ],
    },
    // 479 - function_partial_applicationOpt: named_arguments;
    Production {
        lhs: 178,
        production: &[ParseType::N(225)],
    },
    // 480 - function_partial_applicationOpt: ;
    Production {
        lhs: 178,
        production: &[],
    },
    // 481 - output_expression_list: output_expression_listOpt /* Option */ output_expression_listList /* Vec */;
    Production {
        lhs: 232,
        production: &[ParseType::N(233), ParseType::N(234)],
    },
    // 482 - output_expression_listList: ','^ /* Clipped */ output_expression_listOpt0 /* Option */ output_expression_listList;
    Production {
        lhs: 233,
        production: &[ParseType::N(233), ParseType::N(235), ParseType::T(76)],
    },
    // 483 - output_expression_listList: ;
    Production {
        lhs: 233,
        production: &[],
    },
    // 484 - output_expression_listOpt0: expression : crate::ir::ast::Expression ;
    Production {
        lhs: 235,
        production: &[ParseType::N(138)],
    },
    // 485 - output_expression_listOpt0: ;
    Production {
        lhs: 235,
        production: &[],
    },
    // 486 - output_expression_listOpt: expression : crate::ir::ast::Expression ;
    Production {
        lhs: 234,
        production: &[ParseType::N(138)],
    },
    // 487 - output_expression_listOpt: ;
    Production {
        lhs: 234,
        production: &[],
    },
    // 488 - expression_list: expression : crate::ir::ast::Expression  expression_listList /* Vec */;
    Production {
        lhs: 139,
        production: &[ParseType::N(140), ParseType::N(138)],
    },
    // 489 - expression_listList: ','^ /* Clipped */ expression : crate::ir::ast::Expression  expression_listList;
    Production {
        lhs: 140,
        production: &[ParseType::N(140), ParseType::N(138), ParseType::T(76)],
    },
    // 490 - expression_listList: ;
    Production {
        lhs: 140,
        production: &[],
    },
    // 491 - array_subscripts: '['^ /* Clipped */ subscript : crate::ir::ast::Subscript  array_subscriptsList /* Vec */ ']'^ /* Clipped */;
    Production {
        lhs: 24,
        production: &[
            ParseType::T(98),
            ParseType::N(25),
            ParseType::N(276),
            ParseType::T(97),
        ],
    },
    // 492 - array_subscriptsList: ','^ /* Clipped */ subscript : crate::ir::ast::Subscript  array_subscriptsList;
    Production {
        lhs: 25,
        production: &[ParseType::N(25), ParseType::N(276), ParseType::T(76)],
    },
    // 493 - array_subscriptsList: ;
    Production {
        lhs: 25,
        production: &[],
    },
    // 494 - subscript: ':';
    Production {
        lhs: 276,
        production: &[ParseType::T(75)],
    },
    // 495 - subscript: expression : crate::ir::ast::Expression ;
    Production {
        lhs: 276,
        production: &[ParseType::N(138)],
    },
    // 496 - description: description_string : crate::modelica_grammar::TokenList  descriptionOpt /* Option */;
    Production {
        lhs: 87,
        production: &[ParseType::N(88), ParseType::N(89)],
    },
    // 497 - descriptionOpt: annotation_clause;
    Production {
        lhs: 88,
        production: &[ParseType::N(7)],
    },
    // 498 - descriptionOpt: ;
    Production {
        lhs: 88,
        production: &[],
    },
    // 499 - description_string: description_stringOpt /* Option */;
    Production {
        lhs: 89,
        production: &[ParseType::N(90)],
    },
    // 500 - description_stringOpt: string : crate::ir::ast::Token  description_stringOptList /* Vec */;
    Production {
        lhs: 90,
        production: &[ParseType::N(91), ParseType::N(275)],
    },
    // 501 - description_stringOptList: '+'^ /* Clipped */ string : crate::ir::ast::Token  description_stringOptList;
    Production {
        lhs: 91,
        production: &[ParseType::N(91), ParseType::N(275), ParseType::T(89)],
    },
    // 502 - description_stringOptList: ;
    Production {
        lhs: 91,
        production: &[],
    },
    // 503 - description_stringOpt: ;
    Production {
        lhs: 90,
        production: &[],
    },
    // 504 - annotation_clause: annotation class_modification;
    Production {
        lhs: 7,
        production: &[ParseType::N(34), ParseType::N(6)],
    },
];

static SCANNERS: Lazy<Vec<ScannerConfig>> = Lazy::new(|| {
    vec![ScannerConfig::new(
        "INITIAL",
        Tokenizer::build(TERMINALS, SCANNER_0.0, SCANNER_0.1).unwrap(),
        &[],
    )]
});

pub fn parse<T>(
    input: &str,
    file_name: T,
    user_actions: &mut ModelicaGrammar,
) -> Result<ParseTree, ParolError>
where
    T: AsRef<Path>,
{
    let mut llk_parser = LLKParser::new(
        269,
        LOOKAHEAD_AUTOMATA,
        PRODUCTIONS,
        TERMINAL_NAMES,
        NON_TERMINALS,
    );
    llk_parser.trim_parse_tree();

    // Initialize wrapper
    let mut user_actions = ModelicaGrammarAuto::new(user_actions);
    llk_parser.parse(
        TokenStream::new(input, file_name, &SCANNERS, MAX_K).unwrap(),
        &mut user_actions,
    )
}
